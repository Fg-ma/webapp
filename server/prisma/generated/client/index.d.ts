
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model collections
 * 
 */
export type collections = $Result.DefaultSelection<Prisma.$collectionsPayload>
/**
 * Model collections_images
 * 
 */
export type collections_images = $Result.DefaultSelection<Prisma.$collections_imagesPayload>
/**
 * Model collections_sheets
 * 
 */
export type collections_sheets = $Result.DefaultSelection<Prisma.$collections_sheetsPayload>
/**
 * Model collections_videos
 * 
 */
export type collections_videos = $Result.DefaultSelection<Prisma.$collections_videosPayload>
/**
 * Model entities
 * 
 */
export type entities = $Result.DefaultSelection<Prisma.$entitiesPayload>
/**
 * Model entities_images
 * 
 */
export type entities_images = $Result.DefaultSelection<Prisma.$entities_imagesPayload>
/**
 * Model entities_references
 * 
 */
export type entities_references = $Result.DefaultSelection<Prisma.$entities_referencesPayload>
/**
 * Model entities_sheets
 * 
 */
export type entities_sheets = $Result.DefaultSelection<Prisma.$entities_sheetsPayload>
/**
 * Model entities_videos
 * 
 */
export type entities_videos = $Result.DefaultSelection<Prisma.$entities_videosPayload>
/**
 * Model groups
 * 
 */
export type groups = $Result.DefaultSelection<Prisma.$groupsPayload>
/**
 * Model groups_members
 * 
 */
export type groups_members = $Result.DefaultSelection<Prisma.$groups_membersPayload>
/**
 * Model images
 * 
 */
export type images = $Result.DefaultSelection<Prisma.$imagesPayload>
/**
 * Model images_data
 * 
 */
export type images_data = $Result.DefaultSelection<Prisma.$images_dataPayload>
/**
 * Model individuals
 * 
 */
export type individuals = $Result.DefaultSelection<Prisma.$individualsPayload>
/**
 * Model organizations
 * 
 */
export type organizations = $Result.DefaultSelection<Prisma.$organizationsPayload>
/**
 * Model organizations_members
 * 
 */
export type organizations_members = $Result.DefaultSelection<Prisma.$organizations_membersPayload>
/**
 * Model sheets
 * 
 */
export type sheets = $Result.DefaultSelection<Prisma.$sheetsPayload>
/**
 * Model user_credentials
 * 
 */
export type user_credentials = $Result.DefaultSelection<Prisma.$user_credentialsPayload>
/**
 * Model videos
 * 
 */
export type videos = $Result.DefaultSelection<Prisma.$videosPayload>
/**
 * Model videos_data
 * 
 */
export type videos_data = $Result.DefaultSelection<Prisma.$videos_dataPayload>

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Collections
 * const collections = await prisma.collections.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  T extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof T ? T['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<T['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Collections
   * const collections = await prisma.collections.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<T, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<'extends', Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.collections`: Exposes CRUD operations for the **collections** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Collections
    * const collections = await prisma.collections.findMany()
    * ```
    */
  get collections(): Prisma.collectionsDelegate<ExtArgs>;

  /**
   * `prisma.collections_images`: Exposes CRUD operations for the **collections_images** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Collections_images
    * const collections_images = await prisma.collections_images.findMany()
    * ```
    */
  get collections_images(): Prisma.collections_imagesDelegate<ExtArgs>;

  /**
   * `prisma.collections_sheets`: Exposes CRUD operations for the **collections_sheets** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Collections_sheets
    * const collections_sheets = await prisma.collections_sheets.findMany()
    * ```
    */
  get collections_sheets(): Prisma.collections_sheetsDelegate<ExtArgs>;

  /**
   * `prisma.collections_videos`: Exposes CRUD operations for the **collections_videos** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Collections_videos
    * const collections_videos = await prisma.collections_videos.findMany()
    * ```
    */
  get collections_videos(): Prisma.collections_videosDelegate<ExtArgs>;

  /**
   * `prisma.entities`: Exposes CRUD operations for the **entities** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Entities
    * const entities = await prisma.entities.findMany()
    * ```
    */
  get entities(): Prisma.entitiesDelegate<ExtArgs>;

  /**
   * `prisma.entities_images`: Exposes CRUD operations for the **entities_images** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Entities_images
    * const entities_images = await prisma.entities_images.findMany()
    * ```
    */
  get entities_images(): Prisma.entities_imagesDelegate<ExtArgs>;

  /**
   * `prisma.entities_references`: Exposes CRUD operations for the **entities_references** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Entities_references
    * const entities_references = await prisma.entities_references.findMany()
    * ```
    */
  get entities_references(): Prisma.entities_referencesDelegate<ExtArgs>;

  /**
   * `prisma.entities_sheets`: Exposes CRUD operations for the **entities_sheets** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Entities_sheets
    * const entities_sheets = await prisma.entities_sheets.findMany()
    * ```
    */
  get entities_sheets(): Prisma.entities_sheetsDelegate<ExtArgs>;

  /**
   * `prisma.entities_videos`: Exposes CRUD operations for the **entities_videos** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Entities_videos
    * const entities_videos = await prisma.entities_videos.findMany()
    * ```
    */
  get entities_videos(): Prisma.entities_videosDelegate<ExtArgs>;

  /**
   * `prisma.groups`: Exposes CRUD operations for the **groups** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Groups
    * const groups = await prisma.groups.findMany()
    * ```
    */
  get groups(): Prisma.groupsDelegate<ExtArgs>;

  /**
   * `prisma.groups_members`: Exposes CRUD operations for the **groups_members** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Groups_members
    * const groups_members = await prisma.groups_members.findMany()
    * ```
    */
  get groups_members(): Prisma.groups_membersDelegate<ExtArgs>;

  /**
   * `prisma.images`: Exposes CRUD operations for the **images** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Images
    * const images = await prisma.images.findMany()
    * ```
    */
  get images(): Prisma.imagesDelegate<ExtArgs>;

  /**
   * `prisma.images_data`: Exposes CRUD operations for the **images_data** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Images_data
    * const images_data = await prisma.images_data.findMany()
    * ```
    */
  get images_data(): Prisma.images_dataDelegate<ExtArgs>;

  /**
   * `prisma.individuals`: Exposes CRUD operations for the **individuals** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Individuals
    * const individuals = await prisma.individuals.findMany()
    * ```
    */
  get individuals(): Prisma.individualsDelegate<ExtArgs>;

  /**
   * `prisma.organizations`: Exposes CRUD operations for the **organizations** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Organizations
    * const organizations = await prisma.organizations.findMany()
    * ```
    */
  get organizations(): Prisma.organizationsDelegate<ExtArgs>;

  /**
   * `prisma.organizations_members`: Exposes CRUD operations for the **organizations_members** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Organizations_members
    * const organizations_members = await prisma.organizations_members.findMany()
    * ```
    */
  get organizations_members(): Prisma.organizations_membersDelegate<ExtArgs>;

  /**
   * `prisma.sheets`: Exposes CRUD operations for the **sheets** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sheets
    * const sheets = await prisma.sheets.findMany()
    * ```
    */
  get sheets(): Prisma.sheetsDelegate<ExtArgs>;

  /**
   * `prisma.user_credentials`: Exposes CRUD operations for the **user_credentials** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more User_credentials
    * const user_credentials = await prisma.user_credentials.findMany()
    * ```
    */
  get user_credentials(): Prisma.user_credentialsDelegate<ExtArgs>;

  /**
   * `prisma.videos`: Exposes CRUD operations for the **videos** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Videos
    * const videos = await prisma.videos.findMany()
    * ```
    */
  get videos(): Prisma.videosDelegate<ExtArgs>;

  /**
   * `prisma.videos_data`: Exposes CRUD operations for the **videos_data** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Videos_data
    * const videos_data = await prisma.videos_data.findMany()
    * ```
    */
  get videos_data(): Prisma.videos_dataDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql

  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.9.1
   * Query Engine version: 23fdc5965b1e05fc54e5f26ed3de66776b93de64
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON object.
   * This type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from. 
   */
  export type JsonObject = {[Key in string]?: JsonValue}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON array.
   */
  export interface JsonArray extends Array<JsonValue> {}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches any valid JSON value.
   */
  export type JsonValue = string | number | boolean | JsonObject | JsonArray | null

  /**
   * Matches a JSON object.
   * Unlike `JsonObject`, this type allows undefined and read-only properties.
   */
  export type InputJsonObject = {readonly [Key in string]?: InputJsonValue | null}

  /**
   * Matches a JSON array.
   * Unlike `JsonArray`, readonly arrays are assignable to this type.
   */
  export interface InputJsonArray extends ReadonlyArray<InputJsonValue | null> {}

  /**
   * Matches any valid value that can be used as an input for operations like
   * create and update as the value of a JSON field. Unlike `JsonValue`, this
   * type allows read-only arrays and read-only object properties and disallows
   * `null` at the top level.
   *
   * `null` cannot be used as the value of a JSON field because its meaning
   * would be ambiguous. Use `Prisma.JsonNull` to store the JSON null value or
   * `Prisma.DbNull` to clear the JSON value and set the field to the database
   * NULL value instead.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-by-null-values
   */
  export type InputJsonValue = string | number | boolean | InputJsonObject | InputJsonArray | { toJSON(): unknown }

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    collections: 'collections',
    collections_images: 'collections_images',
    collections_sheets: 'collections_sheets',
    collections_videos: 'collections_videos',
    entities: 'entities',
    entities_images: 'entities_images',
    entities_references: 'entities_references',
    entities_sheets: 'entities_sheets',
    entities_videos: 'entities_videos',
    groups: 'groups',
    groups_members: 'groups_members',
    images: 'images',
    images_data: 'images_data',
    individuals: 'individuals',
    organizations: 'organizations',
    organizations_members: 'organizations_members',
    sheets: 'sheets',
    user_credentials: 'user_credentials',
    videos: 'videos',
    videos_data: 'videos_data'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }


  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs}, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    meta: {
      modelProps: 'collections' | 'collections_images' | 'collections_sheets' | 'collections_videos' | 'entities' | 'entities_images' | 'entities_references' | 'entities_sheets' | 'entities_videos' | 'groups' | 'groups_members' | 'images' | 'images_data' | 'individuals' | 'organizations' | 'organizations_members' | 'sheets' | 'user_credentials' | 'videos' | 'videos_data'
      txIsolationLevel: Prisma.TransactionIsolationLevel
    },
    model: {
      collections: {
        payload: Prisma.$collectionsPayload<ExtArgs>
        fields: Prisma.collectionsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.collectionsFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$collectionsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.collectionsFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$collectionsPayload>
          }
          findFirst: {
            args: Prisma.collectionsFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$collectionsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.collectionsFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$collectionsPayload>
          }
          findMany: {
            args: Prisma.collectionsFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$collectionsPayload>[]
          }
          create: {
            args: Prisma.collectionsCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$collectionsPayload>
          }
          createMany: {
            args: Prisma.collectionsCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.collectionsDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$collectionsPayload>
          }
          update: {
            args: Prisma.collectionsUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$collectionsPayload>
          }
          deleteMany: {
            args: Prisma.collectionsDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.collectionsUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.collectionsUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$collectionsPayload>
          }
          aggregate: {
            args: Prisma.CollectionsAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateCollections>
          }
          groupBy: {
            args: Prisma.collectionsGroupByArgs<ExtArgs>,
            result: $Utils.Optional<CollectionsGroupByOutputType>[]
          }
          count: {
            args: Prisma.collectionsCountArgs<ExtArgs>,
            result: $Utils.Optional<CollectionsCountAggregateOutputType> | number
          }
        }
      }
      collections_images: {
        payload: Prisma.$collections_imagesPayload<ExtArgs>
        fields: Prisma.collections_imagesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.collections_imagesFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$collections_imagesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.collections_imagesFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$collections_imagesPayload>
          }
          findFirst: {
            args: Prisma.collections_imagesFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$collections_imagesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.collections_imagesFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$collections_imagesPayload>
          }
          findMany: {
            args: Prisma.collections_imagesFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$collections_imagesPayload>[]
          }
          create: {
            args: Prisma.collections_imagesCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$collections_imagesPayload>
          }
          createMany: {
            args: Prisma.collections_imagesCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.collections_imagesDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$collections_imagesPayload>
          }
          update: {
            args: Prisma.collections_imagesUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$collections_imagesPayload>
          }
          deleteMany: {
            args: Prisma.collections_imagesDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.collections_imagesUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.collections_imagesUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$collections_imagesPayload>
          }
          aggregate: {
            args: Prisma.Collections_imagesAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateCollections_images>
          }
          groupBy: {
            args: Prisma.collections_imagesGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Collections_imagesGroupByOutputType>[]
          }
          count: {
            args: Prisma.collections_imagesCountArgs<ExtArgs>,
            result: $Utils.Optional<Collections_imagesCountAggregateOutputType> | number
          }
        }
      }
      collections_sheets: {
        payload: Prisma.$collections_sheetsPayload<ExtArgs>
        fields: Prisma.collections_sheetsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.collections_sheetsFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$collections_sheetsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.collections_sheetsFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$collections_sheetsPayload>
          }
          findFirst: {
            args: Prisma.collections_sheetsFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$collections_sheetsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.collections_sheetsFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$collections_sheetsPayload>
          }
          findMany: {
            args: Prisma.collections_sheetsFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$collections_sheetsPayload>[]
          }
          create: {
            args: Prisma.collections_sheetsCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$collections_sheetsPayload>
          }
          createMany: {
            args: Prisma.collections_sheetsCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.collections_sheetsDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$collections_sheetsPayload>
          }
          update: {
            args: Prisma.collections_sheetsUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$collections_sheetsPayload>
          }
          deleteMany: {
            args: Prisma.collections_sheetsDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.collections_sheetsUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.collections_sheetsUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$collections_sheetsPayload>
          }
          aggregate: {
            args: Prisma.Collections_sheetsAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateCollections_sheets>
          }
          groupBy: {
            args: Prisma.collections_sheetsGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Collections_sheetsGroupByOutputType>[]
          }
          count: {
            args: Prisma.collections_sheetsCountArgs<ExtArgs>,
            result: $Utils.Optional<Collections_sheetsCountAggregateOutputType> | number
          }
        }
      }
      collections_videos: {
        payload: Prisma.$collections_videosPayload<ExtArgs>
        fields: Prisma.collections_videosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.collections_videosFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$collections_videosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.collections_videosFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$collections_videosPayload>
          }
          findFirst: {
            args: Prisma.collections_videosFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$collections_videosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.collections_videosFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$collections_videosPayload>
          }
          findMany: {
            args: Prisma.collections_videosFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$collections_videosPayload>[]
          }
          create: {
            args: Prisma.collections_videosCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$collections_videosPayload>
          }
          createMany: {
            args: Prisma.collections_videosCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.collections_videosDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$collections_videosPayload>
          }
          update: {
            args: Prisma.collections_videosUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$collections_videosPayload>
          }
          deleteMany: {
            args: Prisma.collections_videosDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.collections_videosUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.collections_videosUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$collections_videosPayload>
          }
          aggregate: {
            args: Prisma.Collections_videosAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateCollections_videos>
          }
          groupBy: {
            args: Prisma.collections_videosGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Collections_videosGroupByOutputType>[]
          }
          count: {
            args: Prisma.collections_videosCountArgs<ExtArgs>,
            result: $Utils.Optional<Collections_videosCountAggregateOutputType> | number
          }
        }
      }
      entities: {
        payload: Prisma.$entitiesPayload<ExtArgs>
        fields: Prisma.entitiesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.entitiesFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$entitiesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.entitiesFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$entitiesPayload>
          }
          findFirst: {
            args: Prisma.entitiesFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$entitiesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.entitiesFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$entitiesPayload>
          }
          findMany: {
            args: Prisma.entitiesFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$entitiesPayload>[]
          }
          create: {
            args: Prisma.entitiesCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$entitiesPayload>
          }
          createMany: {
            args: Prisma.entitiesCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.entitiesDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$entitiesPayload>
          }
          update: {
            args: Prisma.entitiesUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$entitiesPayload>
          }
          deleteMany: {
            args: Prisma.entitiesDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.entitiesUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.entitiesUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$entitiesPayload>
          }
          aggregate: {
            args: Prisma.EntitiesAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateEntities>
          }
          groupBy: {
            args: Prisma.entitiesGroupByArgs<ExtArgs>,
            result: $Utils.Optional<EntitiesGroupByOutputType>[]
          }
          count: {
            args: Prisma.entitiesCountArgs<ExtArgs>,
            result: $Utils.Optional<EntitiesCountAggregateOutputType> | number
          }
        }
      }
      entities_images: {
        payload: Prisma.$entities_imagesPayload<ExtArgs>
        fields: Prisma.entities_imagesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.entities_imagesFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$entities_imagesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.entities_imagesFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$entities_imagesPayload>
          }
          findFirst: {
            args: Prisma.entities_imagesFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$entities_imagesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.entities_imagesFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$entities_imagesPayload>
          }
          findMany: {
            args: Prisma.entities_imagesFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$entities_imagesPayload>[]
          }
          create: {
            args: Prisma.entities_imagesCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$entities_imagesPayload>
          }
          createMany: {
            args: Prisma.entities_imagesCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.entities_imagesDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$entities_imagesPayload>
          }
          update: {
            args: Prisma.entities_imagesUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$entities_imagesPayload>
          }
          deleteMany: {
            args: Prisma.entities_imagesDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.entities_imagesUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.entities_imagesUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$entities_imagesPayload>
          }
          aggregate: {
            args: Prisma.Entities_imagesAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateEntities_images>
          }
          groupBy: {
            args: Prisma.entities_imagesGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Entities_imagesGroupByOutputType>[]
          }
          count: {
            args: Prisma.entities_imagesCountArgs<ExtArgs>,
            result: $Utils.Optional<Entities_imagesCountAggregateOutputType> | number
          }
        }
      }
      entities_references: {
        payload: Prisma.$entities_referencesPayload<ExtArgs>
        fields: Prisma.entities_referencesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.entities_referencesFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$entities_referencesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.entities_referencesFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$entities_referencesPayload>
          }
          findFirst: {
            args: Prisma.entities_referencesFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$entities_referencesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.entities_referencesFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$entities_referencesPayload>
          }
          findMany: {
            args: Prisma.entities_referencesFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$entities_referencesPayload>[]
          }
          create: {
            args: Prisma.entities_referencesCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$entities_referencesPayload>
          }
          createMany: {
            args: Prisma.entities_referencesCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.entities_referencesDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$entities_referencesPayload>
          }
          update: {
            args: Prisma.entities_referencesUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$entities_referencesPayload>
          }
          deleteMany: {
            args: Prisma.entities_referencesDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.entities_referencesUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.entities_referencesUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$entities_referencesPayload>
          }
          aggregate: {
            args: Prisma.Entities_referencesAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateEntities_references>
          }
          groupBy: {
            args: Prisma.entities_referencesGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Entities_referencesGroupByOutputType>[]
          }
          count: {
            args: Prisma.entities_referencesCountArgs<ExtArgs>,
            result: $Utils.Optional<Entities_referencesCountAggregateOutputType> | number
          }
        }
      }
      entities_sheets: {
        payload: Prisma.$entities_sheetsPayload<ExtArgs>
        fields: Prisma.entities_sheetsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.entities_sheetsFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$entities_sheetsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.entities_sheetsFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$entities_sheetsPayload>
          }
          findFirst: {
            args: Prisma.entities_sheetsFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$entities_sheetsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.entities_sheetsFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$entities_sheetsPayload>
          }
          findMany: {
            args: Prisma.entities_sheetsFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$entities_sheetsPayload>[]
          }
          create: {
            args: Prisma.entities_sheetsCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$entities_sheetsPayload>
          }
          createMany: {
            args: Prisma.entities_sheetsCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.entities_sheetsDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$entities_sheetsPayload>
          }
          update: {
            args: Prisma.entities_sheetsUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$entities_sheetsPayload>
          }
          deleteMany: {
            args: Prisma.entities_sheetsDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.entities_sheetsUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.entities_sheetsUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$entities_sheetsPayload>
          }
          aggregate: {
            args: Prisma.Entities_sheetsAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateEntities_sheets>
          }
          groupBy: {
            args: Prisma.entities_sheetsGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Entities_sheetsGroupByOutputType>[]
          }
          count: {
            args: Prisma.entities_sheetsCountArgs<ExtArgs>,
            result: $Utils.Optional<Entities_sheetsCountAggregateOutputType> | number
          }
        }
      }
      entities_videos: {
        payload: Prisma.$entities_videosPayload<ExtArgs>
        fields: Prisma.entities_videosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.entities_videosFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$entities_videosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.entities_videosFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$entities_videosPayload>
          }
          findFirst: {
            args: Prisma.entities_videosFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$entities_videosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.entities_videosFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$entities_videosPayload>
          }
          findMany: {
            args: Prisma.entities_videosFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$entities_videosPayload>[]
          }
          create: {
            args: Prisma.entities_videosCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$entities_videosPayload>
          }
          createMany: {
            args: Prisma.entities_videosCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.entities_videosDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$entities_videosPayload>
          }
          update: {
            args: Prisma.entities_videosUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$entities_videosPayload>
          }
          deleteMany: {
            args: Prisma.entities_videosDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.entities_videosUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.entities_videosUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$entities_videosPayload>
          }
          aggregate: {
            args: Prisma.Entities_videosAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateEntities_videos>
          }
          groupBy: {
            args: Prisma.entities_videosGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Entities_videosGroupByOutputType>[]
          }
          count: {
            args: Prisma.entities_videosCountArgs<ExtArgs>,
            result: $Utils.Optional<Entities_videosCountAggregateOutputType> | number
          }
        }
      }
      groups: {
        payload: Prisma.$groupsPayload<ExtArgs>
        fields: Prisma.groupsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.groupsFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$groupsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.groupsFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$groupsPayload>
          }
          findFirst: {
            args: Prisma.groupsFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$groupsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.groupsFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$groupsPayload>
          }
          findMany: {
            args: Prisma.groupsFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$groupsPayload>[]
          }
          create: {
            args: Prisma.groupsCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$groupsPayload>
          }
          createMany: {
            args: Prisma.groupsCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.groupsDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$groupsPayload>
          }
          update: {
            args: Prisma.groupsUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$groupsPayload>
          }
          deleteMany: {
            args: Prisma.groupsDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.groupsUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.groupsUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$groupsPayload>
          }
          aggregate: {
            args: Prisma.GroupsAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateGroups>
          }
          groupBy: {
            args: Prisma.groupsGroupByArgs<ExtArgs>,
            result: $Utils.Optional<GroupsGroupByOutputType>[]
          }
          count: {
            args: Prisma.groupsCountArgs<ExtArgs>,
            result: $Utils.Optional<GroupsCountAggregateOutputType> | number
          }
        }
      }
      groups_members: {
        payload: Prisma.$groups_membersPayload<ExtArgs>
        fields: Prisma.groups_membersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.groups_membersFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$groups_membersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.groups_membersFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$groups_membersPayload>
          }
          findFirst: {
            args: Prisma.groups_membersFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$groups_membersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.groups_membersFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$groups_membersPayload>
          }
          findMany: {
            args: Prisma.groups_membersFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$groups_membersPayload>[]
          }
          create: {
            args: Prisma.groups_membersCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$groups_membersPayload>
          }
          createMany: {
            args: Prisma.groups_membersCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.groups_membersDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$groups_membersPayload>
          }
          update: {
            args: Prisma.groups_membersUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$groups_membersPayload>
          }
          deleteMany: {
            args: Prisma.groups_membersDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.groups_membersUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.groups_membersUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$groups_membersPayload>
          }
          aggregate: {
            args: Prisma.Groups_membersAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateGroups_members>
          }
          groupBy: {
            args: Prisma.groups_membersGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Groups_membersGroupByOutputType>[]
          }
          count: {
            args: Prisma.groups_membersCountArgs<ExtArgs>,
            result: $Utils.Optional<Groups_membersCountAggregateOutputType> | number
          }
        }
      }
      images: {
        payload: Prisma.$imagesPayload<ExtArgs>
        fields: Prisma.imagesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.imagesFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$imagesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.imagesFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$imagesPayload>
          }
          findFirst: {
            args: Prisma.imagesFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$imagesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.imagesFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$imagesPayload>
          }
          findMany: {
            args: Prisma.imagesFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$imagesPayload>[]
          }
          create: {
            args: Prisma.imagesCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$imagesPayload>
          }
          createMany: {
            args: Prisma.imagesCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.imagesDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$imagesPayload>
          }
          update: {
            args: Prisma.imagesUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$imagesPayload>
          }
          deleteMany: {
            args: Prisma.imagesDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.imagesUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.imagesUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$imagesPayload>
          }
          aggregate: {
            args: Prisma.ImagesAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateImages>
          }
          groupBy: {
            args: Prisma.imagesGroupByArgs<ExtArgs>,
            result: $Utils.Optional<ImagesGroupByOutputType>[]
          }
          count: {
            args: Prisma.imagesCountArgs<ExtArgs>,
            result: $Utils.Optional<ImagesCountAggregateOutputType> | number
          }
        }
      }
      images_data: {
        payload: Prisma.$images_dataPayload<ExtArgs>
        fields: Prisma.images_dataFieldRefs
        operations: {
          findUnique: {
            args: Prisma.images_dataFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$images_dataPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.images_dataFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$images_dataPayload>
          }
          findFirst: {
            args: Prisma.images_dataFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$images_dataPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.images_dataFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$images_dataPayload>
          }
          findMany: {
            args: Prisma.images_dataFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$images_dataPayload>[]
          }
          create: {
            args: Prisma.images_dataCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$images_dataPayload>
          }
          createMany: {
            args: Prisma.images_dataCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.images_dataDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$images_dataPayload>
          }
          update: {
            args: Prisma.images_dataUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$images_dataPayload>
          }
          deleteMany: {
            args: Prisma.images_dataDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.images_dataUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.images_dataUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$images_dataPayload>
          }
          aggregate: {
            args: Prisma.Images_dataAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateImages_data>
          }
          groupBy: {
            args: Prisma.images_dataGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Images_dataGroupByOutputType>[]
          }
          count: {
            args: Prisma.images_dataCountArgs<ExtArgs>,
            result: $Utils.Optional<Images_dataCountAggregateOutputType> | number
          }
        }
      }
      individuals: {
        payload: Prisma.$individualsPayload<ExtArgs>
        fields: Prisma.individualsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.individualsFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$individualsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.individualsFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$individualsPayload>
          }
          findFirst: {
            args: Prisma.individualsFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$individualsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.individualsFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$individualsPayload>
          }
          findMany: {
            args: Prisma.individualsFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$individualsPayload>[]
          }
          create: {
            args: Prisma.individualsCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$individualsPayload>
          }
          createMany: {
            args: Prisma.individualsCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.individualsDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$individualsPayload>
          }
          update: {
            args: Prisma.individualsUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$individualsPayload>
          }
          deleteMany: {
            args: Prisma.individualsDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.individualsUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.individualsUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$individualsPayload>
          }
          aggregate: {
            args: Prisma.IndividualsAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateIndividuals>
          }
          groupBy: {
            args: Prisma.individualsGroupByArgs<ExtArgs>,
            result: $Utils.Optional<IndividualsGroupByOutputType>[]
          }
          count: {
            args: Prisma.individualsCountArgs<ExtArgs>,
            result: $Utils.Optional<IndividualsCountAggregateOutputType> | number
          }
        }
      }
      organizations: {
        payload: Prisma.$organizationsPayload<ExtArgs>
        fields: Prisma.organizationsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.organizationsFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$organizationsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.organizationsFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$organizationsPayload>
          }
          findFirst: {
            args: Prisma.organizationsFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$organizationsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.organizationsFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$organizationsPayload>
          }
          findMany: {
            args: Prisma.organizationsFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$organizationsPayload>[]
          }
          create: {
            args: Prisma.organizationsCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$organizationsPayload>
          }
          createMany: {
            args: Prisma.organizationsCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.organizationsDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$organizationsPayload>
          }
          update: {
            args: Prisma.organizationsUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$organizationsPayload>
          }
          deleteMany: {
            args: Prisma.organizationsDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.organizationsUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.organizationsUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$organizationsPayload>
          }
          aggregate: {
            args: Prisma.OrganizationsAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateOrganizations>
          }
          groupBy: {
            args: Prisma.organizationsGroupByArgs<ExtArgs>,
            result: $Utils.Optional<OrganizationsGroupByOutputType>[]
          }
          count: {
            args: Prisma.organizationsCountArgs<ExtArgs>,
            result: $Utils.Optional<OrganizationsCountAggregateOutputType> | number
          }
        }
      }
      organizations_members: {
        payload: Prisma.$organizations_membersPayload<ExtArgs>
        fields: Prisma.organizations_membersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.organizations_membersFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$organizations_membersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.organizations_membersFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$organizations_membersPayload>
          }
          findFirst: {
            args: Prisma.organizations_membersFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$organizations_membersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.organizations_membersFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$organizations_membersPayload>
          }
          findMany: {
            args: Prisma.organizations_membersFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$organizations_membersPayload>[]
          }
          create: {
            args: Prisma.organizations_membersCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$organizations_membersPayload>
          }
          createMany: {
            args: Prisma.organizations_membersCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.organizations_membersDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$organizations_membersPayload>
          }
          update: {
            args: Prisma.organizations_membersUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$organizations_membersPayload>
          }
          deleteMany: {
            args: Prisma.organizations_membersDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.organizations_membersUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.organizations_membersUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$organizations_membersPayload>
          }
          aggregate: {
            args: Prisma.Organizations_membersAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateOrganizations_members>
          }
          groupBy: {
            args: Prisma.organizations_membersGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Organizations_membersGroupByOutputType>[]
          }
          count: {
            args: Prisma.organizations_membersCountArgs<ExtArgs>,
            result: $Utils.Optional<Organizations_membersCountAggregateOutputType> | number
          }
        }
      }
      sheets: {
        payload: Prisma.$sheetsPayload<ExtArgs>
        fields: Prisma.sheetsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sheetsFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$sheetsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sheetsFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$sheetsPayload>
          }
          findFirst: {
            args: Prisma.sheetsFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$sheetsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sheetsFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$sheetsPayload>
          }
          findMany: {
            args: Prisma.sheetsFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$sheetsPayload>[]
          }
          create: {
            args: Prisma.sheetsCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$sheetsPayload>
          }
          createMany: {
            args: Prisma.sheetsCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.sheetsDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$sheetsPayload>
          }
          update: {
            args: Prisma.sheetsUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$sheetsPayload>
          }
          deleteMany: {
            args: Prisma.sheetsDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.sheetsUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.sheetsUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$sheetsPayload>
          }
          aggregate: {
            args: Prisma.SheetsAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateSheets>
          }
          groupBy: {
            args: Prisma.sheetsGroupByArgs<ExtArgs>,
            result: $Utils.Optional<SheetsGroupByOutputType>[]
          }
          count: {
            args: Prisma.sheetsCountArgs<ExtArgs>,
            result: $Utils.Optional<SheetsCountAggregateOutputType> | number
          }
        }
      }
      user_credentials: {
        payload: Prisma.$user_credentialsPayload<ExtArgs>
        fields: Prisma.user_credentialsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.user_credentialsFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$user_credentialsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.user_credentialsFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$user_credentialsPayload>
          }
          findFirst: {
            args: Prisma.user_credentialsFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$user_credentialsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.user_credentialsFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$user_credentialsPayload>
          }
          findMany: {
            args: Prisma.user_credentialsFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$user_credentialsPayload>[]
          }
          create: {
            args: Prisma.user_credentialsCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$user_credentialsPayload>
          }
          createMany: {
            args: Prisma.user_credentialsCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.user_credentialsDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$user_credentialsPayload>
          }
          update: {
            args: Prisma.user_credentialsUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$user_credentialsPayload>
          }
          deleteMany: {
            args: Prisma.user_credentialsDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.user_credentialsUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.user_credentialsUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$user_credentialsPayload>
          }
          aggregate: {
            args: Prisma.User_credentialsAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateUser_credentials>
          }
          groupBy: {
            args: Prisma.user_credentialsGroupByArgs<ExtArgs>,
            result: $Utils.Optional<User_credentialsGroupByOutputType>[]
          }
          count: {
            args: Prisma.user_credentialsCountArgs<ExtArgs>,
            result: $Utils.Optional<User_credentialsCountAggregateOutputType> | number
          }
        }
      }
      videos: {
        payload: Prisma.$videosPayload<ExtArgs>
        fields: Prisma.videosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.videosFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$videosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.videosFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$videosPayload>
          }
          findFirst: {
            args: Prisma.videosFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$videosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.videosFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$videosPayload>
          }
          findMany: {
            args: Prisma.videosFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$videosPayload>[]
          }
          create: {
            args: Prisma.videosCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$videosPayload>
          }
          createMany: {
            args: Prisma.videosCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.videosDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$videosPayload>
          }
          update: {
            args: Prisma.videosUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$videosPayload>
          }
          deleteMany: {
            args: Prisma.videosDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.videosUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.videosUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$videosPayload>
          }
          aggregate: {
            args: Prisma.VideosAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateVideos>
          }
          groupBy: {
            args: Prisma.videosGroupByArgs<ExtArgs>,
            result: $Utils.Optional<VideosGroupByOutputType>[]
          }
          count: {
            args: Prisma.videosCountArgs<ExtArgs>,
            result: $Utils.Optional<VideosCountAggregateOutputType> | number
          }
        }
      }
      videos_data: {
        payload: Prisma.$videos_dataPayload<ExtArgs>
        fields: Prisma.videos_dataFieldRefs
        operations: {
          findUnique: {
            args: Prisma.videos_dataFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$videos_dataPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.videos_dataFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$videos_dataPayload>
          }
          findFirst: {
            args: Prisma.videos_dataFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$videos_dataPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.videos_dataFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$videos_dataPayload>
          }
          findMany: {
            args: Prisma.videos_dataFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$videos_dataPayload>[]
          }
          create: {
            args: Prisma.videos_dataCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$videos_dataPayload>
          }
          createMany: {
            args: Prisma.videos_dataCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.videos_dataDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$videos_dataPayload>
          }
          update: {
            args: Prisma.videos_dataUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$videos_dataPayload>
          }
          deleteMany: {
            args: Prisma.videos_dataDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.videos_dataUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.videos_dataUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$videos_dataPayload>
          }
          aggregate: {
            args: Prisma.Videos_dataAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateVideos_data>
          }
          groupBy: {
            args: Prisma.videos_dataGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Videos_dataGroupByOutputType>[]
          }
          count: {
            args: Prisma.videos_dataCountArgs<ExtArgs>,
            result: $Utils.Optional<Videos_dataCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<'define', Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type CollectionsCountOutputType
   */

  export type CollectionsCountOutputType = {
    collections_images: number
    collections_sheets: number
    collections_videos: number
  }

  export type CollectionsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    collections_images?: boolean | CollectionsCountOutputTypeCountCollections_imagesArgs
    collections_sheets?: boolean | CollectionsCountOutputTypeCountCollections_sheetsArgs
    collections_videos?: boolean | CollectionsCountOutputTypeCountCollections_videosArgs
  }

  // Custom InputTypes

  /**
   * CollectionsCountOutputType without action
   */
  export type CollectionsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CollectionsCountOutputType
     */
    select?: CollectionsCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * CollectionsCountOutputType without action
   */
  export type CollectionsCountOutputTypeCountCollections_imagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: collections_imagesWhereInput
  }


  /**
   * CollectionsCountOutputType without action
   */
  export type CollectionsCountOutputTypeCountCollections_sheetsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: collections_sheetsWhereInput
  }


  /**
   * CollectionsCountOutputType without action
   */
  export type CollectionsCountOutputTypeCountCollections_videosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: collections_videosWhereInput
  }



  /**
   * Count Type EntitiesCountOutputType
   */

  export type EntitiesCountOutputType = {
    entities_images: number
    entities_sheets: number
    entities_videos: number
  }

  export type EntitiesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    entities_images?: boolean | EntitiesCountOutputTypeCountEntities_imagesArgs
    entities_sheets?: boolean | EntitiesCountOutputTypeCountEntities_sheetsArgs
    entities_videos?: boolean | EntitiesCountOutputTypeCountEntities_videosArgs
  }

  // Custom InputTypes

  /**
   * EntitiesCountOutputType without action
   */
  export type EntitiesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EntitiesCountOutputType
     */
    select?: EntitiesCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * EntitiesCountOutputType without action
   */
  export type EntitiesCountOutputTypeCountEntities_imagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: entities_imagesWhereInput
  }


  /**
   * EntitiesCountOutputType without action
   */
  export type EntitiesCountOutputTypeCountEntities_sheetsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: entities_sheetsWhereInput
  }


  /**
   * EntitiesCountOutputType without action
   */
  export type EntitiesCountOutputTypeCountEntities_videosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: entities_videosWhereInput
  }



  /**
   * Count Type GroupsCountOutputType
   */

  export type GroupsCountOutputType = {
    collections: number
    entities: number
    entities_references: number
    groups_members: number
  }

  export type GroupsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    collections?: boolean | GroupsCountOutputTypeCountCollectionsArgs
    entities?: boolean | GroupsCountOutputTypeCountEntitiesArgs
    entities_references?: boolean | GroupsCountOutputTypeCountEntities_referencesArgs
    groups_members?: boolean | GroupsCountOutputTypeCountGroups_membersArgs
  }

  // Custom InputTypes

  /**
   * GroupsCountOutputType without action
   */
  export type GroupsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GroupsCountOutputType
     */
    select?: GroupsCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * GroupsCountOutputType without action
   */
  export type GroupsCountOutputTypeCountCollectionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: collectionsWhereInput
  }


  /**
   * GroupsCountOutputType without action
   */
  export type GroupsCountOutputTypeCountEntitiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: entitiesWhereInput
  }


  /**
   * GroupsCountOutputType without action
   */
  export type GroupsCountOutputTypeCountEntities_referencesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: entities_referencesWhereInput
  }


  /**
   * GroupsCountOutputType without action
   */
  export type GroupsCountOutputTypeCountGroups_membersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: groups_membersWhereInput
  }



  /**
   * Count Type ImagesCountOutputType
   */

  export type ImagesCountOutputType = {
    collections_images: number
    entities_images: number
  }

  export type ImagesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    collections_images?: boolean | ImagesCountOutputTypeCountCollections_imagesArgs
    entities_images?: boolean | ImagesCountOutputTypeCountEntities_imagesArgs
  }

  // Custom InputTypes

  /**
   * ImagesCountOutputType without action
   */
  export type ImagesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ImagesCountOutputType
     */
    select?: ImagesCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * ImagesCountOutputType without action
   */
  export type ImagesCountOutputTypeCountCollections_imagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: collections_imagesWhereInput
  }


  /**
   * ImagesCountOutputType without action
   */
  export type ImagesCountOutputTypeCountEntities_imagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: entities_imagesWhereInput
  }



  /**
   * Count Type Images_dataCountOutputType
   */

  export type Images_dataCountOutputType = {
    images: number
  }

  export type Images_dataCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    images?: boolean | Images_dataCountOutputTypeCountImagesArgs
  }

  // Custom InputTypes

  /**
   * Images_dataCountOutputType without action
   */
  export type Images_dataCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Images_dataCountOutputType
     */
    select?: Images_dataCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * Images_dataCountOutputType without action
   */
  export type Images_dataCountOutputTypeCountImagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: imagesWhereInput
  }



  /**
   * Count Type IndividualsCountOutputType
   */

  export type IndividualsCountOutputType = {
    collections: number
    entities: number
    entities_references: number
    groups_members: number
    images: number
    organizations_members: number
    sheets: number
    videos: number
  }

  export type IndividualsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    collections?: boolean | IndividualsCountOutputTypeCountCollectionsArgs
    entities?: boolean | IndividualsCountOutputTypeCountEntitiesArgs
    entities_references?: boolean | IndividualsCountOutputTypeCountEntities_referencesArgs
    groups_members?: boolean | IndividualsCountOutputTypeCountGroups_membersArgs
    images?: boolean | IndividualsCountOutputTypeCountImagesArgs
    organizations_members?: boolean | IndividualsCountOutputTypeCountOrganizations_membersArgs
    sheets?: boolean | IndividualsCountOutputTypeCountSheetsArgs
    videos?: boolean | IndividualsCountOutputTypeCountVideosArgs
  }

  // Custom InputTypes

  /**
   * IndividualsCountOutputType without action
   */
  export type IndividualsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IndividualsCountOutputType
     */
    select?: IndividualsCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * IndividualsCountOutputType without action
   */
  export type IndividualsCountOutputTypeCountCollectionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: collectionsWhereInput
  }


  /**
   * IndividualsCountOutputType without action
   */
  export type IndividualsCountOutputTypeCountEntitiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: entitiesWhereInput
  }


  /**
   * IndividualsCountOutputType without action
   */
  export type IndividualsCountOutputTypeCountEntities_referencesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: entities_referencesWhereInput
  }


  /**
   * IndividualsCountOutputType without action
   */
  export type IndividualsCountOutputTypeCountGroups_membersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: groups_membersWhereInput
  }


  /**
   * IndividualsCountOutputType without action
   */
  export type IndividualsCountOutputTypeCountImagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: imagesWhereInput
  }


  /**
   * IndividualsCountOutputType without action
   */
  export type IndividualsCountOutputTypeCountOrganizations_membersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: organizations_membersWhereInput
  }


  /**
   * IndividualsCountOutputType without action
   */
  export type IndividualsCountOutputTypeCountSheetsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sheetsWhereInput
  }


  /**
   * IndividualsCountOutputType without action
   */
  export type IndividualsCountOutputTypeCountVideosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: videosWhereInput
  }



  /**
   * Count Type OrganizationsCountOutputType
   */

  export type OrganizationsCountOutputType = {
    collections: number
    entities: number
    entities_references: number
    organizations_members: number
  }

  export type OrganizationsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    collections?: boolean | OrganizationsCountOutputTypeCountCollectionsArgs
    entities?: boolean | OrganizationsCountOutputTypeCountEntitiesArgs
    entities_references?: boolean | OrganizationsCountOutputTypeCountEntities_referencesArgs
    organizations_members?: boolean | OrganizationsCountOutputTypeCountOrganizations_membersArgs
  }

  // Custom InputTypes

  /**
   * OrganizationsCountOutputType without action
   */
  export type OrganizationsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrganizationsCountOutputType
     */
    select?: OrganizationsCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * OrganizationsCountOutputType without action
   */
  export type OrganizationsCountOutputTypeCountCollectionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: collectionsWhereInput
  }


  /**
   * OrganizationsCountOutputType without action
   */
  export type OrganizationsCountOutputTypeCountEntitiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: entitiesWhereInput
  }


  /**
   * OrganizationsCountOutputType without action
   */
  export type OrganizationsCountOutputTypeCountEntities_referencesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: entities_referencesWhereInput
  }


  /**
   * OrganizationsCountOutputType without action
   */
  export type OrganizationsCountOutputTypeCountOrganizations_membersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: organizations_membersWhereInput
  }



  /**
   * Count Type SheetsCountOutputType
   */

  export type SheetsCountOutputType = {
    collections_sheets: number
    entities_sheets: number
  }

  export type SheetsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    collections_sheets?: boolean | SheetsCountOutputTypeCountCollections_sheetsArgs
    entities_sheets?: boolean | SheetsCountOutputTypeCountEntities_sheetsArgs
  }

  // Custom InputTypes

  /**
   * SheetsCountOutputType without action
   */
  export type SheetsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SheetsCountOutputType
     */
    select?: SheetsCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * SheetsCountOutputType without action
   */
  export type SheetsCountOutputTypeCountCollections_sheetsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: collections_sheetsWhereInput
  }


  /**
   * SheetsCountOutputType without action
   */
  export type SheetsCountOutputTypeCountEntities_sheetsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: entities_sheetsWhereInput
  }



  /**
   * Count Type VideosCountOutputType
   */

  export type VideosCountOutputType = {
    collections_videos: number
    entities_videos: number
  }

  export type VideosCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    collections_videos?: boolean | VideosCountOutputTypeCountCollections_videosArgs
    entities_videos?: boolean | VideosCountOutputTypeCountEntities_videosArgs
  }

  // Custom InputTypes

  /**
   * VideosCountOutputType without action
   */
  export type VideosCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VideosCountOutputType
     */
    select?: VideosCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * VideosCountOutputType without action
   */
  export type VideosCountOutputTypeCountCollections_videosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: collections_videosWhereInput
  }


  /**
   * VideosCountOutputType without action
   */
  export type VideosCountOutputTypeCountEntities_videosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: entities_videosWhereInput
  }



  /**
   * Count Type Videos_dataCountOutputType
   */

  export type Videos_dataCountOutputType = {
    videos: number
  }

  export type Videos_dataCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    videos?: boolean | Videos_dataCountOutputTypeCountVideosArgs
  }

  // Custom InputTypes

  /**
   * Videos_dataCountOutputType without action
   */
  export type Videos_dataCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Videos_dataCountOutputType
     */
    select?: Videos_dataCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * Videos_dataCountOutputType without action
   */
  export type Videos_dataCountOutputTypeCountVideosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: videosWhereInput
  }



  /**
   * Models
   */

  /**
   * Model collections
   */

  export type AggregateCollections = {
    _count: CollectionsCountAggregateOutputType | null
    _avg: CollectionsAvgAggregateOutputType | null
    _sum: CollectionsSumAggregateOutputType | null
    _min: CollectionsMinAggregateOutputType | null
    _max: CollectionsMaxAggregateOutputType | null
  }

  export type CollectionsAvgAggregateOutputType = {
    collection_id: number | null
    individual_id: number | null
    group_id: number | null
    organization_id: number | null
  }

  export type CollectionsSumAggregateOutputType = {
    collection_id: number | null
    individual_id: number | null
    group_id: number | null
    organization_id: number | null
  }

  export type CollectionsMinAggregateOutputType = {
    collection_id: number | null
    collection_name: string | null
    individual_id: number | null
    group_id: number | null
    organization_id: number | null
  }

  export type CollectionsMaxAggregateOutputType = {
    collection_id: number | null
    collection_name: string | null
    individual_id: number | null
    group_id: number | null
    organization_id: number | null
  }

  export type CollectionsCountAggregateOutputType = {
    collection_id: number
    collection_name: number
    individual_id: number
    group_id: number
    organization_id: number
    _all: number
  }


  export type CollectionsAvgAggregateInputType = {
    collection_id?: true
    individual_id?: true
    group_id?: true
    organization_id?: true
  }

  export type CollectionsSumAggregateInputType = {
    collection_id?: true
    individual_id?: true
    group_id?: true
    organization_id?: true
  }

  export type CollectionsMinAggregateInputType = {
    collection_id?: true
    collection_name?: true
    individual_id?: true
    group_id?: true
    organization_id?: true
  }

  export type CollectionsMaxAggregateInputType = {
    collection_id?: true
    collection_name?: true
    individual_id?: true
    group_id?: true
    organization_id?: true
  }

  export type CollectionsCountAggregateInputType = {
    collection_id?: true
    collection_name?: true
    individual_id?: true
    group_id?: true
    organization_id?: true
    _all?: true
  }

  export type CollectionsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which collections to aggregate.
     */
    where?: collectionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of collections to fetch.
     */
    orderBy?: collectionsOrderByWithRelationInput | collectionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: collectionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` collections from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` collections.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned collections
    **/
    _count?: true | CollectionsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CollectionsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CollectionsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CollectionsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CollectionsMaxAggregateInputType
  }

  export type GetCollectionsAggregateType<T extends CollectionsAggregateArgs> = {
        [P in keyof T & keyof AggregateCollections]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCollections[P]>
      : GetScalarType<T[P], AggregateCollections[P]>
  }




  export type collectionsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: collectionsWhereInput
    orderBy?: collectionsOrderByWithAggregationInput | collectionsOrderByWithAggregationInput[]
    by: CollectionsScalarFieldEnum[] | CollectionsScalarFieldEnum
    having?: collectionsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CollectionsCountAggregateInputType | true
    _avg?: CollectionsAvgAggregateInputType
    _sum?: CollectionsSumAggregateInputType
    _min?: CollectionsMinAggregateInputType
    _max?: CollectionsMaxAggregateInputType
  }

  export type CollectionsGroupByOutputType = {
    collection_id: number
    collection_name: string
    individual_id: number | null
    group_id: number | null
    organization_id: number | null
    _count: CollectionsCountAggregateOutputType | null
    _avg: CollectionsAvgAggregateOutputType | null
    _sum: CollectionsSumAggregateOutputType | null
    _min: CollectionsMinAggregateOutputType | null
    _max: CollectionsMaxAggregateOutputType | null
  }

  type GetCollectionsGroupByPayload<T extends collectionsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CollectionsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CollectionsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CollectionsGroupByOutputType[P]>
            : GetScalarType<T[P], CollectionsGroupByOutputType[P]>
        }
      >
    >


  export type collectionsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    collection_id?: boolean
    collection_name?: boolean
    individual_id?: boolean
    group_id?: boolean
    organization_id?: boolean
    individuals?: boolean | collections$individualsArgs<ExtArgs>
    organizations?: boolean | collections$organizationsArgs<ExtArgs>
    groups?: boolean | collections$groupsArgs<ExtArgs>
    collections_images?: boolean | collections$collections_imagesArgs<ExtArgs>
    collections_sheets?: boolean | collections$collections_sheetsArgs<ExtArgs>
    collections_videos?: boolean | collections$collections_videosArgs<ExtArgs>
    _count?: boolean | CollectionsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["collections"]>

  export type collectionsSelectScalar = {
    collection_id?: boolean
    collection_name?: boolean
    individual_id?: boolean
    group_id?: boolean
    organization_id?: boolean
  }

  export type collectionsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    individuals?: boolean | collections$individualsArgs<ExtArgs>
    organizations?: boolean | collections$organizationsArgs<ExtArgs>
    groups?: boolean | collections$groupsArgs<ExtArgs>
    collections_images?: boolean | collections$collections_imagesArgs<ExtArgs>
    collections_sheets?: boolean | collections$collections_sheetsArgs<ExtArgs>
    collections_videos?: boolean | collections$collections_videosArgs<ExtArgs>
    _count?: boolean | CollectionsCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $collectionsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "collections"
    objects: {
      individuals: Prisma.$individualsPayload<ExtArgs> | null
      organizations: Prisma.$organizationsPayload<ExtArgs> | null
      groups: Prisma.$groupsPayload<ExtArgs> | null
      collections_images: Prisma.$collections_imagesPayload<ExtArgs>[]
      collections_sheets: Prisma.$collections_sheetsPayload<ExtArgs>[]
      collections_videos: Prisma.$collections_videosPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      collection_id: number
      collection_name: string
      individual_id: number | null
      group_id: number | null
      organization_id: number | null
    }, ExtArgs["result"]["collections"]>
    composites: {}
  }


  type collectionsGetPayload<S extends boolean | null | undefined | collectionsDefaultArgs> = $Result.GetResult<Prisma.$collectionsPayload, S>

  type collectionsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<collectionsFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: CollectionsCountAggregateInputType | true
    }

  export interface collectionsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['collections'], meta: { name: 'collections' } }
    /**
     * Find zero or one Collections that matches the filter.
     * @param {collectionsFindUniqueArgs} args - Arguments to find a Collections
     * @example
     * // Get one Collections
     * const collections = await prisma.collections.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends collectionsFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, collectionsFindUniqueArgs<ExtArgs>>
    ): Prisma__collectionsClient<$Result.GetResult<Prisma.$collectionsPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Collections that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {collectionsFindUniqueOrThrowArgs} args - Arguments to find a Collections
     * @example
     * // Get one Collections
     * const collections = await prisma.collections.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends collectionsFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, collectionsFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__collectionsClient<$Result.GetResult<Prisma.$collectionsPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Collections that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {collectionsFindFirstArgs} args - Arguments to find a Collections
     * @example
     * // Get one Collections
     * const collections = await prisma.collections.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends collectionsFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, collectionsFindFirstArgs<ExtArgs>>
    ): Prisma__collectionsClient<$Result.GetResult<Prisma.$collectionsPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Collections that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {collectionsFindFirstOrThrowArgs} args - Arguments to find a Collections
     * @example
     * // Get one Collections
     * const collections = await prisma.collections.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends collectionsFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, collectionsFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__collectionsClient<$Result.GetResult<Prisma.$collectionsPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Collections that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {collectionsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Collections
     * const collections = await prisma.collections.findMany()
     * 
     * // Get first 10 Collections
     * const collections = await prisma.collections.findMany({ take: 10 })
     * 
     * // Only select the `collection_id`
     * const collectionsWithCollection_idOnly = await prisma.collections.findMany({ select: { collection_id: true } })
     * 
    **/
    findMany<T extends collectionsFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, collectionsFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$collectionsPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Collections.
     * @param {collectionsCreateArgs} args - Arguments to create a Collections.
     * @example
     * // Create one Collections
     * const Collections = await prisma.collections.create({
     *   data: {
     *     // ... data to create a Collections
     *   }
     * })
     * 
    **/
    create<T extends collectionsCreateArgs<ExtArgs>>(
      args: SelectSubset<T, collectionsCreateArgs<ExtArgs>>
    ): Prisma__collectionsClient<$Result.GetResult<Prisma.$collectionsPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Collections.
     *     @param {collectionsCreateManyArgs} args - Arguments to create many Collections.
     *     @example
     *     // Create many Collections
     *     const collections = await prisma.collections.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends collectionsCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, collectionsCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Collections.
     * @param {collectionsDeleteArgs} args - Arguments to delete one Collections.
     * @example
     * // Delete one Collections
     * const Collections = await prisma.collections.delete({
     *   where: {
     *     // ... filter to delete one Collections
     *   }
     * })
     * 
    **/
    delete<T extends collectionsDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, collectionsDeleteArgs<ExtArgs>>
    ): Prisma__collectionsClient<$Result.GetResult<Prisma.$collectionsPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Collections.
     * @param {collectionsUpdateArgs} args - Arguments to update one Collections.
     * @example
     * // Update one Collections
     * const collections = await prisma.collections.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends collectionsUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, collectionsUpdateArgs<ExtArgs>>
    ): Prisma__collectionsClient<$Result.GetResult<Prisma.$collectionsPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Collections.
     * @param {collectionsDeleteManyArgs} args - Arguments to filter Collections to delete.
     * @example
     * // Delete a few Collections
     * const { count } = await prisma.collections.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends collectionsDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, collectionsDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Collections.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {collectionsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Collections
     * const collections = await prisma.collections.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends collectionsUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, collectionsUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Collections.
     * @param {collectionsUpsertArgs} args - Arguments to update or create a Collections.
     * @example
     * // Update or create a Collections
     * const collections = await prisma.collections.upsert({
     *   create: {
     *     // ... data to create a Collections
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Collections we want to update
     *   }
     * })
    **/
    upsert<T extends collectionsUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, collectionsUpsertArgs<ExtArgs>>
    ): Prisma__collectionsClient<$Result.GetResult<Prisma.$collectionsPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Collections.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {collectionsCountArgs} args - Arguments to filter Collections to count.
     * @example
     * // Count the number of Collections
     * const count = await prisma.collections.count({
     *   where: {
     *     // ... the filter for the Collections we want to count
     *   }
     * })
    **/
    count<T extends collectionsCountArgs>(
      args?: Subset<T, collectionsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CollectionsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Collections.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CollectionsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CollectionsAggregateArgs>(args: Subset<T, CollectionsAggregateArgs>): Prisma.PrismaPromise<GetCollectionsAggregateType<T>>

    /**
     * Group by Collections.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {collectionsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends collectionsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: collectionsGroupByArgs['orderBy'] }
        : { orderBy?: collectionsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, collectionsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCollectionsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the collections model
   */
  readonly fields: collectionsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for collections.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__collectionsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    individuals<T extends collections$individualsArgs<ExtArgs> = {}>(args?: Subset<T, collections$individualsArgs<ExtArgs>>): Prisma__individualsClient<$Result.GetResult<Prisma.$individualsPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    organizations<T extends collections$organizationsArgs<ExtArgs> = {}>(args?: Subset<T, collections$organizationsArgs<ExtArgs>>): Prisma__organizationsClient<$Result.GetResult<Prisma.$organizationsPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    groups<T extends collections$groupsArgs<ExtArgs> = {}>(args?: Subset<T, collections$groupsArgs<ExtArgs>>): Prisma__groupsClient<$Result.GetResult<Prisma.$groupsPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    collections_images<T extends collections$collections_imagesArgs<ExtArgs> = {}>(args?: Subset<T, collections$collections_imagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$collections_imagesPayload<ExtArgs>, T, 'findMany'> | Null>;

    collections_sheets<T extends collections$collections_sheetsArgs<ExtArgs> = {}>(args?: Subset<T, collections$collections_sheetsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$collections_sheetsPayload<ExtArgs>, T, 'findMany'> | Null>;

    collections_videos<T extends collections$collections_videosArgs<ExtArgs> = {}>(args?: Subset<T, collections$collections_videosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$collections_videosPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the collections model
   */ 
  interface collectionsFieldRefs {
    readonly collection_id: FieldRef<"collections", 'Int'>
    readonly collection_name: FieldRef<"collections", 'String'>
    readonly individual_id: FieldRef<"collections", 'Int'>
    readonly group_id: FieldRef<"collections", 'Int'>
    readonly organization_id: FieldRef<"collections", 'Int'>
  }
    

  // Custom InputTypes

  /**
   * collections findUnique
   */
  export type collectionsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collections
     */
    select?: collectionsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: collectionsInclude<ExtArgs> | null
    /**
     * Filter, which collections to fetch.
     */
    where: collectionsWhereUniqueInput
  }


  /**
   * collections findUniqueOrThrow
   */
  export type collectionsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collections
     */
    select?: collectionsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: collectionsInclude<ExtArgs> | null
    /**
     * Filter, which collections to fetch.
     */
    where: collectionsWhereUniqueInput
  }


  /**
   * collections findFirst
   */
  export type collectionsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collections
     */
    select?: collectionsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: collectionsInclude<ExtArgs> | null
    /**
     * Filter, which collections to fetch.
     */
    where?: collectionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of collections to fetch.
     */
    orderBy?: collectionsOrderByWithRelationInput | collectionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for collections.
     */
    cursor?: collectionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` collections from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` collections.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of collections.
     */
    distinct?: CollectionsScalarFieldEnum | CollectionsScalarFieldEnum[]
  }


  /**
   * collections findFirstOrThrow
   */
  export type collectionsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collections
     */
    select?: collectionsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: collectionsInclude<ExtArgs> | null
    /**
     * Filter, which collections to fetch.
     */
    where?: collectionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of collections to fetch.
     */
    orderBy?: collectionsOrderByWithRelationInput | collectionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for collections.
     */
    cursor?: collectionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` collections from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` collections.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of collections.
     */
    distinct?: CollectionsScalarFieldEnum | CollectionsScalarFieldEnum[]
  }


  /**
   * collections findMany
   */
  export type collectionsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collections
     */
    select?: collectionsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: collectionsInclude<ExtArgs> | null
    /**
     * Filter, which collections to fetch.
     */
    where?: collectionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of collections to fetch.
     */
    orderBy?: collectionsOrderByWithRelationInput | collectionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing collections.
     */
    cursor?: collectionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` collections from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` collections.
     */
    skip?: number
    distinct?: CollectionsScalarFieldEnum | CollectionsScalarFieldEnum[]
  }


  /**
   * collections create
   */
  export type collectionsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collections
     */
    select?: collectionsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: collectionsInclude<ExtArgs> | null
    /**
     * The data needed to create a collections.
     */
    data: XOR<collectionsCreateInput, collectionsUncheckedCreateInput>
  }


  /**
   * collections createMany
   */
  export type collectionsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many collections.
     */
    data: collectionsCreateManyInput | collectionsCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * collections update
   */
  export type collectionsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collections
     */
    select?: collectionsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: collectionsInclude<ExtArgs> | null
    /**
     * The data needed to update a collections.
     */
    data: XOR<collectionsUpdateInput, collectionsUncheckedUpdateInput>
    /**
     * Choose, which collections to update.
     */
    where: collectionsWhereUniqueInput
  }


  /**
   * collections updateMany
   */
  export type collectionsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update collections.
     */
    data: XOR<collectionsUpdateManyMutationInput, collectionsUncheckedUpdateManyInput>
    /**
     * Filter which collections to update
     */
    where?: collectionsWhereInput
  }


  /**
   * collections upsert
   */
  export type collectionsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collections
     */
    select?: collectionsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: collectionsInclude<ExtArgs> | null
    /**
     * The filter to search for the collections to update in case it exists.
     */
    where: collectionsWhereUniqueInput
    /**
     * In case the collections found by the `where` argument doesn't exist, create a new collections with this data.
     */
    create: XOR<collectionsCreateInput, collectionsUncheckedCreateInput>
    /**
     * In case the collections was found with the provided `where` argument, update it with this data.
     */
    update: XOR<collectionsUpdateInput, collectionsUncheckedUpdateInput>
  }


  /**
   * collections delete
   */
  export type collectionsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collections
     */
    select?: collectionsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: collectionsInclude<ExtArgs> | null
    /**
     * Filter which collections to delete.
     */
    where: collectionsWhereUniqueInput
  }


  /**
   * collections deleteMany
   */
  export type collectionsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which collections to delete
     */
    where?: collectionsWhereInput
  }


  /**
   * collections.individuals
   */
  export type collections$individualsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the individuals
     */
    select?: individualsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: individualsInclude<ExtArgs> | null
    where?: individualsWhereInput
  }


  /**
   * collections.organizations
   */
  export type collections$organizationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the organizations
     */
    select?: organizationsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: organizationsInclude<ExtArgs> | null
    where?: organizationsWhereInput
  }


  /**
   * collections.groups
   */
  export type collections$groupsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the groups
     */
    select?: groupsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: groupsInclude<ExtArgs> | null
    where?: groupsWhereInput
  }


  /**
   * collections.collections_images
   */
  export type collections$collections_imagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collections_images
     */
    select?: collections_imagesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: collections_imagesInclude<ExtArgs> | null
    where?: collections_imagesWhereInput
    orderBy?: collections_imagesOrderByWithRelationInput | collections_imagesOrderByWithRelationInput[]
    cursor?: collections_imagesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Collections_imagesScalarFieldEnum | Collections_imagesScalarFieldEnum[]
  }


  /**
   * collections.collections_sheets
   */
  export type collections$collections_sheetsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collections_sheets
     */
    select?: collections_sheetsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: collections_sheetsInclude<ExtArgs> | null
    where?: collections_sheetsWhereInput
    orderBy?: collections_sheetsOrderByWithRelationInput | collections_sheetsOrderByWithRelationInput[]
    cursor?: collections_sheetsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Collections_sheetsScalarFieldEnum | Collections_sheetsScalarFieldEnum[]
  }


  /**
   * collections.collections_videos
   */
  export type collections$collections_videosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collections_videos
     */
    select?: collections_videosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: collections_videosInclude<ExtArgs> | null
    where?: collections_videosWhereInput
    orderBy?: collections_videosOrderByWithRelationInput | collections_videosOrderByWithRelationInput[]
    cursor?: collections_videosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Collections_videosScalarFieldEnum | Collections_videosScalarFieldEnum[]
  }


  /**
   * collections without action
   */
  export type collectionsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collections
     */
    select?: collectionsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: collectionsInclude<ExtArgs> | null
  }



  /**
   * Model collections_images
   */

  export type AggregateCollections_images = {
    _count: Collections_imagesCountAggregateOutputType | null
    _avg: Collections_imagesAvgAggregateOutputType | null
    _sum: Collections_imagesSumAggregateOutputType | null
    _min: Collections_imagesMinAggregateOutputType | null
    _max: Collections_imagesMaxAggregateOutputType | null
  }

  export type Collections_imagesAvgAggregateOutputType = {
    collections_images_id: number | null
    collection_id: number | null
    image_id: number | null
  }

  export type Collections_imagesSumAggregateOutputType = {
    collections_images_id: number | null
    collection_id: number | null
    image_id: number | null
  }

  export type Collections_imagesMinAggregateOutputType = {
    collections_images_id: number | null
    collection_id: number | null
    image_id: number | null
    date_added: Date | null
    pinned: boolean | null
    date_pinned: Date | null
  }

  export type Collections_imagesMaxAggregateOutputType = {
    collections_images_id: number | null
    collection_id: number | null
    image_id: number | null
    date_added: Date | null
    pinned: boolean | null
    date_pinned: Date | null
  }

  export type Collections_imagesCountAggregateOutputType = {
    collections_images_id: number
    collection_id: number
    image_id: number
    date_added: number
    pinned: number
    date_pinned: number
    _all: number
  }


  export type Collections_imagesAvgAggregateInputType = {
    collections_images_id?: true
    collection_id?: true
    image_id?: true
  }

  export type Collections_imagesSumAggregateInputType = {
    collections_images_id?: true
    collection_id?: true
    image_id?: true
  }

  export type Collections_imagesMinAggregateInputType = {
    collections_images_id?: true
    collection_id?: true
    image_id?: true
    date_added?: true
    pinned?: true
    date_pinned?: true
  }

  export type Collections_imagesMaxAggregateInputType = {
    collections_images_id?: true
    collection_id?: true
    image_id?: true
    date_added?: true
    pinned?: true
    date_pinned?: true
  }

  export type Collections_imagesCountAggregateInputType = {
    collections_images_id?: true
    collection_id?: true
    image_id?: true
    date_added?: true
    pinned?: true
    date_pinned?: true
    _all?: true
  }

  export type Collections_imagesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which collections_images to aggregate.
     */
    where?: collections_imagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of collections_images to fetch.
     */
    orderBy?: collections_imagesOrderByWithRelationInput | collections_imagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: collections_imagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` collections_images from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` collections_images.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned collections_images
    **/
    _count?: true | Collections_imagesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Collections_imagesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Collections_imagesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Collections_imagesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Collections_imagesMaxAggregateInputType
  }

  export type GetCollections_imagesAggregateType<T extends Collections_imagesAggregateArgs> = {
        [P in keyof T & keyof AggregateCollections_images]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCollections_images[P]>
      : GetScalarType<T[P], AggregateCollections_images[P]>
  }




  export type collections_imagesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: collections_imagesWhereInput
    orderBy?: collections_imagesOrderByWithAggregationInput | collections_imagesOrderByWithAggregationInput[]
    by: Collections_imagesScalarFieldEnum[] | Collections_imagesScalarFieldEnum
    having?: collections_imagesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Collections_imagesCountAggregateInputType | true
    _avg?: Collections_imagesAvgAggregateInputType
    _sum?: Collections_imagesSumAggregateInputType
    _min?: Collections_imagesMinAggregateInputType
    _max?: Collections_imagesMaxAggregateInputType
  }

  export type Collections_imagesGroupByOutputType = {
    collections_images_id: number
    collection_id: number
    image_id: number
    date_added: Date
    pinned: boolean
    date_pinned: Date | null
    _count: Collections_imagesCountAggregateOutputType | null
    _avg: Collections_imagesAvgAggregateOutputType | null
    _sum: Collections_imagesSumAggregateOutputType | null
    _min: Collections_imagesMinAggregateOutputType | null
    _max: Collections_imagesMaxAggregateOutputType | null
  }

  type GetCollections_imagesGroupByPayload<T extends collections_imagesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Collections_imagesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Collections_imagesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Collections_imagesGroupByOutputType[P]>
            : GetScalarType<T[P], Collections_imagesGroupByOutputType[P]>
        }
      >
    >


  export type collections_imagesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    collections_images_id?: boolean
    collection_id?: boolean
    image_id?: boolean
    date_added?: boolean
    pinned?: boolean
    date_pinned?: boolean
    collections?: boolean | collectionsDefaultArgs<ExtArgs>
    images?: boolean | imagesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["collections_images"]>

  export type collections_imagesSelectScalar = {
    collections_images_id?: boolean
    collection_id?: boolean
    image_id?: boolean
    date_added?: boolean
    pinned?: boolean
    date_pinned?: boolean
  }

  export type collections_imagesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    collections?: boolean | collectionsDefaultArgs<ExtArgs>
    images?: boolean | imagesDefaultArgs<ExtArgs>
  }


  export type $collections_imagesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "collections_images"
    objects: {
      collections: Prisma.$collectionsPayload<ExtArgs>
      images: Prisma.$imagesPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      collections_images_id: number
      collection_id: number
      image_id: number
      date_added: Date
      pinned: boolean
      date_pinned: Date | null
    }, ExtArgs["result"]["collections_images"]>
    composites: {}
  }


  type collections_imagesGetPayload<S extends boolean | null | undefined | collections_imagesDefaultArgs> = $Result.GetResult<Prisma.$collections_imagesPayload, S>

  type collections_imagesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<collections_imagesFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Collections_imagesCountAggregateInputType | true
    }

  export interface collections_imagesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['collections_images'], meta: { name: 'collections_images' } }
    /**
     * Find zero or one Collections_images that matches the filter.
     * @param {collections_imagesFindUniqueArgs} args - Arguments to find a Collections_images
     * @example
     * // Get one Collections_images
     * const collections_images = await prisma.collections_images.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends collections_imagesFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, collections_imagesFindUniqueArgs<ExtArgs>>
    ): Prisma__collections_imagesClient<$Result.GetResult<Prisma.$collections_imagesPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Collections_images that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {collections_imagesFindUniqueOrThrowArgs} args - Arguments to find a Collections_images
     * @example
     * // Get one Collections_images
     * const collections_images = await prisma.collections_images.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends collections_imagesFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, collections_imagesFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__collections_imagesClient<$Result.GetResult<Prisma.$collections_imagesPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Collections_images that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {collections_imagesFindFirstArgs} args - Arguments to find a Collections_images
     * @example
     * // Get one Collections_images
     * const collections_images = await prisma.collections_images.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends collections_imagesFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, collections_imagesFindFirstArgs<ExtArgs>>
    ): Prisma__collections_imagesClient<$Result.GetResult<Prisma.$collections_imagesPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Collections_images that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {collections_imagesFindFirstOrThrowArgs} args - Arguments to find a Collections_images
     * @example
     * // Get one Collections_images
     * const collections_images = await prisma.collections_images.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends collections_imagesFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, collections_imagesFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__collections_imagesClient<$Result.GetResult<Prisma.$collections_imagesPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Collections_images that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {collections_imagesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Collections_images
     * const collections_images = await prisma.collections_images.findMany()
     * 
     * // Get first 10 Collections_images
     * const collections_images = await prisma.collections_images.findMany({ take: 10 })
     * 
     * // Only select the `collections_images_id`
     * const collections_imagesWithCollections_images_idOnly = await prisma.collections_images.findMany({ select: { collections_images_id: true } })
     * 
    **/
    findMany<T extends collections_imagesFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, collections_imagesFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$collections_imagesPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Collections_images.
     * @param {collections_imagesCreateArgs} args - Arguments to create a Collections_images.
     * @example
     * // Create one Collections_images
     * const Collections_images = await prisma.collections_images.create({
     *   data: {
     *     // ... data to create a Collections_images
     *   }
     * })
     * 
    **/
    create<T extends collections_imagesCreateArgs<ExtArgs>>(
      args: SelectSubset<T, collections_imagesCreateArgs<ExtArgs>>
    ): Prisma__collections_imagesClient<$Result.GetResult<Prisma.$collections_imagesPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Collections_images.
     *     @param {collections_imagesCreateManyArgs} args - Arguments to create many Collections_images.
     *     @example
     *     // Create many Collections_images
     *     const collections_images = await prisma.collections_images.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends collections_imagesCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, collections_imagesCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Collections_images.
     * @param {collections_imagesDeleteArgs} args - Arguments to delete one Collections_images.
     * @example
     * // Delete one Collections_images
     * const Collections_images = await prisma.collections_images.delete({
     *   where: {
     *     // ... filter to delete one Collections_images
     *   }
     * })
     * 
    **/
    delete<T extends collections_imagesDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, collections_imagesDeleteArgs<ExtArgs>>
    ): Prisma__collections_imagesClient<$Result.GetResult<Prisma.$collections_imagesPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Collections_images.
     * @param {collections_imagesUpdateArgs} args - Arguments to update one Collections_images.
     * @example
     * // Update one Collections_images
     * const collections_images = await prisma.collections_images.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends collections_imagesUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, collections_imagesUpdateArgs<ExtArgs>>
    ): Prisma__collections_imagesClient<$Result.GetResult<Prisma.$collections_imagesPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Collections_images.
     * @param {collections_imagesDeleteManyArgs} args - Arguments to filter Collections_images to delete.
     * @example
     * // Delete a few Collections_images
     * const { count } = await prisma.collections_images.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends collections_imagesDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, collections_imagesDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Collections_images.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {collections_imagesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Collections_images
     * const collections_images = await prisma.collections_images.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends collections_imagesUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, collections_imagesUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Collections_images.
     * @param {collections_imagesUpsertArgs} args - Arguments to update or create a Collections_images.
     * @example
     * // Update or create a Collections_images
     * const collections_images = await prisma.collections_images.upsert({
     *   create: {
     *     // ... data to create a Collections_images
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Collections_images we want to update
     *   }
     * })
    **/
    upsert<T extends collections_imagesUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, collections_imagesUpsertArgs<ExtArgs>>
    ): Prisma__collections_imagesClient<$Result.GetResult<Prisma.$collections_imagesPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Collections_images.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {collections_imagesCountArgs} args - Arguments to filter Collections_images to count.
     * @example
     * // Count the number of Collections_images
     * const count = await prisma.collections_images.count({
     *   where: {
     *     // ... the filter for the Collections_images we want to count
     *   }
     * })
    **/
    count<T extends collections_imagesCountArgs>(
      args?: Subset<T, collections_imagesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Collections_imagesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Collections_images.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Collections_imagesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Collections_imagesAggregateArgs>(args: Subset<T, Collections_imagesAggregateArgs>): Prisma.PrismaPromise<GetCollections_imagesAggregateType<T>>

    /**
     * Group by Collections_images.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {collections_imagesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends collections_imagesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: collections_imagesGroupByArgs['orderBy'] }
        : { orderBy?: collections_imagesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, collections_imagesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCollections_imagesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the collections_images model
   */
  readonly fields: collections_imagesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for collections_images.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__collections_imagesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    collections<T extends collectionsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, collectionsDefaultArgs<ExtArgs>>): Prisma__collectionsClient<$Result.GetResult<Prisma.$collectionsPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    images<T extends imagesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, imagesDefaultArgs<ExtArgs>>): Prisma__imagesClient<$Result.GetResult<Prisma.$imagesPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the collections_images model
   */ 
  interface collections_imagesFieldRefs {
    readonly collections_images_id: FieldRef<"collections_images", 'Int'>
    readonly collection_id: FieldRef<"collections_images", 'Int'>
    readonly image_id: FieldRef<"collections_images", 'Int'>
    readonly date_added: FieldRef<"collections_images", 'DateTime'>
    readonly pinned: FieldRef<"collections_images", 'Boolean'>
    readonly date_pinned: FieldRef<"collections_images", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * collections_images findUnique
   */
  export type collections_imagesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collections_images
     */
    select?: collections_imagesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: collections_imagesInclude<ExtArgs> | null
    /**
     * Filter, which collections_images to fetch.
     */
    where: collections_imagesWhereUniqueInput
  }


  /**
   * collections_images findUniqueOrThrow
   */
  export type collections_imagesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collections_images
     */
    select?: collections_imagesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: collections_imagesInclude<ExtArgs> | null
    /**
     * Filter, which collections_images to fetch.
     */
    where: collections_imagesWhereUniqueInput
  }


  /**
   * collections_images findFirst
   */
  export type collections_imagesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collections_images
     */
    select?: collections_imagesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: collections_imagesInclude<ExtArgs> | null
    /**
     * Filter, which collections_images to fetch.
     */
    where?: collections_imagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of collections_images to fetch.
     */
    orderBy?: collections_imagesOrderByWithRelationInput | collections_imagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for collections_images.
     */
    cursor?: collections_imagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` collections_images from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` collections_images.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of collections_images.
     */
    distinct?: Collections_imagesScalarFieldEnum | Collections_imagesScalarFieldEnum[]
  }


  /**
   * collections_images findFirstOrThrow
   */
  export type collections_imagesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collections_images
     */
    select?: collections_imagesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: collections_imagesInclude<ExtArgs> | null
    /**
     * Filter, which collections_images to fetch.
     */
    where?: collections_imagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of collections_images to fetch.
     */
    orderBy?: collections_imagesOrderByWithRelationInput | collections_imagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for collections_images.
     */
    cursor?: collections_imagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` collections_images from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` collections_images.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of collections_images.
     */
    distinct?: Collections_imagesScalarFieldEnum | Collections_imagesScalarFieldEnum[]
  }


  /**
   * collections_images findMany
   */
  export type collections_imagesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collections_images
     */
    select?: collections_imagesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: collections_imagesInclude<ExtArgs> | null
    /**
     * Filter, which collections_images to fetch.
     */
    where?: collections_imagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of collections_images to fetch.
     */
    orderBy?: collections_imagesOrderByWithRelationInput | collections_imagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing collections_images.
     */
    cursor?: collections_imagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` collections_images from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` collections_images.
     */
    skip?: number
    distinct?: Collections_imagesScalarFieldEnum | Collections_imagesScalarFieldEnum[]
  }


  /**
   * collections_images create
   */
  export type collections_imagesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collections_images
     */
    select?: collections_imagesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: collections_imagesInclude<ExtArgs> | null
    /**
     * The data needed to create a collections_images.
     */
    data: XOR<collections_imagesCreateInput, collections_imagesUncheckedCreateInput>
  }


  /**
   * collections_images createMany
   */
  export type collections_imagesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many collections_images.
     */
    data: collections_imagesCreateManyInput | collections_imagesCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * collections_images update
   */
  export type collections_imagesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collections_images
     */
    select?: collections_imagesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: collections_imagesInclude<ExtArgs> | null
    /**
     * The data needed to update a collections_images.
     */
    data: XOR<collections_imagesUpdateInput, collections_imagesUncheckedUpdateInput>
    /**
     * Choose, which collections_images to update.
     */
    where: collections_imagesWhereUniqueInput
  }


  /**
   * collections_images updateMany
   */
  export type collections_imagesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update collections_images.
     */
    data: XOR<collections_imagesUpdateManyMutationInput, collections_imagesUncheckedUpdateManyInput>
    /**
     * Filter which collections_images to update
     */
    where?: collections_imagesWhereInput
  }


  /**
   * collections_images upsert
   */
  export type collections_imagesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collections_images
     */
    select?: collections_imagesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: collections_imagesInclude<ExtArgs> | null
    /**
     * The filter to search for the collections_images to update in case it exists.
     */
    where: collections_imagesWhereUniqueInput
    /**
     * In case the collections_images found by the `where` argument doesn't exist, create a new collections_images with this data.
     */
    create: XOR<collections_imagesCreateInput, collections_imagesUncheckedCreateInput>
    /**
     * In case the collections_images was found with the provided `where` argument, update it with this data.
     */
    update: XOR<collections_imagesUpdateInput, collections_imagesUncheckedUpdateInput>
  }


  /**
   * collections_images delete
   */
  export type collections_imagesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collections_images
     */
    select?: collections_imagesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: collections_imagesInclude<ExtArgs> | null
    /**
     * Filter which collections_images to delete.
     */
    where: collections_imagesWhereUniqueInput
  }


  /**
   * collections_images deleteMany
   */
  export type collections_imagesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which collections_images to delete
     */
    where?: collections_imagesWhereInput
  }


  /**
   * collections_images without action
   */
  export type collections_imagesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collections_images
     */
    select?: collections_imagesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: collections_imagesInclude<ExtArgs> | null
  }



  /**
   * Model collections_sheets
   */

  export type AggregateCollections_sheets = {
    _count: Collections_sheetsCountAggregateOutputType | null
    _avg: Collections_sheetsAvgAggregateOutputType | null
    _sum: Collections_sheetsSumAggregateOutputType | null
    _min: Collections_sheetsMinAggregateOutputType | null
    _max: Collections_sheetsMaxAggregateOutputType | null
  }

  export type Collections_sheetsAvgAggregateOutputType = {
    collections_sheets_id: number | null
    collection_id: number | null
    sheet_id: number | null
  }

  export type Collections_sheetsSumAggregateOutputType = {
    collections_sheets_id: number | null
    collection_id: number | null
    sheet_id: number | null
  }

  export type Collections_sheetsMinAggregateOutputType = {
    collections_sheets_id: number | null
    collection_id: number | null
    sheet_id: number | null
    date_added: Date | null
    pinned: boolean | null
    date_pinned: Date | null
  }

  export type Collections_sheetsMaxAggregateOutputType = {
    collections_sheets_id: number | null
    collection_id: number | null
    sheet_id: number | null
    date_added: Date | null
    pinned: boolean | null
    date_pinned: Date | null
  }

  export type Collections_sheetsCountAggregateOutputType = {
    collections_sheets_id: number
    collection_id: number
    sheet_id: number
    date_added: number
    pinned: number
    date_pinned: number
    _all: number
  }


  export type Collections_sheetsAvgAggregateInputType = {
    collections_sheets_id?: true
    collection_id?: true
    sheet_id?: true
  }

  export type Collections_sheetsSumAggregateInputType = {
    collections_sheets_id?: true
    collection_id?: true
    sheet_id?: true
  }

  export type Collections_sheetsMinAggregateInputType = {
    collections_sheets_id?: true
    collection_id?: true
    sheet_id?: true
    date_added?: true
    pinned?: true
    date_pinned?: true
  }

  export type Collections_sheetsMaxAggregateInputType = {
    collections_sheets_id?: true
    collection_id?: true
    sheet_id?: true
    date_added?: true
    pinned?: true
    date_pinned?: true
  }

  export type Collections_sheetsCountAggregateInputType = {
    collections_sheets_id?: true
    collection_id?: true
    sheet_id?: true
    date_added?: true
    pinned?: true
    date_pinned?: true
    _all?: true
  }

  export type Collections_sheetsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which collections_sheets to aggregate.
     */
    where?: collections_sheetsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of collections_sheets to fetch.
     */
    orderBy?: collections_sheetsOrderByWithRelationInput | collections_sheetsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: collections_sheetsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` collections_sheets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` collections_sheets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned collections_sheets
    **/
    _count?: true | Collections_sheetsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Collections_sheetsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Collections_sheetsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Collections_sheetsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Collections_sheetsMaxAggregateInputType
  }

  export type GetCollections_sheetsAggregateType<T extends Collections_sheetsAggregateArgs> = {
        [P in keyof T & keyof AggregateCollections_sheets]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCollections_sheets[P]>
      : GetScalarType<T[P], AggregateCollections_sheets[P]>
  }




  export type collections_sheetsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: collections_sheetsWhereInput
    orderBy?: collections_sheetsOrderByWithAggregationInput | collections_sheetsOrderByWithAggregationInput[]
    by: Collections_sheetsScalarFieldEnum[] | Collections_sheetsScalarFieldEnum
    having?: collections_sheetsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Collections_sheetsCountAggregateInputType | true
    _avg?: Collections_sheetsAvgAggregateInputType
    _sum?: Collections_sheetsSumAggregateInputType
    _min?: Collections_sheetsMinAggregateInputType
    _max?: Collections_sheetsMaxAggregateInputType
  }

  export type Collections_sheetsGroupByOutputType = {
    collections_sheets_id: number
    collection_id: number
    sheet_id: number
    date_added: Date
    pinned: boolean
    date_pinned: Date | null
    _count: Collections_sheetsCountAggregateOutputType | null
    _avg: Collections_sheetsAvgAggregateOutputType | null
    _sum: Collections_sheetsSumAggregateOutputType | null
    _min: Collections_sheetsMinAggregateOutputType | null
    _max: Collections_sheetsMaxAggregateOutputType | null
  }

  type GetCollections_sheetsGroupByPayload<T extends collections_sheetsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Collections_sheetsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Collections_sheetsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Collections_sheetsGroupByOutputType[P]>
            : GetScalarType<T[P], Collections_sheetsGroupByOutputType[P]>
        }
      >
    >


  export type collections_sheetsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    collections_sheets_id?: boolean
    collection_id?: boolean
    sheet_id?: boolean
    date_added?: boolean
    pinned?: boolean
    date_pinned?: boolean
    collections?: boolean | collectionsDefaultArgs<ExtArgs>
    sheets?: boolean | sheetsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["collections_sheets"]>

  export type collections_sheetsSelectScalar = {
    collections_sheets_id?: boolean
    collection_id?: boolean
    sheet_id?: boolean
    date_added?: boolean
    pinned?: boolean
    date_pinned?: boolean
  }

  export type collections_sheetsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    collections?: boolean | collectionsDefaultArgs<ExtArgs>
    sheets?: boolean | sheetsDefaultArgs<ExtArgs>
  }


  export type $collections_sheetsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "collections_sheets"
    objects: {
      collections: Prisma.$collectionsPayload<ExtArgs>
      sheets: Prisma.$sheetsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      collections_sheets_id: number
      collection_id: number
      sheet_id: number
      date_added: Date
      pinned: boolean
      date_pinned: Date | null
    }, ExtArgs["result"]["collections_sheets"]>
    composites: {}
  }


  type collections_sheetsGetPayload<S extends boolean | null | undefined | collections_sheetsDefaultArgs> = $Result.GetResult<Prisma.$collections_sheetsPayload, S>

  type collections_sheetsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<collections_sheetsFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Collections_sheetsCountAggregateInputType | true
    }

  export interface collections_sheetsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['collections_sheets'], meta: { name: 'collections_sheets' } }
    /**
     * Find zero or one Collections_sheets that matches the filter.
     * @param {collections_sheetsFindUniqueArgs} args - Arguments to find a Collections_sheets
     * @example
     * // Get one Collections_sheets
     * const collections_sheets = await prisma.collections_sheets.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends collections_sheetsFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, collections_sheetsFindUniqueArgs<ExtArgs>>
    ): Prisma__collections_sheetsClient<$Result.GetResult<Prisma.$collections_sheetsPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Collections_sheets that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {collections_sheetsFindUniqueOrThrowArgs} args - Arguments to find a Collections_sheets
     * @example
     * // Get one Collections_sheets
     * const collections_sheets = await prisma.collections_sheets.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends collections_sheetsFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, collections_sheetsFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__collections_sheetsClient<$Result.GetResult<Prisma.$collections_sheetsPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Collections_sheets that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {collections_sheetsFindFirstArgs} args - Arguments to find a Collections_sheets
     * @example
     * // Get one Collections_sheets
     * const collections_sheets = await prisma.collections_sheets.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends collections_sheetsFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, collections_sheetsFindFirstArgs<ExtArgs>>
    ): Prisma__collections_sheetsClient<$Result.GetResult<Prisma.$collections_sheetsPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Collections_sheets that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {collections_sheetsFindFirstOrThrowArgs} args - Arguments to find a Collections_sheets
     * @example
     * // Get one Collections_sheets
     * const collections_sheets = await prisma.collections_sheets.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends collections_sheetsFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, collections_sheetsFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__collections_sheetsClient<$Result.GetResult<Prisma.$collections_sheetsPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Collections_sheets that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {collections_sheetsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Collections_sheets
     * const collections_sheets = await prisma.collections_sheets.findMany()
     * 
     * // Get first 10 Collections_sheets
     * const collections_sheets = await prisma.collections_sheets.findMany({ take: 10 })
     * 
     * // Only select the `collections_sheets_id`
     * const collections_sheetsWithCollections_sheets_idOnly = await prisma.collections_sheets.findMany({ select: { collections_sheets_id: true } })
     * 
    **/
    findMany<T extends collections_sheetsFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, collections_sheetsFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$collections_sheetsPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Collections_sheets.
     * @param {collections_sheetsCreateArgs} args - Arguments to create a Collections_sheets.
     * @example
     * // Create one Collections_sheets
     * const Collections_sheets = await prisma.collections_sheets.create({
     *   data: {
     *     // ... data to create a Collections_sheets
     *   }
     * })
     * 
    **/
    create<T extends collections_sheetsCreateArgs<ExtArgs>>(
      args: SelectSubset<T, collections_sheetsCreateArgs<ExtArgs>>
    ): Prisma__collections_sheetsClient<$Result.GetResult<Prisma.$collections_sheetsPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Collections_sheets.
     *     @param {collections_sheetsCreateManyArgs} args - Arguments to create many Collections_sheets.
     *     @example
     *     // Create many Collections_sheets
     *     const collections_sheets = await prisma.collections_sheets.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends collections_sheetsCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, collections_sheetsCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Collections_sheets.
     * @param {collections_sheetsDeleteArgs} args - Arguments to delete one Collections_sheets.
     * @example
     * // Delete one Collections_sheets
     * const Collections_sheets = await prisma.collections_sheets.delete({
     *   where: {
     *     // ... filter to delete one Collections_sheets
     *   }
     * })
     * 
    **/
    delete<T extends collections_sheetsDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, collections_sheetsDeleteArgs<ExtArgs>>
    ): Prisma__collections_sheetsClient<$Result.GetResult<Prisma.$collections_sheetsPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Collections_sheets.
     * @param {collections_sheetsUpdateArgs} args - Arguments to update one Collections_sheets.
     * @example
     * // Update one Collections_sheets
     * const collections_sheets = await prisma.collections_sheets.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends collections_sheetsUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, collections_sheetsUpdateArgs<ExtArgs>>
    ): Prisma__collections_sheetsClient<$Result.GetResult<Prisma.$collections_sheetsPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Collections_sheets.
     * @param {collections_sheetsDeleteManyArgs} args - Arguments to filter Collections_sheets to delete.
     * @example
     * // Delete a few Collections_sheets
     * const { count } = await prisma.collections_sheets.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends collections_sheetsDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, collections_sheetsDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Collections_sheets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {collections_sheetsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Collections_sheets
     * const collections_sheets = await prisma.collections_sheets.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends collections_sheetsUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, collections_sheetsUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Collections_sheets.
     * @param {collections_sheetsUpsertArgs} args - Arguments to update or create a Collections_sheets.
     * @example
     * // Update or create a Collections_sheets
     * const collections_sheets = await prisma.collections_sheets.upsert({
     *   create: {
     *     // ... data to create a Collections_sheets
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Collections_sheets we want to update
     *   }
     * })
    **/
    upsert<T extends collections_sheetsUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, collections_sheetsUpsertArgs<ExtArgs>>
    ): Prisma__collections_sheetsClient<$Result.GetResult<Prisma.$collections_sheetsPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Collections_sheets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {collections_sheetsCountArgs} args - Arguments to filter Collections_sheets to count.
     * @example
     * // Count the number of Collections_sheets
     * const count = await prisma.collections_sheets.count({
     *   where: {
     *     // ... the filter for the Collections_sheets we want to count
     *   }
     * })
    **/
    count<T extends collections_sheetsCountArgs>(
      args?: Subset<T, collections_sheetsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Collections_sheetsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Collections_sheets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Collections_sheetsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Collections_sheetsAggregateArgs>(args: Subset<T, Collections_sheetsAggregateArgs>): Prisma.PrismaPromise<GetCollections_sheetsAggregateType<T>>

    /**
     * Group by Collections_sheets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {collections_sheetsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends collections_sheetsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: collections_sheetsGroupByArgs['orderBy'] }
        : { orderBy?: collections_sheetsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, collections_sheetsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCollections_sheetsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the collections_sheets model
   */
  readonly fields: collections_sheetsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for collections_sheets.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__collections_sheetsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    collections<T extends collectionsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, collectionsDefaultArgs<ExtArgs>>): Prisma__collectionsClient<$Result.GetResult<Prisma.$collectionsPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    sheets<T extends sheetsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, sheetsDefaultArgs<ExtArgs>>): Prisma__sheetsClient<$Result.GetResult<Prisma.$sheetsPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the collections_sheets model
   */ 
  interface collections_sheetsFieldRefs {
    readonly collections_sheets_id: FieldRef<"collections_sheets", 'Int'>
    readonly collection_id: FieldRef<"collections_sheets", 'Int'>
    readonly sheet_id: FieldRef<"collections_sheets", 'Int'>
    readonly date_added: FieldRef<"collections_sheets", 'DateTime'>
    readonly pinned: FieldRef<"collections_sheets", 'Boolean'>
    readonly date_pinned: FieldRef<"collections_sheets", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * collections_sheets findUnique
   */
  export type collections_sheetsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collections_sheets
     */
    select?: collections_sheetsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: collections_sheetsInclude<ExtArgs> | null
    /**
     * Filter, which collections_sheets to fetch.
     */
    where: collections_sheetsWhereUniqueInput
  }


  /**
   * collections_sheets findUniqueOrThrow
   */
  export type collections_sheetsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collections_sheets
     */
    select?: collections_sheetsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: collections_sheetsInclude<ExtArgs> | null
    /**
     * Filter, which collections_sheets to fetch.
     */
    where: collections_sheetsWhereUniqueInput
  }


  /**
   * collections_sheets findFirst
   */
  export type collections_sheetsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collections_sheets
     */
    select?: collections_sheetsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: collections_sheetsInclude<ExtArgs> | null
    /**
     * Filter, which collections_sheets to fetch.
     */
    where?: collections_sheetsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of collections_sheets to fetch.
     */
    orderBy?: collections_sheetsOrderByWithRelationInput | collections_sheetsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for collections_sheets.
     */
    cursor?: collections_sheetsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` collections_sheets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` collections_sheets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of collections_sheets.
     */
    distinct?: Collections_sheetsScalarFieldEnum | Collections_sheetsScalarFieldEnum[]
  }


  /**
   * collections_sheets findFirstOrThrow
   */
  export type collections_sheetsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collections_sheets
     */
    select?: collections_sheetsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: collections_sheetsInclude<ExtArgs> | null
    /**
     * Filter, which collections_sheets to fetch.
     */
    where?: collections_sheetsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of collections_sheets to fetch.
     */
    orderBy?: collections_sheetsOrderByWithRelationInput | collections_sheetsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for collections_sheets.
     */
    cursor?: collections_sheetsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` collections_sheets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` collections_sheets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of collections_sheets.
     */
    distinct?: Collections_sheetsScalarFieldEnum | Collections_sheetsScalarFieldEnum[]
  }


  /**
   * collections_sheets findMany
   */
  export type collections_sheetsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collections_sheets
     */
    select?: collections_sheetsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: collections_sheetsInclude<ExtArgs> | null
    /**
     * Filter, which collections_sheets to fetch.
     */
    where?: collections_sheetsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of collections_sheets to fetch.
     */
    orderBy?: collections_sheetsOrderByWithRelationInput | collections_sheetsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing collections_sheets.
     */
    cursor?: collections_sheetsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` collections_sheets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` collections_sheets.
     */
    skip?: number
    distinct?: Collections_sheetsScalarFieldEnum | Collections_sheetsScalarFieldEnum[]
  }


  /**
   * collections_sheets create
   */
  export type collections_sheetsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collections_sheets
     */
    select?: collections_sheetsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: collections_sheetsInclude<ExtArgs> | null
    /**
     * The data needed to create a collections_sheets.
     */
    data: XOR<collections_sheetsCreateInput, collections_sheetsUncheckedCreateInput>
  }


  /**
   * collections_sheets createMany
   */
  export type collections_sheetsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many collections_sheets.
     */
    data: collections_sheetsCreateManyInput | collections_sheetsCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * collections_sheets update
   */
  export type collections_sheetsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collections_sheets
     */
    select?: collections_sheetsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: collections_sheetsInclude<ExtArgs> | null
    /**
     * The data needed to update a collections_sheets.
     */
    data: XOR<collections_sheetsUpdateInput, collections_sheetsUncheckedUpdateInput>
    /**
     * Choose, which collections_sheets to update.
     */
    where: collections_sheetsWhereUniqueInput
  }


  /**
   * collections_sheets updateMany
   */
  export type collections_sheetsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update collections_sheets.
     */
    data: XOR<collections_sheetsUpdateManyMutationInput, collections_sheetsUncheckedUpdateManyInput>
    /**
     * Filter which collections_sheets to update
     */
    where?: collections_sheetsWhereInput
  }


  /**
   * collections_sheets upsert
   */
  export type collections_sheetsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collections_sheets
     */
    select?: collections_sheetsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: collections_sheetsInclude<ExtArgs> | null
    /**
     * The filter to search for the collections_sheets to update in case it exists.
     */
    where: collections_sheetsWhereUniqueInput
    /**
     * In case the collections_sheets found by the `where` argument doesn't exist, create a new collections_sheets with this data.
     */
    create: XOR<collections_sheetsCreateInput, collections_sheetsUncheckedCreateInput>
    /**
     * In case the collections_sheets was found with the provided `where` argument, update it with this data.
     */
    update: XOR<collections_sheetsUpdateInput, collections_sheetsUncheckedUpdateInput>
  }


  /**
   * collections_sheets delete
   */
  export type collections_sheetsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collections_sheets
     */
    select?: collections_sheetsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: collections_sheetsInclude<ExtArgs> | null
    /**
     * Filter which collections_sheets to delete.
     */
    where: collections_sheetsWhereUniqueInput
  }


  /**
   * collections_sheets deleteMany
   */
  export type collections_sheetsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which collections_sheets to delete
     */
    where?: collections_sheetsWhereInput
  }


  /**
   * collections_sheets without action
   */
  export type collections_sheetsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collections_sheets
     */
    select?: collections_sheetsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: collections_sheetsInclude<ExtArgs> | null
  }



  /**
   * Model collections_videos
   */

  export type AggregateCollections_videos = {
    _count: Collections_videosCountAggregateOutputType | null
    _avg: Collections_videosAvgAggregateOutputType | null
    _sum: Collections_videosSumAggregateOutputType | null
    _min: Collections_videosMinAggregateOutputType | null
    _max: Collections_videosMaxAggregateOutputType | null
  }

  export type Collections_videosAvgAggregateOutputType = {
    collections_videos_id: number | null
    collection_id: number | null
    video_id: number | null
  }

  export type Collections_videosSumAggregateOutputType = {
    collections_videos_id: number | null
    collection_id: number | null
    video_id: number | null
  }

  export type Collections_videosMinAggregateOutputType = {
    collections_videos_id: number | null
    collection_id: number | null
    video_id: number | null
    date_added: Date | null
    pinned: boolean | null
    date_pinned: Date | null
  }

  export type Collections_videosMaxAggregateOutputType = {
    collections_videos_id: number | null
    collection_id: number | null
    video_id: number | null
    date_added: Date | null
    pinned: boolean | null
    date_pinned: Date | null
  }

  export type Collections_videosCountAggregateOutputType = {
    collections_videos_id: number
    collection_id: number
    video_id: number
    date_added: number
    pinned: number
    date_pinned: number
    _all: number
  }


  export type Collections_videosAvgAggregateInputType = {
    collections_videos_id?: true
    collection_id?: true
    video_id?: true
  }

  export type Collections_videosSumAggregateInputType = {
    collections_videos_id?: true
    collection_id?: true
    video_id?: true
  }

  export type Collections_videosMinAggregateInputType = {
    collections_videos_id?: true
    collection_id?: true
    video_id?: true
    date_added?: true
    pinned?: true
    date_pinned?: true
  }

  export type Collections_videosMaxAggregateInputType = {
    collections_videos_id?: true
    collection_id?: true
    video_id?: true
    date_added?: true
    pinned?: true
    date_pinned?: true
  }

  export type Collections_videosCountAggregateInputType = {
    collections_videos_id?: true
    collection_id?: true
    video_id?: true
    date_added?: true
    pinned?: true
    date_pinned?: true
    _all?: true
  }

  export type Collections_videosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which collections_videos to aggregate.
     */
    where?: collections_videosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of collections_videos to fetch.
     */
    orderBy?: collections_videosOrderByWithRelationInput | collections_videosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: collections_videosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` collections_videos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` collections_videos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned collections_videos
    **/
    _count?: true | Collections_videosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Collections_videosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Collections_videosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Collections_videosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Collections_videosMaxAggregateInputType
  }

  export type GetCollections_videosAggregateType<T extends Collections_videosAggregateArgs> = {
        [P in keyof T & keyof AggregateCollections_videos]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCollections_videos[P]>
      : GetScalarType<T[P], AggregateCollections_videos[P]>
  }




  export type collections_videosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: collections_videosWhereInput
    orderBy?: collections_videosOrderByWithAggregationInput | collections_videosOrderByWithAggregationInput[]
    by: Collections_videosScalarFieldEnum[] | Collections_videosScalarFieldEnum
    having?: collections_videosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Collections_videosCountAggregateInputType | true
    _avg?: Collections_videosAvgAggregateInputType
    _sum?: Collections_videosSumAggregateInputType
    _min?: Collections_videosMinAggregateInputType
    _max?: Collections_videosMaxAggregateInputType
  }

  export type Collections_videosGroupByOutputType = {
    collections_videos_id: number
    collection_id: number
    video_id: number
    date_added: Date
    pinned: boolean
    date_pinned: Date | null
    _count: Collections_videosCountAggregateOutputType | null
    _avg: Collections_videosAvgAggregateOutputType | null
    _sum: Collections_videosSumAggregateOutputType | null
    _min: Collections_videosMinAggregateOutputType | null
    _max: Collections_videosMaxAggregateOutputType | null
  }

  type GetCollections_videosGroupByPayload<T extends collections_videosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Collections_videosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Collections_videosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Collections_videosGroupByOutputType[P]>
            : GetScalarType<T[P], Collections_videosGroupByOutputType[P]>
        }
      >
    >


  export type collections_videosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    collections_videos_id?: boolean
    collection_id?: boolean
    video_id?: boolean
    date_added?: boolean
    pinned?: boolean
    date_pinned?: boolean
    collections?: boolean | collectionsDefaultArgs<ExtArgs>
    videos?: boolean | videosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["collections_videos"]>

  export type collections_videosSelectScalar = {
    collections_videos_id?: boolean
    collection_id?: boolean
    video_id?: boolean
    date_added?: boolean
    pinned?: boolean
    date_pinned?: boolean
  }

  export type collections_videosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    collections?: boolean | collectionsDefaultArgs<ExtArgs>
    videos?: boolean | videosDefaultArgs<ExtArgs>
  }


  export type $collections_videosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "collections_videos"
    objects: {
      collections: Prisma.$collectionsPayload<ExtArgs>
      videos: Prisma.$videosPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      collections_videos_id: number
      collection_id: number
      video_id: number
      date_added: Date
      pinned: boolean
      date_pinned: Date | null
    }, ExtArgs["result"]["collections_videos"]>
    composites: {}
  }


  type collections_videosGetPayload<S extends boolean | null | undefined | collections_videosDefaultArgs> = $Result.GetResult<Prisma.$collections_videosPayload, S>

  type collections_videosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<collections_videosFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Collections_videosCountAggregateInputType | true
    }

  export interface collections_videosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['collections_videos'], meta: { name: 'collections_videos' } }
    /**
     * Find zero or one Collections_videos that matches the filter.
     * @param {collections_videosFindUniqueArgs} args - Arguments to find a Collections_videos
     * @example
     * // Get one Collections_videos
     * const collections_videos = await prisma.collections_videos.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends collections_videosFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, collections_videosFindUniqueArgs<ExtArgs>>
    ): Prisma__collections_videosClient<$Result.GetResult<Prisma.$collections_videosPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Collections_videos that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {collections_videosFindUniqueOrThrowArgs} args - Arguments to find a Collections_videos
     * @example
     * // Get one Collections_videos
     * const collections_videos = await prisma.collections_videos.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends collections_videosFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, collections_videosFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__collections_videosClient<$Result.GetResult<Prisma.$collections_videosPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Collections_videos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {collections_videosFindFirstArgs} args - Arguments to find a Collections_videos
     * @example
     * // Get one Collections_videos
     * const collections_videos = await prisma.collections_videos.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends collections_videosFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, collections_videosFindFirstArgs<ExtArgs>>
    ): Prisma__collections_videosClient<$Result.GetResult<Prisma.$collections_videosPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Collections_videos that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {collections_videosFindFirstOrThrowArgs} args - Arguments to find a Collections_videos
     * @example
     * // Get one Collections_videos
     * const collections_videos = await prisma.collections_videos.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends collections_videosFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, collections_videosFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__collections_videosClient<$Result.GetResult<Prisma.$collections_videosPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Collections_videos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {collections_videosFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Collections_videos
     * const collections_videos = await prisma.collections_videos.findMany()
     * 
     * // Get first 10 Collections_videos
     * const collections_videos = await prisma.collections_videos.findMany({ take: 10 })
     * 
     * // Only select the `collections_videos_id`
     * const collections_videosWithCollections_videos_idOnly = await prisma.collections_videos.findMany({ select: { collections_videos_id: true } })
     * 
    **/
    findMany<T extends collections_videosFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, collections_videosFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$collections_videosPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Collections_videos.
     * @param {collections_videosCreateArgs} args - Arguments to create a Collections_videos.
     * @example
     * // Create one Collections_videos
     * const Collections_videos = await prisma.collections_videos.create({
     *   data: {
     *     // ... data to create a Collections_videos
     *   }
     * })
     * 
    **/
    create<T extends collections_videosCreateArgs<ExtArgs>>(
      args: SelectSubset<T, collections_videosCreateArgs<ExtArgs>>
    ): Prisma__collections_videosClient<$Result.GetResult<Prisma.$collections_videosPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Collections_videos.
     *     @param {collections_videosCreateManyArgs} args - Arguments to create many Collections_videos.
     *     @example
     *     // Create many Collections_videos
     *     const collections_videos = await prisma.collections_videos.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends collections_videosCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, collections_videosCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Collections_videos.
     * @param {collections_videosDeleteArgs} args - Arguments to delete one Collections_videos.
     * @example
     * // Delete one Collections_videos
     * const Collections_videos = await prisma.collections_videos.delete({
     *   where: {
     *     // ... filter to delete one Collections_videos
     *   }
     * })
     * 
    **/
    delete<T extends collections_videosDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, collections_videosDeleteArgs<ExtArgs>>
    ): Prisma__collections_videosClient<$Result.GetResult<Prisma.$collections_videosPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Collections_videos.
     * @param {collections_videosUpdateArgs} args - Arguments to update one Collections_videos.
     * @example
     * // Update one Collections_videos
     * const collections_videos = await prisma.collections_videos.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends collections_videosUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, collections_videosUpdateArgs<ExtArgs>>
    ): Prisma__collections_videosClient<$Result.GetResult<Prisma.$collections_videosPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Collections_videos.
     * @param {collections_videosDeleteManyArgs} args - Arguments to filter Collections_videos to delete.
     * @example
     * // Delete a few Collections_videos
     * const { count } = await prisma.collections_videos.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends collections_videosDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, collections_videosDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Collections_videos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {collections_videosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Collections_videos
     * const collections_videos = await prisma.collections_videos.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends collections_videosUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, collections_videosUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Collections_videos.
     * @param {collections_videosUpsertArgs} args - Arguments to update or create a Collections_videos.
     * @example
     * // Update or create a Collections_videos
     * const collections_videos = await prisma.collections_videos.upsert({
     *   create: {
     *     // ... data to create a Collections_videos
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Collections_videos we want to update
     *   }
     * })
    **/
    upsert<T extends collections_videosUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, collections_videosUpsertArgs<ExtArgs>>
    ): Prisma__collections_videosClient<$Result.GetResult<Prisma.$collections_videosPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Collections_videos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {collections_videosCountArgs} args - Arguments to filter Collections_videos to count.
     * @example
     * // Count the number of Collections_videos
     * const count = await prisma.collections_videos.count({
     *   where: {
     *     // ... the filter for the Collections_videos we want to count
     *   }
     * })
    **/
    count<T extends collections_videosCountArgs>(
      args?: Subset<T, collections_videosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Collections_videosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Collections_videos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Collections_videosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Collections_videosAggregateArgs>(args: Subset<T, Collections_videosAggregateArgs>): Prisma.PrismaPromise<GetCollections_videosAggregateType<T>>

    /**
     * Group by Collections_videos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {collections_videosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends collections_videosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: collections_videosGroupByArgs['orderBy'] }
        : { orderBy?: collections_videosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, collections_videosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCollections_videosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the collections_videos model
   */
  readonly fields: collections_videosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for collections_videos.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__collections_videosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    collections<T extends collectionsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, collectionsDefaultArgs<ExtArgs>>): Prisma__collectionsClient<$Result.GetResult<Prisma.$collectionsPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    videos<T extends videosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, videosDefaultArgs<ExtArgs>>): Prisma__videosClient<$Result.GetResult<Prisma.$videosPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the collections_videos model
   */ 
  interface collections_videosFieldRefs {
    readonly collections_videos_id: FieldRef<"collections_videos", 'Int'>
    readonly collection_id: FieldRef<"collections_videos", 'Int'>
    readonly video_id: FieldRef<"collections_videos", 'Int'>
    readonly date_added: FieldRef<"collections_videos", 'DateTime'>
    readonly pinned: FieldRef<"collections_videos", 'Boolean'>
    readonly date_pinned: FieldRef<"collections_videos", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * collections_videos findUnique
   */
  export type collections_videosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collections_videos
     */
    select?: collections_videosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: collections_videosInclude<ExtArgs> | null
    /**
     * Filter, which collections_videos to fetch.
     */
    where: collections_videosWhereUniqueInput
  }


  /**
   * collections_videos findUniqueOrThrow
   */
  export type collections_videosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collections_videos
     */
    select?: collections_videosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: collections_videosInclude<ExtArgs> | null
    /**
     * Filter, which collections_videos to fetch.
     */
    where: collections_videosWhereUniqueInput
  }


  /**
   * collections_videos findFirst
   */
  export type collections_videosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collections_videos
     */
    select?: collections_videosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: collections_videosInclude<ExtArgs> | null
    /**
     * Filter, which collections_videos to fetch.
     */
    where?: collections_videosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of collections_videos to fetch.
     */
    orderBy?: collections_videosOrderByWithRelationInput | collections_videosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for collections_videos.
     */
    cursor?: collections_videosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` collections_videos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` collections_videos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of collections_videos.
     */
    distinct?: Collections_videosScalarFieldEnum | Collections_videosScalarFieldEnum[]
  }


  /**
   * collections_videos findFirstOrThrow
   */
  export type collections_videosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collections_videos
     */
    select?: collections_videosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: collections_videosInclude<ExtArgs> | null
    /**
     * Filter, which collections_videos to fetch.
     */
    where?: collections_videosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of collections_videos to fetch.
     */
    orderBy?: collections_videosOrderByWithRelationInput | collections_videosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for collections_videos.
     */
    cursor?: collections_videosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` collections_videos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` collections_videos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of collections_videos.
     */
    distinct?: Collections_videosScalarFieldEnum | Collections_videosScalarFieldEnum[]
  }


  /**
   * collections_videos findMany
   */
  export type collections_videosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collections_videos
     */
    select?: collections_videosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: collections_videosInclude<ExtArgs> | null
    /**
     * Filter, which collections_videos to fetch.
     */
    where?: collections_videosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of collections_videos to fetch.
     */
    orderBy?: collections_videosOrderByWithRelationInput | collections_videosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing collections_videos.
     */
    cursor?: collections_videosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` collections_videos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` collections_videos.
     */
    skip?: number
    distinct?: Collections_videosScalarFieldEnum | Collections_videosScalarFieldEnum[]
  }


  /**
   * collections_videos create
   */
  export type collections_videosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collections_videos
     */
    select?: collections_videosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: collections_videosInclude<ExtArgs> | null
    /**
     * The data needed to create a collections_videos.
     */
    data: XOR<collections_videosCreateInput, collections_videosUncheckedCreateInput>
  }


  /**
   * collections_videos createMany
   */
  export type collections_videosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many collections_videos.
     */
    data: collections_videosCreateManyInput | collections_videosCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * collections_videos update
   */
  export type collections_videosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collections_videos
     */
    select?: collections_videosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: collections_videosInclude<ExtArgs> | null
    /**
     * The data needed to update a collections_videos.
     */
    data: XOR<collections_videosUpdateInput, collections_videosUncheckedUpdateInput>
    /**
     * Choose, which collections_videos to update.
     */
    where: collections_videosWhereUniqueInput
  }


  /**
   * collections_videos updateMany
   */
  export type collections_videosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update collections_videos.
     */
    data: XOR<collections_videosUpdateManyMutationInput, collections_videosUncheckedUpdateManyInput>
    /**
     * Filter which collections_videos to update
     */
    where?: collections_videosWhereInput
  }


  /**
   * collections_videos upsert
   */
  export type collections_videosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collections_videos
     */
    select?: collections_videosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: collections_videosInclude<ExtArgs> | null
    /**
     * The filter to search for the collections_videos to update in case it exists.
     */
    where: collections_videosWhereUniqueInput
    /**
     * In case the collections_videos found by the `where` argument doesn't exist, create a new collections_videos with this data.
     */
    create: XOR<collections_videosCreateInput, collections_videosUncheckedCreateInput>
    /**
     * In case the collections_videos was found with the provided `where` argument, update it with this data.
     */
    update: XOR<collections_videosUpdateInput, collections_videosUncheckedUpdateInput>
  }


  /**
   * collections_videos delete
   */
  export type collections_videosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collections_videos
     */
    select?: collections_videosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: collections_videosInclude<ExtArgs> | null
    /**
     * Filter which collections_videos to delete.
     */
    where: collections_videosWhereUniqueInput
  }


  /**
   * collections_videos deleteMany
   */
  export type collections_videosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which collections_videos to delete
     */
    where?: collections_videosWhereInput
  }


  /**
   * collections_videos without action
   */
  export type collections_videosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collections_videos
     */
    select?: collections_videosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: collections_videosInclude<ExtArgs> | null
  }



  /**
   * Model entities
   */

  export type AggregateEntities = {
    _count: EntitiesCountAggregateOutputType | null
    _avg: EntitiesAvgAggregateOutputType | null
    _sum: EntitiesSumAggregateOutputType | null
    _min: EntitiesMinAggregateOutputType | null
    _max: EntitiesMaxAggregateOutputType | null
  }

  export type EntitiesAvgAggregateOutputType = {
    entity_id: number | null
    individual_id: number | null
    group_id: number | null
    organization_id: number | null
  }

  export type EntitiesSumAggregateOutputType = {
    entity_id: number | null
    individual_id: number | null
    group_id: number | null
    organization_id: number | null
  }

  export type EntitiesMinAggregateOutputType = {
    entity_id: number | null
    individual_id: number | null
    group_id: number | null
    organization_id: number | null
  }

  export type EntitiesMaxAggregateOutputType = {
    entity_id: number | null
    individual_id: number | null
    group_id: number | null
    organization_id: number | null
  }

  export type EntitiesCountAggregateOutputType = {
    entity_id: number
    individual_id: number
    group_id: number
    organization_id: number
    _all: number
  }


  export type EntitiesAvgAggregateInputType = {
    entity_id?: true
    individual_id?: true
    group_id?: true
    organization_id?: true
  }

  export type EntitiesSumAggregateInputType = {
    entity_id?: true
    individual_id?: true
    group_id?: true
    organization_id?: true
  }

  export type EntitiesMinAggregateInputType = {
    entity_id?: true
    individual_id?: true
    group_id?: true
    organization_id?: true
  }

  export type EntitiesMaxAggregateInputType = {
    entity_id?: true
    individual_id?: true
    group_id?: true
    organization_id?: true
  }

  export type EntitiesCountAggregateInputType = {
    entity_id?: true
    individual_id?: true
    group_id?: true
    organization_id?: true
    _all?: true
  }

  export type EntitiesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which entities to aggregate.
     */
    where?: entitiesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of entities to fetch.
     */
    orderBy?: entitiesOrderByWithRelationInput | entitiesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: entitiesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` entities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` entities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned entities
    **/
    _count?: true | EntitiesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EntitiesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EntitiesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EntitiesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EntitiesMaxAggregateInputType
  }

  export type GetEntitiesAggregateType<T extends EntitiesAggregateArgs> = {
        [P in keyof T & keyof AggregateEntities]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEntities[P]>
      : GetScalarType<T[P], AggregateEntities[P]>
  }




  export type entitiesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: entitiesWhereInput
    orderBy?: entitiesOrderByWithAggregationInput | entitiesOrderByWithAggregationInput[]
    by: EntitiesScalarFieldEnum[] | EntitiesScalarFieldEnum
    having?: entitiesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EntitiesCountAggregateInputType | true
    _avg?: EntitiesAvgAggregateInputType
    _sum?: EntitiesSumAggregateInputType
    _min?: EntitiesMinAggregateInputType
    _max?: EntitiesMaxAggregateInputType
  }

  export type EntitiesGroupByOutputType = {
    entity_id: number
    individual_id: number | null
    group_id: number | null
    organization_id: number | null
    _count: EntitiesCountAggregateOutputType | null
    _avg: EntitiesAvgAggregateOutputType | null
    _sum: EntitiesSumAggregateOutputType | null
    _min: EntitiesMinAggregateOutputType | null
    _max: EntitiesMaxAggregateOutputType | null
  }

  type GetEntitiesGroupByPayload<T extends entitiesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EntitiesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EntitiesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EntitiesGroupByOutputType[P]>
            : GetScalarType<T[P], EntitiesGroupByOutputType[P]>
        }
      >
    >


  export type entitiesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    entity_id?: boolean
    individual_id?: boolean
    group_id?: boolean
    organization_id?: boolean
    groups?: boolean | entities$groupsArgs<ExtArgs>
    individuals?: boolean | entities$individualsArgs<ExtArgs>
    organizations?: boolean | entities$organizationsArgs<ExtArgs>
    entities_images?: boolean | entities$entities_imagesArgs<ExtArgs>
    entities_sheets?: boolean | entities$entities_sheetsArgs<ExtArgs>
    entities_videos?: boolean | entities$entities_videosArgs<ExtArgs>
    _count?: boolean | EntitiesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["entities"]>

  export type entitiesSelectScalar = {
    entity_id?: boolean
    individual_id?: boolean
    group_id?: boolean
    organization_id?: boolean
  }

  export type entitiesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    groups?: boolean | entities$groupsArgs<ExtArgs>
    individuals?: boolean | entities$individualsArgs<ExtArgs>
    organizations?: boolean | entities$organizationsArgs<ExtArgs>
    entities_images?: boolean | entities$entities_imagesArgs<ExtArgs>
    entities_sheets?: boolean | entities$entities_sheetsArgs<ExtArgs>
    entities_videos?: boolean | entities$entities_videosArgs<ExtArgs>
    _count?: boolean | EntitiesCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $entitiesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "entities"
    objects: {
      groups: Prisma.$groupsPayload<ExtArgs> | null
      individuals: Prisma.$individualsPayload<ExtArgs> | null
      organizations: Prisma.$organizationsPayload<ExtArgs> | null
      entities_images: Prisma.$entities_imagesPayload<ExtArgs>[]
      entities_sheets: Prisma.$entities_sheetsPayload<ExtArgs>[]
      entities_videos: Prisma.$entities_videosPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      entity_id: number
      individual_id: number | null
      group_id: number | null
      organization_id: number | null
    }, ExtArgs["result"]["entities"]>
    composites: {}
  }


  type entitiesGetPayload<S extends boolean | null | undefined | entitiesDefaultArgs> = $Result.GetResult<Prisma.$entitiesPayload, S>

  type entitiesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<entitiesFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: EntitiesCountAggregateInputType | true
    }

  export interface entitiesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['entities'], meta: { name: 'entities' } }
    /**
     * Find zero or one Entities that matches the filter.
     * @param {entitiesFindUniqueArgs} args - Arguments to find a Entities
     * @example
     * // Get one Entities
     * const entities = await prisma.entities.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends entitiesFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, entitiesFindUniqueArgs<ExtArgs>>
    ): Prisma__entitiesClient<$Result.GetResult<Prisma.$entitiesPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Entities that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {entitiesFindUniqueOrThrowArgs} args - Arguments to find a Entities
     * @example
     * // Get one Entities
     * const entities = await prisma.entities.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends entitiesFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, entitiesFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__entitiesClient<$Result.GetResult<Prisma.$entitiesPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Entities that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {entitiesFindFirstArgs} args - Arguments to find a Entities
     * @example
     * // Get one Entities
     * const entities = await prisma.entities.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends entitiesFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, entitiesFindFirstArgs<ExtArgs>>
    ): Prisma__entitiesClient<$Result.GetResult<Prisma.$entitiesPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Entities that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {entitiesFindFirstOrThrowArgs} args - Arguments to find a Entities
     * @example
     * // Get one Entities
     * const entities = await prisma.entities.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends entitiesFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, entitiesFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__entitiesClient<$Result.GetResult<Prisma.$entitiesPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Entities that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {entitiesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Entities
     * const entities = await prisma.entities.findMany()
     * 
     * // Get first 10 Entities
     * const entities = await prisma.entities.findMany({ take: 10 })
     * 
     * // Only select the `entity_id`
     * const entitiesWithEntity_idOnly = await prisma.entities.findMany({ select: { entity_id: true } })
     * 
    **/
    findMany<T extends entitiesFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, entitiesFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$entitiesPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Entities.
     * @param {entitiesCreateArgs} args - Arguments to create a Entities.
     * @example
     * // Create one Entities
     * const Entities = await prisma.entities.create({
     *   data: {
     *     // ... data to create a Entities
     *   }
     * })
     * 
    **/
    create<T extends entitiesCreateArgs<ExtArgs>>(
      args: SelectSubset<T, entitiesCreateArgs<ExtArgs>>
    ): Prisma__entitiesClient<$Result.GetResult<Prisma.$entitiesPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Entities.
     *     @param {entitiesCreateManyArgs} args - Arguments to create many Entities.
     *     @example
     *     // Create many Entities
     *     const entities = await prisma.entities.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends entitiesCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, entitiesCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Entities.
     * @param {entitiesDeleteArgs} args - Arguments to delete one Entities.
     * @example
     * // Delete one Entities
     * const Entities = await prisma.entities.delete({
     *   where: {
     *     // ... filter to delete one Entities
     *   }
     * })
     * 
    **/
    delete<T extends entitiesDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, entitiesDeleteArgs<ExtArgs>>
    ): Prisma__entitiesClient<$Result.GetResult<Prisma.$entitiesPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Entities.
     * @param {entitiesUpdateArgs} args - Arguments to update one Entities.
     * @example
     * // Update one Entities
     * const entities = await prisma.entities.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends entitiesUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, entitiesUpdateArgs<ExtArgs>>
    ): Prisma__entitiesClient<$Result.GetResult<Prisma.$entitiesPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Entities.
     * @param {entitiesDeleteManyArgs} args - Arguments to filter Entities to delete.
     * @example
     * // Delete a few Entities
     * const { count } = await prisma.entities.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends entitiesDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, entitiesDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Entities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {entitiesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Entities
     * const entities = await prisma.entities.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends entitiesUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, entitiesUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Entities.
     * @param {entitiesUpsertArgs} args - Arguments to update or create a Entities.
     * @example
     * // Update or create a Entities
     * const entities = await prisma.entities.upsert({
     *   create: {
     *     // ... data to create a Entities
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Entities we want to update
     *   }
     * })
    **/
    upsert<T extends entitiesUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, entitiesUpsertArgs<ExtArgs>>
    ): Prisma__entitiesClient<$Result.GetResult<Prisma.$entitiesPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Entities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {entitiesCountArgs} args - Arguments to filter Entities to count.
     * @example
     * // Count the number of Entities
     * const count = await prisma.entities.count({
     *   where: {
     *     // ... the filter for the Entities we want to count
     *   }
     * })
    **/
    count<T extends entitiesCountArgs>(
      args?: Subset<T, entitiesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EntitiesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Entities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EntitiesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EntitiesAggregateArgs>(args: Subset<T, EntitiesAggregateArgs>): Prisma.PrismaPromise<GetEntitiesAggregateType<T>>

    /**
     * Group by Entities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {entitiesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends entitiesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: entitiesGroupByArgs['orderBy'] }
        : { orderBy?: entitiesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, entitiesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEntitiesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the entities model
   */
  readonly fields: entitiesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for entities.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__entitiesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    groups<T extends entities$groupsArgs<ExtArgs> = {}>(args?: Subset<T, entities$groupsArgs<ExtArgs>>): Prisma__groupsClient<$Result.GetResult<Prisma.$groupsPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    individuals<T extends entities$individualsArgs<ExtArgs> = {}>(args?: Subset<T, entities$individualsArgs<ExtArgs>>): Prisma__individualsClient<$Result.GetResult<Prisma.$individualsPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    organizations<T extends entities$organizationsArgs<ExtArgs> = {}>(args?: Subset<T, entities$organizationsArgs<ExtArgs>>): Prisma__organizationsClient<$Result.GetResult<Prisma.$organizationsPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    entities_images<T extends entities$entities_imagesArgs<ExtArgs> = {}>(args?: Subset<T, entities$entities_imagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$entities_imagesPayload<ExtArgs>, T, 'findMany'> | Null>;

    entities_sheets<T extends entities$entities_sheetsArgs<ExtArgs> = {}>(args?: Subset<T, entities$entities_sheetsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$entities_sheetsPayload<ExtArgs>, T, 'findMany'> | Null>;

    entities_videos<T extends entities$entities_videosArgs<ExtArgs> = {}>(args?: Subset<T, entities$entities_videosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$entities_videosPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the entities model
   */ 
  interface entitiesFieldRefs {
    readonly entity_id: FieldRef<"entities", 'Int'>
    readonly individual_id: FieldRef<"entities", 'Int'>
    readonly group_id: FieldRef<"entities", 'Int'>
    readonly organization_id: FieldRef<"entities", 'Int'>
  }
    

  // Custom InputTypes

  /**
   * entities findUnique
   */
  export type entitiesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entities
     */
    select?: entitiesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: entitiesInclude<ExtArgs> | null
    /**
     * Filter, which entities to fetch.
     */
    where: entitiesWhereUniqueInput
  }


  /**
   * entities findUniqueOrThrow
   */
  export type entitiesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entities
     */
    select?: entitiesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: entitiesInclude<ExtArgs> | null
    /**
     * Filter, which entities to fetch.
     */
    where: entitiesWhereUniqueInput
  }


  /**
   * entities findFirst
   */
  export type entitiesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entities
     */
    select?: entitiesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: entitiesInclude<ExtArgs> | null
    /**
     * Filter, which entities to fetch.
     */
    where?: entitiesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of entities to fetch.
     */
    orderBy?: entitiesOrderByWithRelationInput | entitiesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for entities.
     */
    cursor?: entitiesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` entities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` entities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of entities.
     */
    distinct?: EntitiesScalarFieldEnum | EntitiesScalarFieldEnum[]
  }


  /**
   * entities findFirstOrThrow
   */
  export type entitiesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entities
     */
    select?: entitiesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: entitiesInclude<ExtArgs> | null
    /**
     * Filter, which entities to fetch.
     */
    where?: entitiesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of entities to fetch.
     */
    orderBy?: entitiesOrderByWithRelationInput | entitiesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for entities.
     */
    cursor?: entitiesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` entities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` entities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of entities.
     */
    distinct?: EntitiesScalarFieldEnum | EntitiesScalarFieldEnum[]
  }


  /**
   * entities findMany
   */
  export type entitiesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entities
     */
    select?: entitiesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: entitiesInclude<ExtArgs> | null
    /**
     * Filter, which entities to fetch.
     */
    where?: entitiesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of entities to fetch.
     */
    orderBy?: entitiesOrderByWithRelationInput | entitiesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing entities.
     */
    cursor?: entitiesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` entities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` entities.
     */
    skip?: number
    distinct?: EntitiesScalarFieldEnum | EntitiesScalarFieldEnum[]
  }


  /**
   * entities create
   */
  export type entitiesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entities
     */
    select?: entitiesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: entitiesInclude<ExtArgs> | null
    /**
     * The data needed to create a entities.
     */
    data?: XOR<entitiesCreateInput, entitiesUncheckedCreateInput>
  }


  /**
   * entities createMany
   */
  export type entitiesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many entities.
     */
    data: entitiesCreateManyInput | entitiesCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * entities update
   */
  export type entitiesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entities
     */
    select?: entitiesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: entitiesInclude<ExtArgs> | null
    /**
     * The data needed to update a entities.
     */
    data: XOR<entitiesUpdateInput, entitiesUncheckedUpdateInput>
    /**
     * Choose, which entities to update.
     */
    where: entitiesWhereUniqueInput
  }


  /**
   * entities updateMany
   */
  export type entitiesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update entities.
     */
    data: XOR<entitiesUpdateManyMutationInput, entitiesUncheckedUpdateManyInput>
    /**
     * Filter which entities to update
     */
    where?: entitiesWhereInput
  }


  /**
   * entities upsert
   */
  export type entitiesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entities
     */
    select?: entitiesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: entitiesInclude<ExtArgs> | null
    /**
     * The filter to search for the entities to update in case it exists.
     */
    where: entitiesWhereUniqueInput
    /**
     * In case the entities found by the `where` argument doesn't exist, create a new entities with this data.
     */
    create: XOR<entitiesCreateInput, entitiesUncheckedCreateInput>
    /**
     * In case the entities was found with the provided `where` argument, update it with this data.
     */
    update: XOR<entitiesUpdateInput, entitiesUncheckedUpdateInput>
  }


  /**
   * entities delete
   */
  export type entitiesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entities
     */
    select?: entitiesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: entitiesInclude<ExtArgs> | null
    /**
     * Filter which entities to delete.
     */
    where: entitiesWhereUniqueInput
  }


  /**
   * entities deleteMany
   */
  export type entitiesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which entities to delete
     */
    where?: entitiesWhereInput
  }


  /**
   * entities.groups
   */
  export type entities$groupsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the groups
     */
    select?: groupsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: groupsInclude<ExtArgs> | null
    where?: groupsWhereInput
  }


  /**
   * entities.individuals
   */
  export type entities$individualsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the individuals
     */
    select?: individualsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: individualsInclude<ExtArgs> | null
    where?: individualsWhereInput
  }


  /**
   * entities.organizations
   */
  export type entities$organizationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the organizations
     */
    select?: organizationsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: organizationsInclude<ExtArgs> | null
    where?: organizationsWhereInput
  }


  /**
   * entities.entities_images
   */
  export type entities$entities_imagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entities_images
     */
    select?: entities_imagesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: entities_imagesInclude<ExtArgs> | null
    where?: entities_imagesWhereInput
    orderBy?: entities_imagesOrderByWithRelationInput | entities_imagesOrderByWithRelationInput[]
    cursor?: entities_imagesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Entities_imagesScalarFieldEnum | Entities_imagesScalarFieldEnum[]
  }


  /**
   * entities.entities_sheets
   */
  export type entities$entities_sheetsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entities_sheets
     */
    select?: entities_sheetsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: entities_sheetsInclude<ExtArgs> | null
    where?: entities_sheetsWhereInput
    orderBy?: entities_sheetsOrderByWithRelationInput | entities_sheetsOrderByWithRelationInput[]
    cursor?: entities_sheetsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Entities_sheetsScalarFieldEnum | Entities_sheetsScalarFieldEnum[]
  }


  /**
   * entities.entities_videos
   */
  export type entities$entities_videosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entities_videos
     */
    select?: entities_videosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: entities_videosInclude<ExtArgs> | null
    where?: entities_videosWhereInput
    orderBy?: entities_videosOrderByWithRelationInput | entities_videosOrderByWithRelationInput[]
    cursor?: entities_videosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Entities_videosScalarFieldEnum | Entities_videosScalarFieldEnum[]
  }


  /**
   * entities without action
   */
  export type entitiesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entities
     */
    select?: entitiesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: entitiesInclude<ExtArgs> | null
  }



  /**
   * Model entities_images
   */

  export type AggregateEntities_images = {
    _count: Entities_imagesCountAggregateOutputType | null
    _avg: Entities_imagesAvgAggregateOutputType | null
    _sum: Entities_imagesSumAggregateOutputType | null
    _min: Entities_imagesMinAggregateOutputType | null
    _max: Entities_imagesMaxAggregateOutputType | null
  }

  export type Entities_imagesAvgAggregateOutputType = {
    entities_images_id: number | null
    entity_id: number | null
    image_id: number | null
  }

  export type Entities_imagesSumAggregateOutputType = {
    entities_images_id: number | null
    entity_id: number | null
    image_id: number | null
  }

  export type Entities_imagesMinAggregateOutputType = {
    entities_images_id: number | null
    entity_id: number | null
    image_id: number | null
    date_added: Date | null
    pinned: boolean | null
    date_pinned: Date | null
  }

  export type Entities_imagesMaxAggregateOutputType = {
    entities_images_id: number | null
    entity_id: number | null
    image_id: number | null
    date_added: Date | null
    pinned: boolean | null
    date_pinned: Date | null
  }

  export type Entities_imagesCountAggregateOutputType = {
    entities_images_id: number
    entity_id: number
    image_id: number
    date_added: number
    pinned: number
    date_pinned: number
    _all: number
  }


  export type Entities_imagesAvgAggregateInputType = {
    entities_images_id?: true
    entity_id?: true
    image_id?: true
  }

  export type Entities_imagesSumAggregateInputType = {
    entities_images_id?: true
    entity_id?: true
    image_id?: true
  }

  export type Entities_imagesMinAggregateInputType = {
    entities_images_id?: true
    entity_id?: true
    image_id?: true
    date_added?: true
    pinned?: true
    date_pinned?: true
  }

  export type Entities_imagesMaxAggregateInputType = {
    entities_images_id?: true
    entity_id?: true
    image_id?: true
    date_added?: true
    pinned?: true
    date_pinned?: true
  }

  export type Entities_imagesCountAggregateInputType = {
    entities_images_id?: true
    entity_id?: true
    image_id?: true
    date_added?: true
    pinned?: true
    date_pinned?: true
    _all?: true
  }

  export type Entities_imagesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which entities_images to aggregate.
     */
    where?: entities_imagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of entities_images to fetch.
     */
    orderBy?: entities_imagesOrderByWithRelationInput | entities_imagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: entities_imagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` entities_images from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` entities_images.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned entities_images
    **/
    _count?: true | Entities_imagesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Entities_imagesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Entities_imagesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Entities_imagesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Entities_imagesMaxAggregateInputType
  }

  export type GetEntities_imagesAggregateType<T extends Entities_imagesAggregateArgs> = {
        [P in keyof T & keyof AggregateEntities_images]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEntities_images[P]>
      : GetScalarType<T[P], AggregateEntities_images[P]>
  }




  export type entities_imagesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: entities_imagesWhereInput
    orderBy?: entities_imagesOrderByWithAggregationInput | entities_imagesOrderByWithAggregationInput[]
    by: Entities_imagesScalarFieldEnum[] | Entities_imagesScalarFieldEnum
    having?: entities_imagesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Entities_imagesCountAggregateInputType | true
    _avg?: Entities_imagesAvgAggregateInputType
    _sum?: Entities_imagesSumAggregateInputType
    _min?: Entities_imagesMinAggregateInputType
    _max?: Entities_imagesMaxAggregateInputType
  }

  export type Entities_imagesGroupByOutputType = {
    entities_images_id: number
    entity_id: number
    image_id: number
    date_added: Date
    pinned: boolean
    date_pinned: Date | null
    _count: Entities_imagesCountAggregateOutputType | null
    _avg: Entities_imagesAvgAggregateOutputType | null
    _sum: Entities_imagesSumAggregateOutputType | null
    _min: Entities_imagesMinAggregateOutputType | null
    _max: Entities_imagesMaxAggregateOutputType | null
  }

  type GetEntities_imagesGroupByPayload<T extends entities_imagesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Entities_imagesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Entities_imagesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Entities_imagesGroupByOutputType[P]>
            : GetScalarType<T[P], Entities_imagesGroupByOutputType[P]>
        }
      >
    >


  export type entities_imagesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    entities_images_id?: boolean
    entity_id?: boolean
    image_id?: boolean
    date_added?: boolean
    pinned?: boolean
    date_pinned?: boolean
    entities?: boolean | entitiesDefaultArgs<ExtArgs>
    images?: boolean | imagesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["entities_images"]>

  export type entities_imagesSelectScalar = {
    entities_images_id?: boolean
    entity_id?: boolean
    image_id?: boolean
    date_added?: boolean
    pinned?: boolean
    date_pinned?: boolean
  }

  export type entities_imagesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    entities?: boolean | entitiesDefaultArgs<ExtArgs>
    images?: boolean | imagesDefaultArgs<ExtArgs>
  }


  export type $entities_imagesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "entities_images"
    objects: {
      entities: Prisma.$entitiesPayload<ExtArgs>
      images: Prisma.$imagesPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      entities_images_id: number
      entity_id: number
      image_id: number
      date_added: Date
      pinned: boolean
      date_pinned: Date | null
    }, ExtArgs["result"]["entities_images"]>
    composites: {}
  }


  type entities_imagesGetPayload<S extends boolean | null | undefined | entities_imagesDefaultArgs> = $Result.GetResult<Prisma.$entities_imagesPayload, S>

  type entities_imagesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<entities_imagesFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Entities_imagesCountAggregateInputType | true
    }

  export interface entities_imagesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['entities_images'], meta: { name: 'entities_images' } }
    /**
     * Find zero or one Entities_images that matches the filter.
     * @param {entities_imagesFindUniqueArgs} args - Arguments to find a Entities_images
     * @example
     * // Get one Entities_images
     * const entities_images = await prisma.entities_images.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends entities_imagesFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, entities_imagesFindUniqueArgs<ExtArgs>>
    ): Prisma__entities_imagesClient<$Result.GetResult<Prisma.$entities_imagesPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Entities_images that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {entities_imagesFindUniqueOrThrowArgs} args - Arguments to find a Entities_images
     * @example
     * // Get one Entities_images
     * const entities_images = await prisma.entities_images.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends entities_imagesFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, entities_imagesFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__entities_imagesClient<$Result.GetResult<Prisma.$entities_imagesPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Entities_images that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {entities_imagesFindFirstArgs} args - Arguments to find a Entities_images
     * @example
     * // Get one Entities_images
     * const entities_images = await prisma.entities_images.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends entities_imagesFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, entities_imagesFindFirstArgs<ExtArgs>>
    ): Prisma__entities_imagesClient<$Result.GetResult<Prisma.$entities_imagesPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Entities_images that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {entities_imagesFindFirstOrThrowArgs} args - Arguments to find a Entities_images
     * @example
     * // Get one Entities_images
     * const entities_images = await prisma.entities_images.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends entities_imagesFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, entities_imagesFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__entities_imagesClient<$Result.GetResult<Prisma.$entities_imagesPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Entities_images that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {entities_imagesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Entities_images
     * const entities_images = await prisma.entities_images.findMany()
     * 
     * // Get first 10 Entities_images
     * const entities_images = await prisma.entities_images.findMany({ take: 10 })
     * 
     * // Only select the `entities_images_id`
     * const entities_imagesWithEntities_images_idOnly = await prisma.entities_images.findMany({ select: { entities_images_id: true } })
     * 
    **/
    findMany<T extends entities_imagesFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, entities_imagesFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$entities_imagesPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Entities_images.
     * @param {entities_imagesCreateArgs} args - Arguments to create a Entities_images.
     * @example
     * // Create one Entities_images
     * const Entities_images = await prisma.entities_images.create({
     *   data: {
     *     // ... data to create a Entities_images
     *   }
     * })
     * 
    **/
    create<T extends entities_imagesCreateArgs<ExtArgs>>(
      args: SelectSubset<T, entities_imagesCreateArgs<ExtArgs>>
    ): Prisma__entities_imagesClient<$Result.GetResult<Prisma.$entities_imagesPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Entities_images.
     *     @param {entities_imagesCreateManyArgs} args - Arguments to create many Entities_images.
     *     @example
     *     // Create many Entities_images
     *     const entities_images = await prisma.entities_images.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends entities_imagesCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, entities_imagesCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Entities_images.
     * @param {entities_imagesDeleteArgs} args - Arguments to delete one Entities_images.
     * @example
     * // Delete one Entities_images
     * const Entities_images = await prisma.entities_images.delete({
     *   where: {
     *     // ... filter to delete one Entities_images
     *   }
     * })
     * 
    **/
    delete<T extends entities_imagesDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, entities_imagesDeleteArgs<ExtArgs>>
    ): Prisma__entities_imagesClient<$Result.GetResult<Prisma.$entities_imagesPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Entities_images.
     * @param {entities_imagesUpdateArgs} args - Arguments to update one Entities_images.
     * @example
     * // Update one Entities_images
     * const entities_images = await prisma.entities_images.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends entities_imagesUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, entities_imagesUpdateArgs<ExtArgs>>
    ): Prisma__entities_imagesClient<$Result.GetResult<Prisma.$entities_imagesPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Entities_images.
     * @param {entities_imagesDeleteManyArgs} args - Arguments to filter Entities_images to delete.
     * @example
     * // Delete a few Entities_images
     * const { count } = await prisma.entities_images.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends entities_imagesDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, entities_imagesDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Entities_images.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {entities_imagesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Entities_images
     * const entities_images = await prisma.entities_images.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends entities_imagesUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, entities_imagesUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Entities_images.
     * @param {entities_imagesUpsertArgs} args - Arguments to update or create a Entities_images.
     * @example
     * // Update or create a Entities_images
     * const entities_images = await prisma.entities_images.upsert({
     *   create: {
     *     // ... data to create a Entities_images
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Entities_images we want to update
     *   }
     * })
    **/
    upsert<T extends entities_imagesUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, entities_imagesUpsertArgs<ExtArgs>>
    ): Prisma__entities_imagesClient<$Result.GetResult<Prisma.$entities_imagesPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Entities_images.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {entities_imagesCountArgs} args - Arguments to filter Entities_images to count.
     * @example
     * // Count the number of Entities_images
     * const count = await prisma.entities_images.count({
     *   where: {
     *     // ... the filter for the Entities_images we want to count
     *   }
     * })
    **/
    count<T extends entities_imagesCountArgs>(
      args?: Subset<T, entities_imagesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Entities_imagesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Entities_images.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Entities_imagesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Entities_imagesAggregateArgs>(args: Subset<T, Entities_imagesAggregateArgs>): Prisma.PrismaPromise<GetEntities_imagesAggregateType<T>>

    /**
     * Group by Entities_images.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {entities_imagesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends entities_imagesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: entities_imagesGroupByArgs['orderBy'] }
        : { orderBy?: entities_imagesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, entities_imagesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEntities_imagesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the entities_images model
   */
  readonly fields: entities_imagesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for entities_images.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__entities_imagesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    entities<T extends entitiesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, entitiesDefaultArgs<ExtArgs>>): Prisma__entitiesClient<$Result.GetResult<Prisma.$entitiesPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    images<T extends imagesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, imagesDefaultArgs<ExtArgs>>): Prisma__imagesClient<$Result.GetResult<Prisma.$imagesPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the entities_images model
   */ 
  interface entities_imagesFieldRefs {
    readonly entities_images_id: FieldRef<"entities_images", 'Int'>
    readonly entity_id: FieldRef<"entities_images", 'Int'>
    readonly image_id: FieldRef<"entities_images", 'Int'>
    readonly date_added: FieldRef<"entities_images", 'DateTime'>
    readonly pinned: FieldRef<"entities_images", 'Boolean'>
    readonly date_pinned: FieldRef<"entities_images", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * entities_images findUnique
   */
  export type entities_imagesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entities_images
     */
    select?: entities_imagesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: entities_imagesInclude<ExtArgs> | null
    /**
     * Filter, which entities_images to fetch.
     */
    where: entities_imagesWhereUniqueInput
  }


  /**
   * entities_images findUniqueOrThrow
   */
  export type entities_imagesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entities_images
     */
    select?: entities_imagesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: entities_imagesInclude<ExtArgs> | null
    /**
     * Filter, which entities_images to fetch.
     */
    where: entities_imagesWhereUniqueInput
  }


  /**
   * entities_images findFirst
   */
  export type entities_imagesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entities_images
     */
    select?: entities_imagesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: entities_imagesInclude<ExtArgs> | null
    /**
     * Filter, which entities_images to fetch.
     */
    where?: entities_imagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of entities_images to fetch.
     */
    orderBy?: entities_imagesOrderByWithRelationInput | entities_imagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for entities_images.
     */
    cursor?: entities_imagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` entities_images from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` entities_images.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of entities_images.
     */
    distinct?: Entities_imagesScalarFieldEnum | Entities_imagesScalarFieldEnum[]
  }


  /**
   * entities_images findFirstOrThrow
   */
  export type entities_imagesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entities_images
     */
    select?: entities_imagesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: entities_imagesInclude<ExtArgs> | null
    /**
     * Filter, which entities_images to fetch.
     */
    where?: entities_imagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of entities_images to fetch.
     */
    orderBy?: entities_imagesOrderByWithRelationInput | entities_imagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for entities_images.
     */
    cursor?: entities_imagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` entities_images from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` entities_images.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of entities_images.
     */
    distinct?: Entities_imagesScalarFieldEnum | Entities_imagesScalarFieldEnum[]
  }


  /**
   * entities_images findMany
   */
  export type entities_imagesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entities_images
     */
    select?: entities_imagesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: entities_imagesInclude<ExtArgs> | null
    /**
     * Filter, which entities_images to fetch.
     */
    where?: entities_imagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of entities_images to fetch.
     */
    orderBy?: entities_imagesOrderByWithRelationInput | entities_imagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing entities_images.
     */
    cursor?: entities_imagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` entities_images from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` entities_images.
     */
    skip?: number
    distinct?: Entities_imagesScalarFieldEnum | Entities_imagesScalarFieldEnum[]
  }


  /**
   * entities_images create
   */
  export type entities_imagesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entities_images
     */
    select?: entities_imagesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: entities_imagesInclude<ExtArgs> | null
    /**
     * The data needed to create a entities_images.
     */
    data: XOR<entities_imagesCreateInput, entities_imagesUncheckedCreateInput>
  }


  /**
   * entities_images createMany
   */
  export type entities_imagesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many entities_images.
     */
    data: entities_imagesCreateManyInput | entities_imagesCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * entities_images update
   */
  export type entities_imagesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entities_images
     */
    select?: entities_imagesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: entities_imagesInclude<ExtArgs> | null
    /**
     * The data needed to update a entities_images.
     */
    data: XOR<entities_imagesUpdateInput, entities_imagesUncheckedUpdateInput>
    /**
     * Choose, which entities_images to update.
     */
    where: entities_imagesWhereUniqueInput
  }


  /**
   * entities_images updateMany
   */
  export type entities_imagesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update entities_images.
     */
    data: XOR<entities_imagesUpdateManyMutationInput, entities_imagesUncheckedUpdateManyInput>
    /**
     * Filter which entities_images to update
     */
    where?: entities_imagesWhereInput
  }


  /**
   * entities_images upsert
   */
  export type entities_imagesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entities_images
     */
    select?: entities_imagesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: entities_imagesInclude<ExtArgs> | null
    /**
     * The filter to search for the entities_images to update in case it exists.
     */
    where: entities_imagesWhereUniqueInput
    /**
     * In case the entities_images found by the `where` argument doesn't exist, create a new entities_images with this data.
     */
    create: XOR<entities_imagesCreateInput, entities_imagesUncheckedCreateInput>
    /**
     * In case the entities_images was found with the provided `where` argument, update it with this data.
     */
    update: XOR<entities_imagesUpdateInput, entities_imagesUncheckedUpdateInput>
  }


  /**
   * entities_images delete
   */
  export type entities_imagesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entities_images
     */
    select?: entities_imagesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: entities_imagesInclude<ExtArgs> | null
    /**
     * Filter which entities_images to delete.
     */
    where: entities_imagesWhereUniqueInput
  }


  /**
   * entities_images deleteMany
   */
  export type entities_imagesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which entities_images to delete
     */
    where?: entities_imagesWhereInput
  }


  /**
   * entities_images without action
   */
  export type entities_imagesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entities_images
     */
    select?: entities_imagesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: entities_imagesInclude<ExtArgs> | null
  }



  /**
   * Model entities_references
   */

  export type AggregateEntities_references = {
    _count: Entities_referencesCountAggregateOutputType | null
    _avg: Entities_referencesAvgAggregateOutputType | null
    _sum: Entities_referencesSumAggregateOutputType | null
    _min: Entities_referencesMinAggregateOutputType | null
    _max: Entities_referencesMaxAggregateOutputType | null
  }

  export type Entities_referencesAvgAggregateOutputType = {
    reference_id: number | null
    individual_id: number | null
    group_id: number | null
    organization_id: number | null
  }

  export type Entities_referencesSumAggregateOutputType = {
    reference_id: number | null
    individual_id: number | null
    group_id: number | null
    organization_id: number | null
  }

  export type Entities_referencesMinAggregateOutputType = {
    reference_id: number | null
    individual_id: number | null
    group_id: number | null
    organization_id: number | null
    title: string | null
    author: string | null
    url: string | null
  }

  export type Entities_referencesMaxAggregateOutputType = {
    reference_id: number | null
    individual_id: number | null
    group_id: number | null
    organization_id: number | null
    title: string | null
    author: string | null
    url: string | null
  }

  export type Entities_referencesCountAggregateOutputType = {
    reference_id: number
    individual_id: number
    group_id: number
    organization_id: number
    title: number
    author: number
    url: number
    _all: number
  }


  export type Entities_referencesAvgAggregateInputType = {
    reference_id?: true
    individual_id?: true
    group_id?: true
    organization_id?: true
  }

  export type Entities_referencesSumAggregateInputType = {
    reference_id?: true
    individual_id?: true
    group_id?: true
    organization_id?: true
  }

  export type Entities_referencesMinAggregateInputType = {
    reference_id?: true
    individual_id?: true
    group_id?: true
    organization_id?: true
    title?: true
    author?: true
    url?: true
  }

  export type Entities_referencesMaxAggregateInputType = {
    reference_id?: true
    individual_id?: true
    group_id?: true
    organization_id?: true
    title?: true
    author?: true
    url?: true
  }

  export type Entities_referencesCountAggregateInputType = {
    reference_id?: true
    individual_id?: true
    group_id?: true
    organization_id?: true
    title?: true
    author?: true
    url?: true
    _all?: true
  }

  export type Entities_referencesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which entities_references to aggregate.
     */
    where?: entities_referencesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of entities_references to fetch.
     */
    orderBy?: entities_referencesOrderByWithRelationInput | entities_referencesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: entities_referencesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` entities_references from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` entities_references.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned entities_references
    **/
    _count?: true | Entities_referencesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Entities_referencesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Entities_referencesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Entities_referencesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Entities_referencesMaxAggregateInputType
  }

  export type GetEntities_referencesAggregateType<T extends Entities_referencesAggregateArgs> = {
        [P in keyof T & keyof AggregateEntities_references]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEntities_references[P]>
      : GetScalarType<T[P], AggregateEntities_references[P]>
  }




  export type entities_referencesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: entities_referencesWhereInput
    orderBy?: entities_referencesOrderByWithAggregationInput | entities_referencesOrderByWithAggregationInput[]
    by: Entities_referencesScalarFieldEnum[] | Entities_referencesScalarFieldEnum
    having?: entities_referencesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Entities_referencesCountAggregateInputType | true
    _avg?: Entities_referencesAvgAggregateInputType
    _sum?: Entities_referencesSumAggregateInputType
    _min?: Entities_referencesMinAggregateInputType
    _max?: Entities_referencesMaxAggregateInputType
  }

  export type Entities_referencesGroupByOutputType = {
    reference_id: number
    individual_id: number | null
    group_id: number | null
    organization_id: number | null
    title: string
    author: string
    url: string
    _count: Entities_referencesCountAggregateOutputType | null
    _avg: Entities_referencesAvgAggregateOutputType | null
    _sum: Entities_referencesSumAggregateOutputType | null
    _min: Entities_referencesMinAggregateOutputType | null
    _max: Entities_referencesMaxAggregateOutputType | null
  }

  type GetEntities_referencesGroupByPayload<T extends entities_referencesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Entities_referencesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Entities_referencesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Entities_referencesGroupByOutputType[P]>
            : GetScalarType<T[P], Entities_referencesGroupByOutputType[P]>
        }
      >
    >


  export type entities_referencesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    reference_id?: boolean
    individual_id?: boolean
    group_id?: boolean
    organization_id?: boolean
    title?: boolean
    author?: boolean
    url?: boolean
    groups?: boolean | entities_references$groupsArgs<ExtArgs>
    individuals?: boolean | entities_references$individualsArgs<ExtArgs>
    organizations?: boolean | entities_references$organizationsArgs<ExtArgs>
  }, ExtArgs["result"]["entities_references"]>

  export type entities_referencesSelectScalar = {
    reference_id?: boolean
    individual_id?: boolean
    group_id?: boolean
    organization_id?: boolean
    title?: boolean
    author?: boolean
    url?: boolean
  }

  export type entities_referencesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    groups?: boolean | entities_references$groupsArgs<ExtArgs>
    individuals?: boolean | entities_references$individualsArgs<ExtArgs>
    organizations?: boolean | entities_references$organizationsArgs<ExtArgs>
  }


  export type $entities_referencesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "entities_references"
    objects: {
      groups: Prisma.$groupsPayload<ExtArgs> | null
      individuals: Prisma.$individualsPayload<ExtArgs> | null
      organizations: Prisma.$organizationsPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      reference_id: number
      individual_id: number | null
      group_id: number | null
      organization_id: number | null
      title: string
      author: string
      url: string
    }, ExtArgs["result"]["entities_references"]>
    composites: {}
  }


  type entities_referencesGetPayload<S extends boolean | null | undefined | entities_referencesDefaultArgs> = $Result.GetResult<Prisma.$entities_referencesPayload, S>

  type entities_referencesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<entities_referencesFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Entities_referencesCountAggregateInputType | true
    }

  export interface entities_referencesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['entities_references'], meta: { name: 'entities_references' } }
    /**
     * Find zero or one Entities_references that matches the filter.
     * @param {entities_referencesFindUniqueArgs} args - Arguments to find a Entities_references
     * @example
     * // Get one Entities_references
     * const entities_references = await prisma.entities_references.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends entities_referencesFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, entities_referencesFindUniqueArgs<ExtArgs>>
    ): Prisma__entities_referencesClient<$Result.GetResult<Prisma.$entities_referencesPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Entities_references that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {entities_referencesFindUniqueOrThrowArgs} args - Arguments to find a Entities_references
     * @example
     * // Get one Entities_references
     * const entities_references = await prisma.entities_references.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends entities_referencesFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, entities_referencesFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__entities_referencesClient<$Result.GetResult<Prisma.$entities_referencesPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Entities_references that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {entities_referencesFindFirstArgs} args - Arguments to find a Entities_references
     * @example
     * // Get one Entities_references
     * const entities_references = await prisma.entities_references.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends entities_referencesFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, entities_referencesFindFirstArgs<ExtArgs>>
    ): Prisma__entities_referencesClient<$Result.GetResult<Prisma.$entities_referencesPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Entities_references that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {entities_referencesFindFirstOrThrowArgs} args - Arguments to find a Entities_references
     * @example
     * // Get one Entities_references
     * const entities_references = await prisma.entities_references.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends entities_referencesFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, entities_referencesFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__entities_referencesClient<$Result.GetResult<Prisma.$entities_referencesPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Entities_references that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {entities_referencesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Entities_references
     * const entities_references = await prisma.entities_references.findMany()
     * 
     * // Get first 10 Entities_references
     * const entities_references = await prisma.entities_references.findMany({ take: 10 })
     * 
     * // Only select the `reference_id`
     * const entities_referencesWithReference_idOnly = await prisma.entities_references.findMany({ select: { reference_id: true } })
     * 
    **/
    findMany<T extends entities_referencesFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, entities_referencesFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$entities_referencesPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Entities_references.
     * @param {entities_referencesCreateArgs} args - Arguments to create a Entities_references.
     * @example
     * // Create one Entities_references
     * const Entities_references = await prisma.entities_references.create({
     *   data: {
     *     // ... data to create a Entities_references
     *   }
     * })
     * 
    **/
    create<T extends entities_referencesCreateArgs<ExtArgs>>(
      args: SelectSubset<T, entities_referencesCreateArgs<ExtArgs>>
    ): Prisma__entities_referencesClient<$Result.GetResult<Prisma.$entities_referencesPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Entities_references.
     *     @param {entities_referencesCreateManyArgs} args - Arguments to create many Entities_references.
     *     @example
     *     // Create many Entities_references
     *     const entities_references = await prisma.entities_references.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends entities_referencesCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, entities_referencesCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Entities_references.
     * @param {entities_referencesDeleteArgs} args - Arguments to delete one Entities_references.
     * @example
     * // Delete one Entities_references
     * const Entities_references = await prisma.entities_references.delete({
     *   where: {
     *     // ... filter to delete one Entities_references
     *   }
     * })
     * 
    **/
    delete<T extends entities_referencesDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, entities_referencesDeleteArgs<ExtArgs>>
    ): Prisma__entities_referencesClient<$Result.GetResult<Prisma.$entities_referencesPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Entities_references.
     * @param {entities_referencesUpdateArgs} args - Arguments to update one Entities_references.
     * @example
     * // Update one Entities_references
     * const entities_references = await prisma.entities_references.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends entities_referencesUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, entities_referencesUpdateArgs<ExtArgs>>
    ): Prisma__entities_referencesClient<$Result.GetResult<Prisma.$entities_referencesPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Entities_references.
     * @param {entities_referencesDeleteManyArgs} args - Arguments to filter Entities_references to delete.
     * @example
     * // Delete a few Entities_references
     * const { count } = await prisma.entities_references.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends entities_referencesDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, entities_referencesDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Entities_references.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {entities_referencesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Entities_references
     * const entities_references = await prisma.entities_references.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends entities_referencesUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, entities_referencesUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Entities_references.
     * @param {entities_referencesUpsertArgs} args - Arguments to update or create a Entities_references.
     * @example
     * // Update or create a Entities_references
     * const entities_references = await prisma.entities_references.upsert({
     *   create: {
     *     // ... data to create a Entities_references
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Entities_references we want to update
     *   }
     * })
    **/
    upsert<T extends entities_referencesUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, entities_referencesUpsertArgs<ExtArgs>>
    ): Prisma__entities_referencesClient<$Result.GetResult<Prisma.$entities_referencesPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Entities_references.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {entities_referencesCountArgs} args - Arguments to filter Entities_references to count.
     * @example
     * // Count the number of Entities_references
     * const count = await prisma.entities_references.count({
     *   where: {
     *     // ... the filter for the Entities_references we want to count
     *   }
     * })
    **/
    count<T extends entities_referencesCountArgs>(
      args?: Subset<T, entities_referencesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Entities_referencesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Entities_references.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Entities_referencesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Entities_referencesAggregateArgs>(args: Subset<T, Entities_referencesAggregateArgs>): Prisma.PrismaPromise<GetEntities_referencesAggregateType<T>>

    /**
     * Group by Entities_references.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {entities_referencesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends entities_referencesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: entities_referencesGroupByArgs['orderBy'] }
        : { orderBy?: entities_referencesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, entities_referencesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEntities_referencesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the entities_references model
   */
  readonly fields: entities_referencesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for entities_references.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__entities_referencesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    groups<T extends entities_references$groupsArgs<ExtArgs> = {}>(args?: Subset<T, entities_references$groupsArgs<ExtArgs>>): Prisma__groupsClient<$Result.GetResult<Prisma.$groupsPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    individuals<T extends entities_references$individualsArgs<ExtArgs> = {}>(args?: Subset<T, entities_references$individualsArgs<ExtArgs>>): Prisma__individualsClient<$Result.GetResult<Prisma.$individualsPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    organizations<T extends entities_references$organizationsArgs<ExtArgs> = {}>(args?: Subset<T, entities_references$organizationsArgs<ExtArgs>>): Prisma__organizationsClient<$Result.GetResult<Prisma.$organizationsPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the entities_references model
   */ 
  interface entities_referencesFieldRefs {
    readonly reference_id: FieldRef<"entities_references", 'Int'>
    readonly individual_id: FieldRef<"entities_references", 'Int'>
    readonly group_id: FieldRef<"entities_references", 'Int'>
    readonly organization_id: FieldRef<"entities_references", 'Int'>
    readonly title: FieldRef<"entities_references", 'String'>
    readonly author: FieldRef<"entities_references", 'String'>
    readonly url: FieldRef<"entities_references", 'String'>
  }
    

  // Custom InputTypes

  /**
   * entities_references findUnique
   */
  export type entities_referencesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entities_references
     */
    select?: entities_referencesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: entities_referencesInclude<ExtArgs> | null
    /**
     * Filter, which entities_references to fetch.
     */
    where: entities_referencesWhereUniqueInput
  }


  /**
   * entities_references findUniqueOrThrow
   */
  export type entities_referencesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entities_references
     */
    select?: entities_referencesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: entities_referencesInclude<ExtArgs> | null
    /**
     * Filter, which entities_references to fetch.
     */
    where: entities_referencesWhereUniqueInput
  }


  /**
   * entities_references findFirst
   */
  export type entities_referencesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entities_references
     */
    select?: entities_referencesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: entities_referencesInclude<ExtArgs> | null
    /**
     * Filter, which entities_references to fetch.
     */
    where?: entities_referencesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of entities_references to fetch.
     */
    orderBy?: entities_referencesOrderByWithRelationInput | entities_referencesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for entities_references.
     */
    cursor?: entities_referencesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` entities_references from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` entities_references.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of entities_references.
     */
    distinct?: Entities_referencesScalarFieldEnum | Entities_referencesScalarFieldEnum[]
  }


  /**
   * entities_references findFirstOrThrow
   */
  export type entities_referencesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entities_references
     */
    select?: entities_referencesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: entities_referencesInclude<ExtArgs> | null
    /**
     * Filter, which entities_references to fetch.
     */
    where?: entities_referencesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of entities_references to fetch.
     */
    orderBy?: entities_referencesOrderByWithRelationInput | entities_referencesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for entities_references.
     */
    cursor?: entities_referencesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` entities_references from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` entities_references.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of entities_references.
     */
    distinct?: Entities_referencesScalarFieldEnum | Entities_referencesScalarFieldEnum[]
  }


  /**
   * entities_references findMany
   */
  export type entities_referencesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entities_references
     */
    select?: entities_referencesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: entities_referencesInclude<ExtArgs> | null
    /**
     * Filter, which entities_references to fetch.
     */
    where?: entities_referencesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of entities_references to fetch.
     */
    orderBy?: entities_referencesOrderByWithRelationInput | entities_referencesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing entities_references.
     */
    cursor?: entities_referencesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` entities_references from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` entities_references.
     */
    skip?: number
    distinct?: Entities_referencesScalarFieldEnum | Entities_referencesScalarFieldEnum[]
  }


  /**
   * entities_references create
   */
  export type entities_referencesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entities_references
     */
    select?: entities_referencesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: entities_referencesInclude<ExtArgs> | null
    /**
     * The data needed to create a entities_references.
     */
    data: XOR<entities_referencesCreateInput, entities_referencesUncheckedCreateInput>
  }


  /**
   * entities_references createMany
   */
  export type entities_referencesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many entities_references.
     */
    data: entities_referencesCreateManyInput | entities_referencesCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * entities_references update
   */
  export type entities_referencesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entities_references
     */
    select?: entities_referencesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: entities_referencesInclude<ExtArgs> | null
    /**
     * The data needed to update a entities_references.
     */
    data: XOR<entities_referencesUpdateInput, entities_referencesUncheckedUpdateInput>
    /**
     * Choose, which entities_references to update.
     */
    where: entities_referencesWhereUniqueInput
  }


  /**
   * entities_references updateMany
   */
  export type entities_referencesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update entities_references.
     */
    data: XOR<entities_referencesUpdateManyMutationInput, entities_referencesUncheckedUpdateManyInput>
    /**
     * Filter which entities_references to update
     */
    where?: entities_referencesWhereInput
  }


  /**
   * entities_references upsert
   */
  export type entities_referencesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entities_references
     */
    select?: entities_referencesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: entities_referencesInclude<ExtArgs> | null
    /**
     * The filter to search for the entities_references to update in case it exists.
     */
    where: entities_referencesWhereUniqueInput
    /**
     * In case the entities_references found by the `where` argument doesn't exist, create a new entities_references with this data.
     */
    create: XOR<entities_referencesCreateInput, entities_referencesUncheckedCreateInput>
    /**
     * In case the entities_references was found with the provided `where` argument, update it with this data.
     */
    update: XOR<entities_referencesUpdateInput, entities_referencesUncheckedUpdateInput>
  }


  /**
   * entities_references delete
   */
  export type entities_referencesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entities_references
     */
    select?: entities_referencesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: entities_referencesInclude<ExtArgs> | null
    /**
     * Filter which entities_references to delete.
     */
    where: entities_referencesWhereUniqueInput
  }


  /**
   * entities_references deleteMany
   */
  export type entities_referencesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which entities_references to delete
     */
    where?: entities_referencesWhereInput
  }


  /**
   * entities_references.groups
   */
  export type entities_references$groupsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the groups
     */
    select?: groupsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: groupsInclude<ExtArgs> | null
    where?: groupsWhereInput
  }


  /**
   * entities_references.individuals
   */
  export type entities_references$individualsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the individuals
     */
    select?: individualsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: individualsInclude<ExtArgs> | null
    where?: individualsWhereInput
  }


  /**
   * entities_references.organizations
   */
  export type entities_references$organizationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the organizations
     */
    select?: organizationsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: organizationsInclude<ExtArgs> | null
    where?: organizationsWhereInput
  }


  /**
   * entities_references without action
   */
  export type entities_referencesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entities_references
     */
    select?: entities_referencesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: entities_referencesInclude<ExtArgs> | null
  }



  /**
   * Model entities_sheets
   */

  export type AggregateEntities_sheets = {
    _count: Entities_sheetsCountAggregateOutputType | null
    _avg: Entities_sheetsAvgAggregateOutputType | null
    _sum: Entities_sheetsSumAggregateOutputType | null
    _min: Entities_sheetsMinAggregateOutputType | null
    _max: Entities_sheetsMaxAggregateOutputType | null
  }

  export type Entities_sheetsAvgAggregateOutputType = {
    entities_sheets_id: number | null
    entity_id: number | null
    sheet_id: number | null
  }

  export type Entities_sheetsSumAggregateOutputType = {
    entities_sheets_id: number | null
    entity_id: number | null
    sheet_id: number | null
  }

  export type Entities_sheetsMinAggregateOutputType = {
    entities_sheets_id: number | null
    entity_id: number | null
    sheet_id: number | null
    date_added: Date | null
    pinned: boolean | null
    date_pinned: Date | null
  }

  export type Entities_sheetsMaxAggregateOutputType = {
    entities_sheets_id: number | null
    entity_id: number | null
    sheet_id: number | null
    date_added: Date | null
    pinned: boolean | null
    date_pinned: Date | null
  }

  export type Entities_sheetsCountAggregateOutputType = {
    entities_sheets_id: number
    entity_id: number
    sheet_id: number
    date_added: number
    pinned: number
    date_pinned: number
    _all: number
  }


  export type Entities_sheetsAvgAggregateInputType = {
    entities_sheets_id?: true
    entity_id?: true
    sheet_id?: true
  }

  export type Entities_sheetsSumAggregateInputType = {
    entities_sheets_id?: true
    entity_id?: true
    sheet_id?: true
  }

  export type Entities_sheetsMinAggregateInputType = {
    entities_sheets_id?: true
    entity_id?: true
    sheet_id?: true
    date_added?: true
    pinned?: true
    date_pinned?: true
  }

  export type Entities_sheetsMaxAggregateInputType = {
    entities_sheets_id?: true
    entity_id?: true
    sheet_id?: true
    date_added?: true
    pinned?: true
    date_pinned?: true
  }

  export type Entities_sheetsCountAggregateInputType = {
    entities_sheets_id?: true
    entity_id?: true
    sheet_id?: true
    date_added?: true
    pinned?: true
    date_pinned?: true
    _all?: true
  }

  export type Entities_sheetsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which entities_sheets to aggregate.
     */
    where?: entities_sheetsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of entities_sheets to fetch.
     */
    orderBy?: entities_sheetsOrderByWithRelationInput | entities_sheetsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: entities_sheetsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` entities_sheets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` entities_sheets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned entities_sheets
    **/
    _count?: true | Entities_sheetsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Entities_sheetsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Entities_sheetsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Entities_sheetsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Entities_sheetsMaxAggregateInputType
  }

  export type GetEntities_sheetsAggregateType<T extends Entities_sheetsAggregateArgs> = {
        [P in keyof T & keyof AggregateEntities_sheets]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEntities_sheets[P]>
      : GetScalarType<T[P], AggregateEntities_sheets[P]>
  }




  export type entities_sheetsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: entities_sheetsWhereInput
    orderBy?: entities_sheetsOrderByWithAggregationInput | entities_sheetsOrderByWithAggregationInput[]
    by: Entities_sheetsScalarFieldEnum[] | Entities_sheetsScalarFieldEnum
    having?: entities_sheetsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Entities_sheetsCountAggregateInputType | true
    _avg?: Entities_sheetsAvgAggregateInputType
    _sum?: Entities_sheetsSumAggregateInputType
    _min?: Entities_sheetsMinAggregateInputType
    _max?: Entities_sheetsMaxAggregateInputType
  }

  export type Entities_sheetsGroupByOutputType = {
    entities_sheets_id: number
    entity_id: number
    sheet_id: number
    date_added: Date
    pinned: boolean
    date_pinned: Date | null
    _count: Entities_sheetsCountAggregateOutputType | null
    _avg: Entities_sheetsAvgAggregateOutputType | null
    _sum: Entities_sheetsSumAggregateOutputType | null
    _min: Entities_sheetsMinAggregateOutputType | null
    _max: Entities_sheetsMaxAggregateOutputType | null
  }

  type GetEntities_sheetsGroupByPayload<T extends entities_sheetsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Entities_sheetsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Entities_sheetsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Entities_sheetsGroupByOutputType[P]>
            : GetScalarType<T[P], Entities_sheetsGroupByOutputType[P]>
        }
      >
    >


  export type entities_sheetsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    entities_sheets_id?: boolean
    entity_id?: boolean
    sheet_id?: boolean
    date_added?: boolean
    pinned?: boolean
    date_pinned?: boolean
    entities?: boolean | entitiesDefaultArgs<ExtArgs>
    sheets?: boolean | sheetsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["entities_sheets"]>

  export type entities_sheetsSelectScalar = {
    entities_sheets_id?: boolean
    entity_id?: boolean
    sheet_id?: boolean
    date_added?: boolean
    pinned?: boolean
    date_pinned?: boolean
  }

  export type entities_sheetsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    entities?: boolean | entitiesDefaultArgs<ExtArgs>
    sheets?: boolean | sheetsDefaultArgs<ExtArgs>
  }


  export type $entities_sheetsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "entities_sheets"
    objects: {
      entities: Prisma.$entitiesPayload<ExtArgs>
      sheets: Prisma.$sheetsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      entities_sheets_id: number
      entity_id: number
      sheet_id: number
      date_added: Date
      pinned: boolean
      date_pinned: Date | null
    }, ExtArgs["result"]["entities_sheets"]>
    composites: {}
  }


  type entities_sheetsGetPayload<S extends boolean | null | undefined | entities_sheetsDefaultArgs> = $Result.GetResult<Prisma.$entities_sheetsPayload, S>

  type entities_sheetsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<entities_sheetsFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Entities_sheetsCountAggregateInputType | true
    }

  export interface entities_sheetsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['entities_sheets'], meta: { name: 'entities_sheets' } }
    /**
     * Find zero or one Entities_sheets that matches the filter.
     * @param {entities_sheetsFindUniqueArgs} args - Arguments to find a Entities_sheets
     * @example
     * // Get one Entities_sheets
     * const entities_sheets = await prisma.entities_sheets.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends entities_sheetsFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, entities_sheetsFindUniqueArgs<ExtArgs>>
    ): Prisma__entities_sheetsClient<$Result.GetResult<Prisma.$entities_sheetsPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Entities_sheets that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {entities_sheetsFindUniqueOrThrowArgs} args - Arguments to find a Entities_sheets
     * @example
     * // Get one Entities_sheets
     * const entities_sheets = await prisma.entities_sheets.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends entities_sheetsFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, entities_sheetsFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__entities_sheetsClient<$Result.GetResult<Prisma.$entities_sheetsPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Entities_sheets that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {entities_sheetsFindFirstArgs} args - Arguments to find a Entities_sheets
     * @example
     * // Get one Entities_sheets
     * const entities_sheets = await prisma.entities_sheets.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends entities_sheetsFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, entities_sheetsFindFirstArgs<ExtArgs>>
    ): Prisma__entities_sheetsClient<$Result.GetResult<Prisma.$entities_sheetsPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Entities_sheets that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {entities_sheetsFindFirstOrThrowArgs} args - Arguments to find a Entities_sheets
     * @example
     * // Get one Entities_sheets
     * const entities_sheets = await prisma.entities_sheets.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends entities_sheetsFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, entities_sheetsFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__entities_sheetsClient<$Result.GetResult<Prisma.$entities_sheetsPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Entities_sheets that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {entities_sheetsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Entities_sheets
     * const entities_sheets = await prisma.entities_sheets.findMany()
     * 
     * // Get first 10 Entities_sheets
     * const entities_sheets = await prisma.entities_sheets.findMany({ take: 10 })
     * 
     * // Only select the `entities_sheets_id`
     * const entities_sheetsWithEntities_sheets_idOnly = await prisma.entities_sheets.findMany({ select: { entities_sheets_id: true } })
     * 
    **/
    findMany<T extends entities_sheetsFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, entities_sheetsFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$entities_sheetsPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Entities_sheets.
     * @param {entities_sheetsCreateArgs} args - Arguments to create a Entities_sheets.
     * @example
     * // Create one Entities_sheets
     * const Entities_sheets = await prisma.entities_sheets.create({
     *   data: {
     *     // ... data to create a Entities_sheets
     *   }
     * })
     * 
    **/
    create<T extends entities_sheetsCreateArgs<ExtArgs>>(
      args: SelectSubset<T, entities_sheetsCreateArgs<ExtArgs>>
    ): Prisma__entities_sheetsClient<$Result.GetResult<Prisma.$entities_sheetsPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Entities_sheets.
     *     @param {entities_sheetsCreateManyArgs} args - Arguments to create many Entities_sheets.
     *     @example
     *     // Create many Entities_sheets
     *     const entities_sheets = await prisma.entities_sheets.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends entities_sheetsCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, entities_sheetsCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Entities_sheets.
     * @param {entities_sheetsDeleteArgs} args - Arguments to delete one Entities_sheets.
     * @example
     * // Delete one Entities_sheets
     * const Entities_sheets = await prisma.entities_sheets.delete({
     *   where: {
     *     // ... filter to delete one Entities_sheets
     *   }
     * })
     * 
    **/
    delete<T extends entities_sheetsDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, entities_sheetsDeleteArgs<ExtArgs>>
    ): Prisma__entities_sheetsClient<$Result.GetResult<Prisma.$entities_sheetsPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Entities_sheets.
     * @param {entities_sheetsUpdateArgs} args - Arguments to update one Entities_sheets.
     * @example
     * // Update one Entities_sheets
     * const entities_sheets = await prisma.entities_sheets.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends entities_sheetsUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, entities_sheetsUpdateArgs<ExtArgs>>
    ): Prisma__entities_sheetsClient<$Result.GetResult<Prisma.$entities_sheetsPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Entities_sheets.
     * @param {entities_sheetsDeleteManyArgs} args - Arguments to filter Entities_sheets to delete.
     * @example
     * // Delete a few Entities_sheets
     * const { count } = await prisma.entities_sheets.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends entities_sheetsDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, entities_sheetsDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Entities_sheets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {entities_sheetsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Entities_sheets
     * const entities_sheets = await prisma.entities_sheets.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends entities_sheetsUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, entities_sheetsUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Entities_sheets.
     * @param {entities_sheetsUpsertArgs} args - Arguments to update or create a Entities_sheets.
     * @example
     * // Update or create a Entities_sheets
     * const entities_sheets = await prisma.entities_sheets.upsert({
     *   create: {
     *     // ... data to create a Entities_sheets
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Entities_sheets we want to update
     *   }
     * })
    **/
    upsert<T extends entities_sheetsUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, entities_sheetsUpsertArgs<ExtArgs>>
    ): Prisma__entities_sheetsClient<$Result.GetResult<Prisma.$entities_sheetsPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Entities_sheets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {entities_sheetsCountArgs} args - Arguments to filter Entities_sheets to count.
     * @example
     * // Count the number of Entities_sheets
     * const count = await prisma.entities_sheets.count({
     *   where: {
     *     // ... the filter for the Entities_sheets we want to count
     *   }
     * })
    **/
    count<T extends entities_sheetsCountArgs>(
      args?: Subset<T, entities_sheetsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Entities_sheetsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Entities_sheets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Entities_sheetsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Entities_sheetsAggregateArgs>(args: Subset<T, Entities_sheetsAggregateArgs>): Prisma.PrismaPromise<GetEntities_sheetsAggregateType<T>>

    /**
     * Group by Entities_sheets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {entities_sheetsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends entities_sheetsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: entities_sheetsGroupByArgs['orderBy'] }
        : { orderBy?: entities_sheetsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, entities_sheetsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEntities_sheetsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the entities_sheets model
   */
  readonly fields: entities_sheetsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for entities_sheets.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__entities_sheetsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    entities<T extends entitiesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, entitiesDefaultArgs<ExtArgs>>): Prisma__entitiesClient<$Result.GetResult<Prisma.$entitiesPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    sheets<T extends sheetsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, sheetsDefaultArgs<ExtArgs>>): Prisma__sheetsClient<$Result.GetResult<Prisma.$sheetsPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the entities_sheets model
   */ 
  interface entities_sheetsFieldRefs {
    readonly entities_sheets_id: FieldRef<"entities_sheets", 'Int'>
    readonly entity_id: FieldRef<"entities_sheets", 'Int'>
    readonly sheet_id: FieldRef<"entities_sheets", 'Int'>
    readonly date_added: FieldRef<"entities_sheets", 'DateTime'>
    readonly pinned: FieldRef<"entities_sheets", 'Boolean'>
    readonly date_pinned: FieldRef<"entities_sheets", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * entities_sheets findUnique
   */
  export type entities_sheetsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entities_sheets
     */
    select?: entities_sheetsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: entities_sheetsInclude<ExtArgs> | null
    /**
     * Filter, which entities_sheets to fetch.
     */
    where: entities_sheetsWhereUniqueInput
  }


  /**
   * entities_sheets findUniqueOrThrow
   */
  export type entities_sheetsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entities_sheets
     */
    select?: entities_sheetsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: entities_sheetsInclude<ExtArgs> | null
    /**
     * Filter, which entities_sheets to fetch.
     */
    where: entities_sheetsWhereUniqueInput
  }


  /**
   * entities_sheets findFirst
   */
  export type entities_sheetsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entities_sheets
     */
    select?: entities_sheetsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: entities_sheetsInclude<ExtArgs> | null
    /**
     * Filter, which entities_sheets to fetch.
     */
    where?: entities_sheetsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of entities_sheets to fetch.
     */
    orderBy?: entities_sheetsOrderByWithRelationInput | entities_sheetsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for entities_sheets.
     */
    cursor?: entities_sheetsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` entities_sheets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` entities_sheets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of entities_sheets.
     */
    distinct?: Entities_sheetsScalarFieldEnum | Entities_sheetsScalarFieldEnum[]
  }


  /**
   * entities_sheets findFirstOrThrow
   */
  export type entities_sheetsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entities_sheets
     */
    select?: entities_sheetsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: entities_sheetsInclude<ExtArgs> | null
    /**
     * Filter, which entities_sheets to fetch.
     */
    where?: entities_sheetsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of entities_sheets to fetch.
     */
    orderBy?: entities_sheetsOrderByWithRelationInput | entities_sheetsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for entities_sheets.
     */
    cursor?: entities_sheetsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` entities_sheets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` entities_sheets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of entities_sheets.
     */
    distinct?: Entities_sheetsScalarFieldEnum | Entities_sheetsScalarFieldEnum[]
  }


  /**
   * entities_sheets findMany
   */
  export type entities_sheetsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entities_sheets
     */
    select?: entities_sheetsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: entities_sheetsInclude<ExtArgs> | null
    /**
     * Filter, which entities_sheets to fetch.
     */
    where?: entities_sheetsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of entities_sheets to fetch.
     */
    orderBy?: entities_sheetsOrderByWithRelationInput | entities_sheetsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing entities_sheets.
     */
    cursor?: entities_sheetsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` entities_sheets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` entities_sheets.
     */
    skip?: number
    distinct?: Entities_sheetsScalarFieldEnum | Entities_sheetsScalarFieldEnum[]
  }


  /**
   * entities_sheets create
   */
  export type entities_sheetsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entities_sheets
     */
    select?: entities_sheetsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: entities_sheetsInclude<ExtArgs> | null
    /**
     * The data needed to create a entities_sheets.
     */
    data: XOR<entities_sheetsCreateInput, entities_sheetsUncheckedCreateInput>
  }


  /**
   * entities_sheets createMany
   */
  export type entities_sheetsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many entities_sheets.
     */
    data: entities_sheetsCreateManyInput | entities_sheetsCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * entities_sheets update
   */
  export type entities_sheetsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entities_sheets
     */
    select?: entities_sheetsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: entities_sheetsInclude<ExtArgs> | null
    /**
     * The data needed to update a entities_sheets.
     */
    data: XOR<entities_sheetsUpdateInput, entities_sheetsUncheckedUpdateInput>
    /**
     * Choose, which entities_sheets to update.
     */
    where: entities_sheetsWhereUniqueInput
  }


  /**
   * entities_sheets updateMany
   */
  export type entities_sheetsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update entities_sheets.
     */
    data: XOR<entities_sheetsUpdateManyMutationInput, entities_sheetsUncheckedUpdateManyInput>
    /**
     * Filter which entities_sheets to update
     */
    where?: entities_sheetsWhereInput
  }


  /**
   * entities_sheets upsert
   */
  export type entities_sheetsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entities_sheets
     */
    select?: entities_sheetsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: entities_sheetsInclude<ExtArgs> | null
    /**
     * The filter to search for the entities_sheets to update in case it exists.
     */
    where: entities_sheetsWhereUniqueInput
    /**
     * In case the entities_sheets found by the `where` argument doesn't exist, create a new entities_sheets with this data.
     */
    create: XOR<entities_sheetsCreateInput, entities_sheetsUncheckedCreateInput>
    /**
     * In case the entities_sheets was found with the provided `where` argument, update it with this data.
     */
    update: XOR<entities_sheetsUpdateInput, entities_sheetsUncheckedUpdateInput>
  }


  /**
   * entities_sheets delete
   */
  export type entities_sheetsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entities_sheets
     */
    select?: entities_sheetsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: entities_sheetsInclude<ExtArgs> | null
    /**
     * Filter which entities_sheets to delete.
     */
    where: entities_sheetsWhereUniqueInput
  }


  /**
   * entities_sheets deleteMany
   */
  export type entities_sheetsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which entities_sheets to delete
     */
    where?: entities_sheetsWhereInput
  }


  /**
   * entities_sheets without action
   */
  export type entities_sheetsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entities_sheets
     */
    select?: entities_sheetsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: entities_sheetsInclude<ExtArgs> | null
  }



  /**
   * Model entities_videos
   */

  export type AggregateEntities_videos = {
    _count: Entities_videosCountAggregateOutputType | null
    _avg: Entities_videosAvgAggregateOutputType | null
    _sum: Entities_videosSumAggregateOutputType | null
    _min: Entities_videosMinAggregateOutputType | null
    _max: Entities_videosMaxAggregateOutputType | null
  }

  export type Entities_videosAvgAggregateOutputType = {
    entities_videos_id: number | null
    entity_id: number | null
    video_id: number | null
  }

  export type Entities_videosSumAggregateOutputType = {
    entities_videos_id: number | null
    entity_id: number | null
    video_id: number | null
  }

  export type Entities_videosMinAggregateOutputType = {
    entities_videos_id: number | null
    entity_id: number | null
    video_id: number | null
    date_added: Date | null
    pinned: boolean | null
    date_pinned: Date | null
  }

  export type Entities_videosMaxAggregateOutputType = {
    entities_videos_id: number | null
    entity_id: number | null
    video_id: number | null
    date_added: Date | null
    pinned: boolean | null
    date_pinned: Date | null
  }

  export type Entities_videosCountAggregateOutputType = {
    entities_videos_id: number
    entity_id: number
    video_id: number
    date_added: number
    pinned: number
    date_pinned: number
    _all: number
  }


  export type Entities_videosAvgAggregateInputType = {
    entities_videos_id?: true
    entity_id?: true
    video_id?: true
  }

  export type Entities_videosSumAggregateInputType = {
    entities_videos_id?: true
    entity_id?: true
    video_id?: true
  }

  export type Entities_videosMinAggregateInputType = {
    entities_videos_id?: true
    entity_id?: true
    video_id?: true
    date_added?: true
    pinned?: true
    date_pinned?: true
  }

  export type Entities_videosMaxAggregateInputType = {
    entities_videos_id?: true
    entity_id?: true
    video_id?: true
    date_added?: true
    pinned?: true
    date_pinned?: true
  }

  export type Entities_videosCountAggregateInputType = {
    entities_videos_id?: true
    entity_id?: true
    video_id?: true
    date_added?: true
    pinned?: true
    date_pinned?: true
    _all?: true
  }

  export type Entities_videosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which entities_videos to aggregate.
     */
    where?: entities_videosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of entities_videos to fetch.
     */
    orderBy?: entities_videosOrderByWithRelationInput | entities_videosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: entities_videosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` entities_videos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` entities_videos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned entities_videos
    **/
    _count?: true | Entities_videosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Entities_videosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Entities_videosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Entities_videosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Entities_videosMaxAggregateInputType
  }

  export type GetEntities_videosAggregateType<T extends Entities_videosAggregateArgs> = {
        [P in keyof T & keyof AggregateEntities_videos]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEntities_videos[P]>
      : GetScalarType<T[P], AggregateEntities_videos[P]>
  }




  export type entities_videosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: entities_videosWhereInput
    orderBy?: entities_videosOrderByWithAggregationInput | entities_videosOrderByWithAggregationInput[]
    by: Entities_videosScalarFieldEnum[] | Entities_videosScalarFieldEnum
    having?: entities_videosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Entities_videosCountAggregateInputType | true
    _avg?: Entities_videosAvgAggregateInputType
    _sum?: Entities_videosSumAggregateInputType
    _min?: Entities_videosMinAggregateInputType
    _max?: Entities_videosMaxAggregateInputType
  }

  export type Entities_videosGroupByOutputType = {
    entities_videos_id: number
    entity_id: number
    video_id: number
    date_added: Date
    pinned: boolean
    date_pinned: Date | null
    _count: Entities_videosCountAggregateOutputType | null
    _avg: Entities_videosAvgAggregateOutputType | null
    _sum: Entities_videosSumAggregateOutputType | null
    _min: Entities_videosMinAggregateOutputType | null
    _max: Entities_videosMaxAggregateOutputType | null
  }

  type GetEntities_videosGroupByPayload<T extends entities_videosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Entities_videosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Entities_videosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Entities_videosGroupByOutputType[P]>
            : GetScalarType<T[P], Entities_videosGroupByOutputType[P]>
        }
      >
    >


  export type entities_videosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    entities_videos_id?: boolean
    entity_id?: boolean
    video_id?: boolean
    date_added?: boolean
    pinned?: boolean
    date_pinned?: boolean
    entities?: boolean | entitiesDefaultArgs<ExtArgs>
    videos?: boolean | videosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["entities_videos"]>

  export type entities_videosSelectScalar = {
    entities_videos_id?: boolean
    entity_id?: boolean
    video_id?: boolean
    date_added?: boolean
    pinned?: boolean
    date_pinned?: boolean
  }

  export type entities_videosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    entities?: boolean | entitiesDefaultArgs<ExtArgs>
    videos?: boolean | videosDefaultArgs<ExtArgs>
  }


  export type $entities_videosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "entities_videos"
    objects: {
      entities: Prisma.$entitiesPayload<ExtArgs>
      videos: Prisma.$videosPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      entities_videos_id: number
      entity_id: number
      video_id: number
      date_added: Date
      pinned: boolean
      date_pinned: Date | null
    }, ExtArgs["result"]["entities_videos"]>
    composites: {}
  }


  type entities_videosGetPayload<S extends boolean | null | undefined | entities_videosDefaultArgs> = $Result.GetResult<Prisma.$entities_videosPayload, S>

  type entities_videosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<entities_videosFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Entities_videosCountAggregateInputType | true
    }

  export interface entities_videosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['entities_videos'], meta: { name: 'entities_videos' } }
    /**
     * Find zero or one Entities_videos that matches the filter.
     * @param {entities_videosFindUniqueArgs} args - Arguments to find a Entities_videos
     * @example
     * // Get one Entities_videos
     * const entities_videos = await prisma.entities_videos.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends entities_videosFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, entities_videosFindUniqueArgs<ExtArgs>>
    ): Prisma__entities_videosClient<$Result.GetResult<Prisma.$entities_videosPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Entities_videos that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {entities_videosFindUniqueOrThrowArgs} args - Arguments to find a Entities_videos
     * @example
     * // Get one Entities_videos
     * const entities_videos = await prisma.entities_videos.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends entities_videosFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, entities_videosFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__entities_videosClient<$Result.GetResult<Prisma.$entities_videosPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Entities_videos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {entities_videosFindFirstArgs} args - Arguments to find a Entities_videos
     * @example
     * // Get one Entities_videos
     * const entities_videos = await prisma.entities_videos.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends entities_videosFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, entities_videosFindFirstArgs<ExtArgs>>
    ): Prisma__entities_videosClient<$Result.GetResult<Prisma.$entities_videosPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Entities_videos that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {entities_videosFindFirstOrThrowArgs} args - Arguments to find a Entities_videos
     * @example
     * // Get one Entities_videos
     * const entities_videos = await prisma.entities_videos.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends entities_videosFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, entities_videosFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__entities_videosClient<$Result.GetResult<Prisma.$entities_videosPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Entities_videos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {entities_videosFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Entities_videos
     * const entities_videos = await prisma.entities_videos.findMany()
     * 
     * // Get first 10 Entities_videos
     * const entities_videos = await prisma.entities_videos.findMany({ take: 10 })
     * 
     * // Only select the `entities_videos_id`
     * const entities_videosWithEntities_videos_idOnly = await prisma.entities_videos.findMany({ select: { entities_videos_id: true } })
     * 
    **/
    findMany<T extends entities_videosFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, entities_videosFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$entities_videosPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Entities_videos.
     * @param {entities_videosCreateArgs} args - Arguments to create a Entities_videos.
     * @example
     * // Create one Entities_videos
     * const Entities_videos = await prisma.entities_videos.create({
     *   data: {
     *     // ... data to create a Entities_videos
     *   }
     * })
     * 
    **/
    create<T extends entities_videosCreateArgs<ExtArgs>>(
      args: SelectSubset<T, entities_videosCreateArgs<ExtArgs>>
    ): Prisma__entities_videosClient<$Result.GetResult<Prisma.$entities_videosPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Entities_videos.
     *     @param {entities_videosCreateManyArgs} args - Arguments to create many Entities_videos.
     *     @example
     *     // Create many Entities_videos
     *     const entities_videos = await prisma.entities_videos.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends entities_videosCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, entities_videosCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Entities_videos.
     * @param {entities_videosDeleteArgs} args - Arguments to delete one Entities_videos.
     * @example
     * // Delete one Entities_videos
     * const Entities_videos = await prisma.entities_videos.delete({
     *   where: {
     *     // ... filter to delete one Entities_videos
     *   }
     * })
     * 
    **/
    delete<T extends entities_videosDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, entities_videosDeleteArgs<ExtArgs>>
    ): Prisma__entities_videosClient<$Result.GetResult<Prisma.$entities_videosPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Entities_videos.
     * @param {entities_videosUpdateArgs} args - Arguments to update one Entities_videos.
     * @example
     * // Update one Entities_videos
     * const entities_videos = await prisma.entities_videos.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends entities_videosUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, entities_videosUpdateArgs<ExtArgs>>
    ): Prisma__entities_videosClient<$Result.GetResult<Prisma.$entities_videosPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Entities_videos.
     * @param {entities_videosDeleteManyArgs} args - Arguments to filter Entities_videos to delete.
     * @example
     * // Delete a few Entities_videos
     * const { count } = await prisma.entities_videos.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends entities_videosDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, entities_videosDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Entities_videos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {entities_videosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Entities_videos
     * const entities_videos = await prisma.entities_videos.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends entities_videosUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, entities_videosUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Entities_videos.
     * @param {entities_videosUpsertArgs} args - Arguments to update or create a Entities_videos.
     * @example
     * // Update or create a Entities_videos
     * const entities_videos = await prisma.entities_videos.upsert({
     *   create: {
     *     // ... data to create a Entities_videos
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Entities_videos we want to update
     *   }
     * })
    **/
    upsert<T extends entities_videosUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, entities_videosUpsertArgs<ExtArgs>>
    ): Prisma__entities_videosClient<$Result.GetResult<Prisma.$entities_videosPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Entities_videos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {entities_videosCountArgs} args - Arguments to filter Entities_videos to count.
     * @example
     * // Count the number of Entities_videos
     * const count = await prisma.entities_videos.count({
     *   where: {
     *     // ... the filter for the Entities_videos we want to count
     *   }
     * })
    **/
    count<T extends entities_videosCountArgs>(
      args?: Subset<T, entities_videosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Entities_videosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Entities_videos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Entities_videosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Entities_videosAggregateArgs>(args: Subset<T, Entities_videosAggregateArgs>): Prisma.PrismaPromise<GetEntities_videosAggregateType<T>>

    /**
     * Group by Entities_videos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {entities_videosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends entities_videosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: entities_videosGroupByArgs['orderBy'] }
        : { orderBy?: entities_videosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, entities_videosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEntities_videosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the entities_videos model
   */
  readonly fields: entities_videosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for entities_videos.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__entities_videosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    entities<T extends entitiesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, entitiesDefaultArgs<ExtArgs>>): Prisma__entitiesClient<$Result.GetResult<Prisma.$entitiesPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    videos<T extends videosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, videosDefaultArgs<ExtArgs>>): Prisma__videosClient<$Result.GetResult<Prisma.$videosPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the entities_videos model
   */ 
  interface entities_videosFieldRefs {
    readonly entities_videos_id: FieldRef<"entities_videos", 'Int'>
    readonly entity_id: FieldRef<"entities_videos", 'Int'>
    readonly video_id: FieldRef<"entities_videos", 'Int'>
    readonly date_added: FieldRef<"entities_videos", 'DateTime'>
    readonly pinned: FieldRef<"entities_videos", 'Boolean'>
    readonly date_pinned: FieldRef<"entities_videos", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * entities_videos findUnique
   */
  export type entities_videosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entities_videos
     */
    select?: entities_videosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: entities_videosInclude<ExtArgs> | null
    /**
     * Filter, which entities_videos to fetch.
     */
    where: entities_videosWhereUniqueInput
  }


  /**
   * entities_videos findUniqueOrThrow
   */
  export type entities_videosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entities_videos
     */
    select?: entities_videosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: entities_videosInclude<ExtArgs> | null
    /**
     * Filter, which entities_videos to fetch.
     */
    where: entities_videosWhereUniqueInput
  }


  /**
   * entities_videos findFirst
   */
  export type entities_videosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entities_videos
     */
    select?: entities_videosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: entities_videosInclude<ExtArgs> | null
    /**
     * Filter, which entities_videos to fetch.
     */
    where?: entities_videosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of entities_videos to fetch.
     */
    orderBy?: entities_videosOrderByWithRelationInput | entities_videosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for entities_videos.
     */
    cursor?: entities_videosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` entities_videos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` entities_videos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of entities_videos.
     */
    distinct?: Entities_videosScalarFieldEnum | Entities_videosScalarFieldEnum[]
  }


  /**
   * entities_videos findFirstOrThrow
   */
  export type entities_videosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entities_videos
     */
    select?: entities_videosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: entities_videosInclude<ExtArgs> | null
    /**
     * Filter, which entities_videos to fetch.
     */
    where?: entities_videosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of entities_videos to fetch.
     */
    orderBy?: entities_videosOrderByWithRelationInput | entities_videosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for entities_videos.
     */
    cursor?: entities_videosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` entities_videos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` entities_videos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of entities_videos.
     */
    distinct?: Entities_videosScalarFieldEnum | Entities_videosScalarFieldEnum[]
  }


  /**
   * entities_videos findMany
   */
  export type entities_videosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entities_videos
     */
    select?: entities_videosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: entities_videosInclude<ExtArgs> | null
    /**
     * Filter, which entities_videos to fetch.
     */
    where?: entities_videosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of entities_videos to fetch.
     */
    orderBy?: entities_videosOrderByWithRelationInput | entities_videosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing entities_videos.
     */
    cursor?: entities_videosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` entities_videos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` entities_videos.
     */
    skip?: number
    distinct?: Entities_videosScalarFieldEnum | Entities_videosScalarFieldEnum[]
  }


  /**
   * entities_videos create
   */
  export type entities_videosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entities_videos
     */
    select?: entities_videosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: entities_videosInclude<ExtArgs> | null
    /**
     * The data needed to create a entities_videos.
     */
    data: XOR<entities_videosCreateInput, entities_videosUncheckedCreateInput>
  }


  /**
   * entities_videos createMany
   */
  export type entities_videosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many entities_videos.
     */
    data: entities_videosCreateManyInput | entities_videosCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * entities_videos update
   */
  export type entities_videosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entities_videos
     */
    select?: entities_videosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: entities_videosInclude<ExtArgs> | null
    /**
     * The data needed to update a entities_videos.
     */
    data: XOR<entities_videosUpdateInput, entities_videosUncheckedUpdateInput>
    /**
     * Choose, which entities_videos to update.
     */
    where: entities_videosWhereUniqueInput
  }


  /**
   * entities_videos updateMany
   */
  export type entities_videosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update entities_videos.
     */
    data: XOR<entities_videosUpdateManyMutationInput, entities_videosUncheckedUpdateManyInput>
    /**
     * Filter which entities_videos to update
     */
    where?: entities_videosWhereInput
  }


  /**
   * entities_videos upsert
   */
  export type entities_videosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entities_videos
     */
    select?: entities_videosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: entities_videosInclude<ExtArgs> | null
    /**
     * The filter to search for the entities_videos to update in case it exists.
     */
    where: entities_videosWhereUniqueInput
    /**
     * In case the entities_videos found by the `where` argument doesn't exist, create a new entities_videos with this data.
     */
    create: XOR<entities_videosCreateInput, entities_videosUncheckedCreateInput>
    /**
     * In case the entities_videos was found with the provided `where` argument, update it with this data.
     */
    update: XOR<entities_videosUpdateInput, entities_videosUncheckedUpdateInput>
  }


  /**
   * entities_videos delete
   */
  export type entities_videosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entities_videos
     */
    select?: entities_videosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: entities_videosInclude<ExtArgs> | null
    /**
     * Filter which entities_videos to delete.
     */
    where: entities_videosWhereUniqueInput
  }


  /**
   * entities_videos deleteMany
   */
  export type entities_videosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which entities_videos to delete
     */
    where?: entities_videosWhereInput
  }


  /**
   * entities_videos without action
   */
  export type entities_videosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entities_videos
     */
    select?: entities_videosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: entities_videosInclude<ExtArgs> | null
  }



  /**
   * Model groups
   */

  export type AggregateGroups = {
    _count: GroupsCountAggregateOutputType | null
    _avg: GroupsAvgAggregateOutputType | null
    _sum: GroupsSumAggregateOutputType | null
    _min: GroupsMinAggregateOutputType | null
    _max: GroupsMaxAggregateOutputType | null
  }

  export type GroupsAvgAggregateOutputType = {
    group_id: number | null
  }

  export type GroupsSumAggregateOutputType = {
    group_id: number | null
  }

  export type GroupsMinAggregateOutputType = {
    group_id: number | null
    group_handle: string | null
    group_name: string | null
    group_currentIssue: string | null
    group_stances: string | null
    group_description: string | null
  }

  export type GroupsMaxAggregateOutputType = {
    group_id: number | null
    group_handle: string | null
    group_name: string | null
    group_currentIssue: string | null
    group_stances: string | null
    group_description: string | null
  }

  export type GroupsCountAggregateOutputType = {
    group_id: number
    group_handle: number
    group_name: number
    group_currentIssue: number
    group_stances: number
    group_description: number
    _all: number
  }


  export type GroupsAvgAggregateInputType = {
    group_id?: true
  }

  export type GroupsSumAggregateInputType = {
    group_id?: true
  }

  export type GroupsMinAggregateInputType = {
    group_id?: true
    group_handle?: true
    group_name?: true
    group_currentIssue?: true
    group_stances?: true
    group_description?: true
  }

  export type GroupsMaxAggregateInputType = {
    group_id?: true
    group_handle?: true
    group_name?: true
    group_currentIssue?: true
    group_stances?: true
    group_description?: true
  }

  export type GroupsCountAggregateInputType = {
    group_id?: true
    group_handle?: true
    group_name?: true
    group_currentIssue?: true
    group_stances?: true
    group_description?: true
    _all?: true
  }

  export type GroupsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which groups to aggregate.
     */
    where?: groupsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of groups to fetch.
     */
    orderBy?: groupsOrderByWithRelationInput | groupsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: groupsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` groups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` groups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned groups
    **/
    _count?: true | GroupsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: GroupsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: GroupsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: GroupsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: GroupsMaxAggregateInputType
  }

  export type GetGroupsAggregateType<T extends GroupsAggregateArgs> = {
        [P in keyof T & keyof AggregateGroups]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateGroups[P]>
      : GetScalarType<T[P], AggregateGroups[P]>
  }




  export type groupsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: groupsWhereInput
    orderBy?: groupsOrderByWithAggregationInput | groupsOrderByWithAggregationInput[]
    by: GroupsScalarFieldEnum[] | GroupsScalarFieldEnum
    having?: groupsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: GroupsCountAggregateInputType | true
    _avg?: GroupsAvgAggregateInputType
    _sum?: GroupsSumAggregateInputType
    _min?: GroupsMinAggregateInputType
    _max?: GroupsMaxAggregateInputType
  }

  export type GroupsGroupByOutputType = {
    group_id: number
    group_handle: string
    group_name: string
    group_currentIssue: string | null
    group_stances: string | null
    group_description: string | null
    _count: GroupsCountAggregateOutputType | null
    _avg: GroupsAvgAggregateOutputType | null
    _sum: GroupsSumAggregateOutputType | null
    _min: GroupsMinAggregateOutputType | null
    _max: GroupsMaxAggregateOutputType | null
  }

  type GetGroupsGroupByPayload<T extends groupsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<GroupsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof GroupsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], GroupsGroupByOutputType[P]>
            : GetScalarType<T[P], GroupsGroupByOutputType[P]>
        }
      >
    >


  export type groupsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    group_id?: boolean
    group_handle?: boolean
    group_name?: boolean
    group_currentIssue?: boolean
    group_stances?: boolean
    group_description?: boolean
    collections?: boolean | groups$collectionsArgs<ExtArgs>
    entities?: boolean | groups$entitiesArgs<ExtArgs>
    entities_references?: boolean | groups$entities_referencesArgs<ExtArgs>
    groups_members?: boolean | groups$groups_membersArgs<ExtArgs>
    _count?: boolean | GroupsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["groups"]>

  export type groupsSelectScalar = {
    group_id?: boolean
    group_handle?: boolean
    group_name?: boolean
    group_currentIssue?: boolean
    group_stances?: boolean
    group_description?: boolean
  }

  export type groupsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    collections?: boolean | groups$collectionsArgs<ExtArgs>
    entities?: boolean | groups$entitiesArgs<ExtArgs>
    entities_references?: boolean | groups$entities_referencesArgs<ExtArgs>
    groups_members?: boolean | groups$groups_membersArgs<ExtArgs>
    _count?: boolean | GroupsCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $groupsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "groups"
    objects: {
      collections: Prisma.$collectionsPayload<ExtArgs>[]
      entities: Prisma.$entitiesPayload<ExtArgs>[]
      entities_references: Prisma.$entities_referencesPayload<ExtArgs>[]
      groups_members: Prisma.$groups_membersPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      group_id: number
      group_handle: string
      group_name: string
      group_currentIssue: string | null
      group_stances: string | null
      group_description: string | null
    }, ExtArgs["result"]["groups"]>
    composites: {}
  }


  type groupsGetPayload<S extends boolean | null | undefined | groupsDefaultArgs> = $Result.GetResult<Prisma.$groupsPayload, S>

  type groupsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<groupsFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: GroupsCountAggregateInputType | true
    }

  export interface groupsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['groups'], meta: { name: 'groups' } }
    /**
     * Find zero or one Groups that matches the filter.
     * @param {groupsFindUniqueArgs} args - Arguments to find a Groups
     * @example
     * // Get one Groups
     * const groups = await prisma.groups.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends groupsFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, groupsFindUniqueArgs<ExtArgs>>
    ): Prisma__groupsClient<$Result.GetResult<Prisma.$groupsPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Groups that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {groupsFindUniqueOrThrowArgs} args - Arguments to find a Groups
     * @example
     * // Get one Groups
     * const groups = await prisma.groups.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends groupsFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, groupsFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__groupsClient<$Result.GetResult<Prisma.$groupsPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Groups that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {groupsFindFirstArgs} args - Arguments to find a Groups
     * @example
     * // Get one Groups
     * const groups = await prisma.groups.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends groupsFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, groupsFindFirstArgs<ExtArgs>>
    ): Prisma__groupsClient<$Result.GetResult<Prisma.$groupsPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Groups that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {groupsFindFirstOrThrowArgs} args - Arguments to find a Groups
     * @example
     * // Get one Groups
     * const groups = await prisma.groups.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends groupsFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, groupsFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__groupsClient<$Result.GetResult<Prisma.$groupsPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Groups that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {groupsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Groups
     * const groups = await prisma.groups.findMany()
     * 
     * // Get first 10 Groups
     * const groups = await prisma.groups.findMany({ take: 10 })
     * 
     * // Only select the `group_id`
     * const groupsWithGroup_idOnly = await prisma.groups.findMany({ select: { group_id: true } })
     * 
    **/
    findMany<T extends groupsFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, groupsFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$groupsPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Groups.
     * @param {groupsCreateArgs} args - Arguments to create a Groups.
     * @example
     * // Create one Groups
     * const Groups = await prisma.groups.create({
     *   data: {
     *     // ... data to create a Groups
     *   }
     * })
     * 
    **/
    create<T extends groupsCreateArgs<ExtArgs>>(
      args: SelectSubset<T, groupsCreateArgs<ExtArgs>>
    ): Prisma__groupsClient<$Result.GetResult<Prisma.$groupsPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Groups.
     *     @param {groupsCreateManyArgs} args - Arguments to create many Groups.
     *     @example
     *     // Create many Groups
     *     const groups = await prisma.groups.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends groupsCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, groupsCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Groups.
     * @param {groupsDeleteArgs} args - Arguments to delete one Groups.
     * @example
     * // Delete one Groups
     * const Groups = await prisma.groups.delete({
     *   where: {
     *     // ... filter to delete one Groups
     *   }
     * })
     * 
    **/
    delete<T extends groupsDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, groupsDeleteArgs<ExtArgs>>
    ): Prisma__groupsClient<$Result.GetResult<Prisma.$groupsPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Groups.
     * @param {groupsUpdateArgs} args - Arguments to update one Groups.
     * @example
     * // Update one Groups
     * const groups = await prisma.groups.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends groupsUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, groupsUpdateArgs<ExtArgs>>
    ): Prisma__groupsClient<$Result.GetResult<Prisma.$groupsPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Groups.
     * @param {groupsDeleteManyArgs} args - Arguments to filter Groups to delete.
     * @example
     * // Delete a few Groups
     * const { count } = await prisma.groups.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends groupsDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, groupsDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Groups.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {groupsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Groups
     * const groups = await prisma.groups.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends groupsUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, groupsUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Groups.
     * @param {groupsUpsertArgs} args - Arguments to update or create a Groups.
     * @example
     * // Update or create a Groups
     * const groups = await prisma.groups.upsert({
     *   create: {
     *     // ... data to create a Groups
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Groups we want to update
     *   }
     * })
    **/
    upsert<T extends groupsUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, groupsUpsertArgs<ExtArgs>>
    ): Prisma__groupsClient<$Result.GetResult<Prisma.$groupsPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Groups.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {groupsCountArgs} args - Arguments to filter Groups to count.
     * @example
     * // Count the number of Groups
     * const count = await prisma.groups.count({
     *   where: {
     *     // ... the filter for the Groups we want to count
     *   }
     * })
    **/
    count<T extends groupsCountArgs>(
      args?: Subset<T, groupsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], GroupsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Groups.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GroupsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends GroupsAggregateArgs>(args: Subset<T, GroupsAggregateArgs>): Prisma.PrismaPromise<GetGroupsAggregateType<T>>

    /**
     * Group by Groups.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {groupsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends groupsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: groupsGroupByArgs['orderBy'] }
        : { orderBy?: groupsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, groupsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetGroupsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the groups model
   */
  readonly fields: groupsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for groups.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__groupsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    collections<T extends groups$collectionsArgs<ExtArgs> = {}>(args?: Subset<T, groups$collectionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$collectionsPayload<ExtArgs>, T, 'findMany'> | Null>;

    entities<T extends groups$entitiesArgs<ExtArgs> = {}>(args?: Subset<T, groups$entitiesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$entitiesPayload<ExtArgs>, T, 'findMany'> | Null>;

    entities_references<T extends groups$entities_referencesArgs<ExtArgs> = {}>(args?: Subset<T, groups$entities_referencesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$entities_referencesPayload<ExtArgs>, T, 'findMany'> | Null>;

    groups_members<T extends groups$groups_membersArgs<ExtArgs> = {}>(args?: Subset<T, groups$groups_membersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$groups_membersPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the groups model
   */ 
  interface groupsFieldRefs {
    readonly group_id: FieldRef<"groups", 'Int'>
    readonly group_handle: FieldRef<"groups", 'String'>
    readonly group_name: FieldRef<"groups", 'String'>
    readonly group_currentIssue: FieldRef<"groups", 'String'>
    readonly group_stances: FieldRef<"groups", 'String'>
    readonly group_description: FieldRef<"groups", 'String'>
  }
    

  // Custom InputTypes

  /**
   * groups findUnique
   */
  export type groupsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the groups
     */
    select?: groupsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: groupsInclude<ExtArgs> | null
    /**
     * Filter, which groups to fetch.
     */
    where: groupsWhereUniqueInput
  }


  /**
   * groups findUniqueOrThrow
   */
  export type groupsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the groups
     */
    select?: groupsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: groupsInclude<ExtArgs> | null
    /**
     * Filter, which groups to fetch.
     */
    where: groupsWhereUniqueInput
  }


  /**
   * groups findFirst
   */
  export type groupsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the groups
     */
    select?: groupsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: groupsInclude<ExtArgs> | null
    /**
     * Filter, which groups to fetch.
     */
    where?: groupsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of groups to fetch.
     */
    orderBy?: groupsOrderByWithRelationInput | groupsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for groups.
     */
    cursor?: groupsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` groups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` groups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of groups.
     */
    distinct?: GroupsScalarFieldEnum | GroupsScalarFieldEnum[]
  }


  /**
   * groups findFirstOrThrow
   */
  export type groupsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the groups
     */
    select?: groupsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: groupsInclude<ExtArgs> | null
    /**
     * Filter, which groups to fetch.
     */
    where?: groupsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of groups to fetch.
     */
    orderBy?: groupsOrderByWithRelationInput | groupsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for groups.
     */
    cursor?: groupsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` groups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` groups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of groups.
     */
    distinct?: GroupsScalarFieldEnum | GroupsScalarFieldEnum[]
  }


  /**
   * groups findMany
   */
  export type groupsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the groups
     */
    select?: groupsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: groupsInclude<ExtArgs> | null
    /**
     * Filter, which groups to fetch.
     */
    where?: groupsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of groups to fetch.
     */
    orderBy?: groupsOrderByWithRelationInput | groupsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing groups.
     */
    cursor?: groupsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` groups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` groups.
     */
    skip?: number
    distinct?: GroupsScalarFieldEnum | GroupsScalarFieldEnum[]
  }


  /**
   * groups create
   */
  export type groupsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the groups
     */
    select?: groupsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: groupsInclude<ExtArgs> | null
    /**
     * The data needed to create a groups.
     */
    data: XOR<groupsCreateInput, groupsUncheckedCreateInput>
  }


  /**
   * groups createMany
   */
  export type groupsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many groups.
     */
    data: groupsCreateManyInput | groupsCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * groups update
   */
  export type groupsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the groups
     */
    select?: groupsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: groupsInclude<ExtArgs> | null
    /**
     * The data needed to update a groups.
     */
    data: XOR<groupsUpdateInput, groupsUncheckedUpdateInput>
    /**
     * Choose, which groups to update.
     */
    where: groupsWhereUniqueInput
  }


  /**
   * groups updateMany
   */
  export type groupsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update groups.
     */
    data: XOR<groupsUpdateManyMutationInput, groupsUncheckedUpdateManyInput>
    /**
     * Filter which groups to update
     */
    where?: groupsWhereInput
  }


  /**
   * groups upsert
   */
  export type groupsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the groups
     */
    select?: groupsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: groupsInclude<ExtArgs> | null
    /**
     * The filter to search for the groups to update in case it exists.
     */
    where: groupsWhereUniqueInput
    /**
     * In case the groups found by the `where` argument doesn't exist, create a new groups with this data.
     */
    create: XOR<groupsCreateInput, groupsUncheckedCreateInput>
    /**
     * In case the groups was found with the provided `where` argument, update it with this data.
     */
    update: XOR<groupsUpdateInput, groupsUncheckedUpdateInput>
  }


  /**
   * groups delete
   */
  export type groupsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the groups
     */
    select?: groupsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: groupsInclude<ExtArgs> | null
    /**
     * Filter which groups to delete.
     */
    where: groupsWhereUniqueInput
  }


  /**
   * groups deleteMany
   */
  export type groupsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which groups to delete
     */
    where?: groupsWhereInput
  }


  /**
   * groups.collections
   */
  export type groups$collectionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collections
     */
    select?: collectionsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: collectionsInclude<ExtArgs> | null
    where?: collectionsWhereInput
    orderBy?: collectionsOrderByWithRelationInput | collectionsOrderByWithRelationInput[]
    cursor?: collectionsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CollectionsScalarFieldEnum | CollectionsScalarFieldEnum[]
  }


  /**
   * groups.entities
   */
  export type groups$entitiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entities
     */
    select?: entitiesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: entitiesInclude<ExtArgs> | null
    where?: entitiesWhereInput
    orderBy?: entitiesOrderByWithRelationInput | entitiesOrderByWithRelationInput[]
    cursor?: entitiesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EntitiesScalarFieldEnum | EntitiesScalarFieldEnum[]
  }


  /**
   * groups.entities_references
   */
  export type groups$entities_referencesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entities_references
     */
    select?: entities_referencesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: entities_referencesInclude<ExtArgs> | null
    where?: entities_referencesWhereInput
    orderBy?: entities_referencesOrderByWithRelationInput | entities_referencesOrderByWithRelationInput[]
    cursor?: entities_referencesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Entities_referencesScalarFieldEnum | Entities_referencesScalarFieldEnum[]
  }


  /**
   * groups.groups_members
   */
  export type groups$groups_membersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the groups_members
     */
    select?: groups_membersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: groups_membersInclude<ExtArgs> | null
    where?: groups_membersWhereInput
    orderBy?: groups_membersOrderByWithRelationInput | groups_membersOrderByWithRelationInput[]
    cursor?: groups_membersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Groups_membersScalarFieldEnum | Groups_membersScalarFieldEnum[]
  }


  /**
   * groups without action
   */
  export type groupsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the groups
     */
    select?: groupsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: groupsInclude<ExtArgs> | null
  }



  /**
   * Model groups_members
   */

  export type AggregateGroups_members = {
    _count: Groups_membersCountAggregateOutputType | null
    _avg: Groups_membersAvgAggregateOutputType | null
    _sum: Groups_membersSumAggregateOutputType | null
    _min: Groups_membersMinAggregateOutputType | null
    _max: Groups_membersMaxAggregateOutputType | null
  }

  export type Groups_membersAvgAggregateOutputType = {
    group_id: number | null
    individual_id: number | null
  }

  export type Groups_membersSumAggregateOutputType = {
    group_id: number | null
    individual_id: number | null
  }

  export type Groups_membersMinAggregateOutputType = {
    group_id: number | null
    individual_id: number | null
  }

  export type Groups_membersMaxAggregateOutputType = {
    group_id: number | null
    individual_id: number | null
  }

  export type Groups_membersCountAggregateOutputType = {
    group_id: number
    individual_id: number
    _all: number
  }


  export type Groups_membersAvgAggregateInputType = {
    group_id?: true
    individual_id?: true
  }

  export type Groups_membersSumAggregateInputType = {
    group_id?: true
    individual_id?: true
  }

  export type Groups_membersMinAggregateInputType = {
    group_id?: true
    individual_id?: true
  }

  export type Groups_membersMaxAggregateInputType = {
    group_id?: true
    individual_id?: true
  }

  export type Groups_membersCountAggregateInputType = {
    group_id?: true
    individual_id?: true
    _all?: true
  }

  export type Groups_membersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which groups_members to aggregate.
     */
    where?: groups_membersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of groups_members to fetch.
     */
    orderBy?: groups_membersOrderByWithRelationInput | groups_membersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: groups_membersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` groups_members from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` groups_members.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned groups_members
    **/
    _count?: true | Groups_membersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Groups_membersAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Groups_membersSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Groups_membersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Groups_membersMaxAggregateInputType
  }

  export type GetGroups_membersAggregateType<T extends Groups_membersAggregateArgs> = {
        [P in keyof T & keyof AggregateGroups_members]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateGroups_members[P]>
      : GetScalarType<T[P], AggregateGroups_members[P]>
  }




  export type groups_membersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: groups_membersWhereInput
    orderBy?: groups_membersOrderByWithAggregationInput | groups_membersOrderByWithAggregationInput[]
    by: Groups_membersScalarFieldEnum[] | Groups_membersScalarFieldEnum
    having?: groups_membersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Groups_membersCountAggregateInputType | true
    _avg?: Groups_membersAvgAggregateInputType
    _sum?: Groups_membersSumAggregateInputType
    _min?: Groups_membersMinAggregateInputType
    _max?: Groups_membersMaxAggregateInputType
  }

  export type Groups_membersGroupByOutputType = {
    group_id: number
    individual_id: number
    _count: Groups_membersCountAggregateOutputType | null
    _avg: Groups_membersAvgAggregateOutputType | null
    _sum: Groups_membersSumAggregateOutputType | null
    _min: Groups_membersMinAggregateOutputType | null
    _max: Groups_membersMaxAggregateOutputType | null
  }

  type GetGroups_membersGroupByPayload<T extends groups_membersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Groups_membersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Groups_membersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Groups_membersGroupByOutputType[P]>
            : GetScalarType<T[P], Groups_membersGroupByOutputType[P]>
        }
      >
    >


  export type groups_membersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    group_id?: boolean
    individual_id?: boolean
    groups?: boolean | groupsDefaultArgs<ExtArgs>
    individuals?: boolean | individualsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["groups_members"]>

  export type groups_membersSelectScalar = {
    group_id?: boolean
    individual_id?: boolean
  }

  export type groups_membersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    groups?: boolean | groupsDefaultArgs<ExtArgs>
    individuals?: boolean | individualsDefaultArgs<ExtArgs>
  }


  export type $groups_membersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "groups_members"
    objects: {
      groups: Prisma.$groupsPayload<ExtArgs>
      individuals: Prisma.$individualsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      group_id: number
      individual_id: number
    }, ExtArgs["result"]["groups_members"]>
    composites: {}
  }


  type groups_membersGetPayload<S extends boolean | null | undefined | groups_membersDefaultArgs> = $Result.GetResult<Prisma.$groups_membersPayload, S>

  type groups_membersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<groups_membersFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Groups_membersCountAggregateInputType | true
    }

  export interface groups_membersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['groups_members'], meta: { name: 'groups_members' } }
    /**
     * Find zero or one Groups_members that matches the filter.
     * @param {groups_membersFindUniqueArgs} args - Arguments to find a Groups_members
     * @example
     * // Get one Groups_members
     * const groups_members = await prisma.groups_members.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends groups_membersFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, groups_membersFindUniqueArgs<ExtArgs>>
    ): Prisma__groups_membersClient<$Result.GetResult<Prisma.$groups_membersPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Groups_members that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {groups_membersFindUniqueOrThrowArgs} args - Arguments to find a Groups_members
     * @example
     * // Get one Groups_members
     * const groups_members = await prisma.groups_members.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends groups_membersFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, groups_membersFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__groups_membersClient<$Result.GetResult<Prisma.$groups_membersPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Groups_members that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {groups_membersFindFirstArgs} args - Arguments to find a Groups_members
     * @example
     * // Get one Groups_members
     * const groups_members = await prisma.groups_members.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends groups_membersFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, groups_membersFindFirstArgs<ExtArgs>>
    ): Prisma__groups_membersClient<$Result.GetResult<Prisma.$groups_membersPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Groups_members that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {groups_membersFindFirstOrThrowArgs} args - Arguments to find a Groups_members
     * @example
     * // Get one Groups_members
     * const groups_members = await prisma.groups_members.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends groups_membersFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, groups_membersFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__groups_membersClient<$Result.GetResult<Prisma.$groups_membersPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Groups_members that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {groups_membersFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Groups_members
     * const groups_members = await prisma.groups_members.findMany()
     * 
     * // Get first 10 Groups_members
     * const groups_members = await prisma.groups_members.findMany({ take: 10 })
     * 
     * // Only select the `group_id`
     * const groups_membersWithGroup_idOnly = await prisma.groups_members.findMany({ select: { group_id: true } })
     * 
    **/
    findMany<T extends groups_membersFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, groups_membersFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$groups_membersPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Groups_members.
     * @param {groups_membersCreateArgs} args - Arguments to create a Groups_members.
     * @example
     * // Create one Groups_members
     * const Groups_members = await prisma.groups_members.create({
     *   data: {
     *     // ... data to create a Groups_members
     *   }
     * })
     * 
    **/
    create<T extends groups_membersCreateArgs<ExtArgs>>(
      args: SelectSubset<T, groups_membersCreateArgs<ExtArgs>>
    ): Prisma__groups_membersClient<$Result.GetResult<Prisma.$groups_membersPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Groups_members.
     *     @param {groups_membersCreateManyArgs} args - Arguments to create many Groups_members.
     *     @example
     *     // Create many Groups_members
     *     const groups_members = await prisma.groups_members.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends groups_membersCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, groups_membersCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Groups_members.
     * @param {groups_membersDeleteArgs} args - Arguments to delete one Groups_members.
     * @example
     * // Delete one Groups_members
     * const Groups_members = await prisma.groups_members.delete({
     *   where: {
     *     // ... filter to delete one Groups_members
     *   }
     * })
     * 
    **/
    delete<T extends groups_membersDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, groups_membersDeleteArgs<ExtArgs>>
    ): Prisma__groups_membersClient<$Result.GetResult<Prisma.$groups_membersPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Groups_members.
     * @param {groups_membersUpdateArgs} args - Arguments to update one Groups_members.
     * @example
     * // Update one Groups_members
     * const groups_members = await prisma.groups_members.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends groups_membersUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, groups_membersUpdateArgs<ExtArgs>>
    ): Prisma__groups_membersClient<$Result.GetResult<Prisma.$groups_membersPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Groups_members.
     * @param {groups_membersDeleteManyArgs} args - Arguments to filter Groups_members to delete.
     * @example
     * // Delete a few Groups_members
     * const { count } = await prisma.groups_members.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends groups_membersDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, groups_membersDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Groups_members.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {groups_membersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Groups_members
     * const groups_members = await prisma.groups_members.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends groups_membersUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, groups_membersUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Groups_members.
     * @param {groups_membersUpsertArgs} args - Arguments to update or create a Groups_members.
     * @example
     * // Update or create a Groups_members
     * const groups_members = await prisma.groups_members.upsert({
     *   create: {
     *     // ... data to create a Groups_members
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Groups_members we want to update
     *   }
     * })
    **/
    upsert<T extends groups_membersUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, groups_membersUpsertArgs<ExtArgs>>
    ): Prisma__groups_membersClient<$Result.GetResult<Prisma.$groups_membersPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Groups_members.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {groups_membersCountArgs} args - Arguments to filter Groups_members to count.
     * @example
     * // Count the number of Groups_members
     * const count = await prisma.groups_members.count({
     *   where: {
     *     // ... the filter for the Groups_members we want to count
     *   }
     * })
    **/
    count<T extends groups_membersCountArgs>(
      args?: Subset<T, groups_membersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Groups_membersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Groups_members.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Groups_membersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Groups_membersAggregateArgs>(args: Subset<T, Groups_membersAggregateArgs>): Prisma.PrismaPromise<GetGroups_membersAggregateType<T>>

    /**
     * Group by Groups_members.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {groups_membersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends groups_membersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: groups_membersGroupByArgs['orderBy'] }
        : { orderBy?: groups_membersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, groups_membersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetGroups_membersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the groups_members model
   */
  readonly fields: groups_membersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for groups_members.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__groups_membersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    groups<T extends groupsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, groupsDefaultArgs<ExtArgs>>): Prisma__groupsClient<$Result.GetResult<Prisma.$groupsPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    individuals<T extends individualsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, individualsDefaultArgs<ExtArgs>>): Prisma__individualsClient<$Result.GetResult<Prisma.$individualsPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the groups_members model
   */ 
  interface groups_membersFieldRefs {
    readonly group_id: FieldRef<"groups_members", 'Int'>
    readonly individual_id: FieldRef<"groups_members", 'Int'>
  }
    

  // Custom InputTypes

  /**
   * groups_members findUnique
   */
  export type groups_membersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the groups_members
     */
    select?: groups_membersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: groups_membersInclude<ExtArgs> | null
    /**
     * Filter, which groups_members to fetch.
     */
    where: groups_membersWhereUniqueInput
  }


  /**
   * groups_members findUniqueOrThrow
   */
  export type groups_membersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the groups_members
     */
    select?: groups_membersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: groups_membersInclude<ExtArgs> | null
    /**
     * Filter, which groups_members to fetch.
     */
    where: groups_membersWhereUniqueInput
  }


  /**
   * groups_members findFirst
   */
  export type groups_membersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the groups_members
     */
    select?: groups_membersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: groups_membersInclude<ExtArgs> | null
    /**
     * Filter, which groups_members to fetch.
     */
    where?: groups_membersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of groups_members to fetch.
     */
    orderBy?: groups_membersOrderByWithRelationInput | groups_membersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for groups_members.
     */
    cursor?: groups_membersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` groups_members from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` groups_members.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of groups_members.
     */
    distinct?: Groups_membersScalarFieldEnum | Groups_membersScalarFieldEnum[]
  }


  /**
   * groups_members findFirstOrThrow
   */
  export type groups_membersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the groups_members
     */
    select?: groups_membersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: groups_membersInclude<ExtArgs> | null
    /**
     * Filter, which groups_members to fetch.
     */
    where?: groups_membersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of groups_members to fetch.
     */
    orderBy?: groups_membersOrderByWithRelationInput | groups_membersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for groups_members.
     */
    cursor?: groups_membersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` groups_members from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` groups_members.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of groups_members.
     */
    distinct?: Groups_membersScalarFieldEnum | Groups_membersScalarFieldEnum[]
  }


  /**
   * groups_members findMany
   */
  export type groups_membersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the groups_members
     */
    select?: groups_membersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: groups_membersInclude<ExtArgs> | null
    /**
     * Filter, which groups_members to fetch.
     */
    where?: groups_membersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of groups_members to fetch.
     */
    orderBy?: groups_membersOrderByWithRelationInput | groups_membersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing groups_members.
     */
    cursor?: groups_membersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` groups_members from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` groups_members.
     */
    skip?: number
    distinct?: Groups_membersScalarFieldEnum | Groups_membersScalarFieldEnum[]
  }


  /**
   * groups_members create
   */
  export type groups_membersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the groups_members
     */
    select?: groups_membersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: groups_membersInclude<ExtArgs> | null
    /**
     * The data needed to create a groups_members.
     */
    data: XOR<groups_membersCreateInput, groups_membersUncheckedCreateInput>
  }


  /**
   * groups_members createMany
   */
  export type groups_membersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many groups_members.
     */
    data: groups_membersCreateManyInput | groups_membersCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * groups_members update
   */
  export type groups_membersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the groups_members
     */
    select?: groups_membersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: groups_membersInclude<ExtArgs> | null
    /**
     * The data needed to update a groups_members.
     */
    data: XOR<groups_membersUpdateInput, groups_membersUncheckedUpdateInput>
    /**
     * Choose, which groups_members to update.
     */
    where: groups_membersWhereUniqueInput
  }


  /**
   * groups_members updateMany
   */
  export type groups_membersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update groups_members.
     */
    data: XOR<groups_membersUpdateManyMutationInput, groups_membersUncheckedUpdateManyInput>
    /**
     * Filter which groups_members to update
     */
    where?: groups_membersWhereInput
  }


  /**
   * groups_members upsert
   */
  export type groups_membersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the groups_members
     */
    select?: groups_membersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: groups_membersInclude<ExtArgs> | null
    /**
     * The filter to search for the groups_members to update in case it exists.
     */
    where: groups_membersWhereUniqueInput
    /**
     * In case the groups_members found by the `where` argument doesn't exist, create a new groups_members with this data.
     */
    create: XOR<groups_membersCreateInput, groups_membersUncheckedCreateInput>
    /**
     * In case the groups_members was found with the provided `where` argument, update it with this data.
     */
    update: XOR<groups_membersUpdateInput, groups_membersUncheckedUpdateInput>
  }


  /**
   * groups_members delete
   */
  export type groups_membersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the groups_members
     */
    select?: groups_membersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: groups_membersInclude<ExtArgs> | null
    /**
     * Filter which groups_members to delete.
     */
    where: groups_membersWhereUniqueInput
  }


  /**
   * groups_members deleteMany
   */
  export type groups_membersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which groups_members to delete
     */
    where?: groups_membersWhereInput
  }


  /**
   * groups_members without action
   */
  export type groups_membersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the groups_members
     */
    select?: groups_membersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: groups_membersInclude<ExtArgs> | null
  }



  /**
   * Model images
   */

  export type AggregateImages = {
    _count: ImagesCountAggregateOutputType | null
    _avg: ImagesAvgAggregateOutputType | null
    _sum: ImagesSumAggregateOutputType | null
    _min: ImagesMinAggregateOutputType | null
    _max: ImagesMaxAggregateOutputType | null
  }

  export type ImagesAvgAggregateOutputType = {
    image_id: number | null
    image_creator_id: number | null
    image_data_id: number | null
  }

  export type ImagesSumAggregateOutputType = {
    image_id: number | null
    image_creator_id: number | null
    image_data_id: number | null
  }

  export type ImagesMinAggregateOutputType = {
    image_id: number | null
    image_creator_id: number | null
    image_title: string | null
    image_description: string | null
    image_filename: string | null
    image_data_id: number | null
  }

  export type ImagesMaxAggregateOutputType = {
    image_id: number | null
    image_creator_id: number | null
    image_title: string | null
    image_description: string | null
    image_filename: string | null
    image_data_id: number | null
  }

  export type ImagesCountAggregateOutputType = {
    image_id: number
    image_creator_id: number
    image_title: number
    image_description: number
    image_filename: number
    image_data_id: number
    _all: number
  }


  export type ImagesAvgAggregateInputType = {
    image_id?: true
    image_creator_id?: true
    image_data_id?: true
  }

  export type ImagesSumAggregateInputType = {
    image_id?: true
    image_creator_id?: true
    image_data_id?: true
  }

  export type ImagesMinAggregateInputType = {
    image_id?: true
    image_creator_id?: true
    image_title?: true
    image_description?: true
    image_filename?: true
    image_data_id?: true
  }

  export type ImagesMaxAggregateInputType = {
    image_id?: true
    image_creator_id?: true
    image_title?: true
    image_description?: true
    image_filename?: true
    image_data_id?: true
  }

  export type ImagesCountAggregateInputType = {
    image_id?: true
    image_creator_id?: true
    image_title?: true
    image_description?: true
    image_filename?: true
    image_data_id?: true
    _all?: true
  }

  export type ImagesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which images to aggregate.
     */
    where?: imagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of images to fetch.
     */
    orderBy?: imagesOrderByWithRelationInput | imagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: imagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` images from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` images.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned images
    **/
    _count?: true | ImagesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ImagesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ImagesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ImagesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ImagesMaxAggregateInputType
  }

  export type GetImagesAggregateType<T extends ImagesAggregateArgs> = {
        [P in keyof T & keyof AggregateImages]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateImages[P]>
      : GetScalarType<T[P], AggregateImages[P]>
  }




  export type imagesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: imagesWhereInput
    orderBy?: imagesOrderByWithAggregationInput | imagesOrderByWithAggregationInput[]
    by: ImagesScalarFieldEnum[] | ImagesScalarFieldEnum
    having?: imagesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ImagesCountAggregateInputType | true
    _avg?: ImagesAvgAggregateInputType
    _sum?: ImagesSumAggregateInputType
    _min?: ImagesMinAggregateInputType
    _max?: ImagesMaxAggregateInputType
  }

  export type ImagesGroupByOutputType = {
    image_id: number
    image_creator_id: number
    image_title: string
    image_description: string
    image_filename: string
    image_data_id: number
    _count: ImagesCountAggregateOutputType | null
    _avg: ImagesAvgAggregateOutputType | null
    _sum: ImagesSumAggregateOutputType | null
    _min: ImagesMinAggregateOutputType | null
    _max: ImagesMaxAggregateOutputType | null
  }

  type GetImagesGroupByPayload<T extends imagesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ImagesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ImagesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ImagesGroupByOutputType[P]>
            : GetScalarType<T[P], ImagesGroupByOutputType[P]>
        }
      >
    >


  export type imagesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    image_id?: boolean
    image_creator_id?: boolean
    image_title?: boolean
    image_description?: boolean
    image_filename?: boolean
    image_data_id?: boolean
    collections_images?: boolean | images$collections_imagesArgs<ExtArgs>
    entities_images?: boolean | images$entities_imagesArgs<ExtArgs>
    individuals?: boolean | individualsDefaultArgs<ExtArgs>
    images_data?: boolean | images_dataDefaultArgs<ExtArgs>
    _count?: boolean | ImagesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["images"]>

  export type imagesSelectScalar = {
    image_id?: boolean
    image_creator_id?: boolean
    image_title?: boolean
    image_description?: boolean
    image_filename?: boolean
    image_data_id?: boolean
  }

  export type imagesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    collections_images?: boolean | images$collections_imagesArgs<ExtArgs>
    entities_images?: boolean | images$entities_imagesArgs<ExtArgs>
    individuals?: boolean | individualsDefaultArgs<ExtArgs>
    images_data?: boolean | images_dataDefaultArgs<ExtArgs>
    _count?: boolean | ImagesCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $imagesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "images"
    objects: {
      collections_images: Prisma.$collections_imagesPayload<ExtArgs>[]
      entities_images: Prisma.$entities_imagesPayload<ExtArgs>[]
      individuals: Prisma.$individualsPayload<ExtArgs>
      images_data: Prisma.$images_dataPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      image_id: number
      image_creator_id: number
      image_title: string
      image_description: string
      image_filename: string
      image_data_id: number
    }, ExtArgs["result"]["images"]>
    composites: {}
  }


  type imagesGetPayload<S extends boolean | null | undefined | imagesDefaultArgs> = $Result.GetResult<Prisma.$imagesPayload, S>

  type imagesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<imagesFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ImagesCountAggregateInputType | true
    }

  export interface imagesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['images'], meta: { name: 'images' } }
    /**
     * Find zero or one Images that matches the filter.
     * @param {imagesFindUniqueArgs} args - Arguments to find a Images
     * @example
     * // Get one Images
     * const images = await prisma.images.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends imagesFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, imagesFindUniqueArgs<ExtArgs>>
    ): Prisma__imagesClient<$Result.GetResult<Prisma.$imagesPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Images that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {imagesFindUniqueOrThrowArgs} args - Arguments to find a Images
     * @example
     * // Get one Images
     * const images = await prisma.images.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends imagesFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, imagesFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__imagesClient<$Result.GetResult<Prisma.$imagesPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Images that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {imagesFindFirstArgs} args - Arguments to find a Images
     * @example
     * // Get one Images
     * const images = await prisma.images.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends imagesFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, imagesFindFirstArgs<ExtArgs>>
    ): Prisma__imagesClient<$Result.GetResult<Prisma.$imagesPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Images that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {imagesFindFirstOrThrowArgs} args - Arguments to find a Images
     * @example
     * // Get one Images
     * const images = await prisma.images.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends imagesFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, imagesFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__imagesClient<$Result.GetResult<Prisma.$imagesPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Images that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {imagesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Images
     * const images = await prisma.images.findMany()
     * 
     * // Get first 10 Images
     * const images = await prisma.images.findMany({ take: 10 })
     * 
     * // Only select the `image_id`
     * const imagesWithImage_idOnly = await prisma.images.findMany({ select: { image_id: true } })
     * 
    **/
    findMany<T extends imagesFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, imagesFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$imagesPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Images.
     * @param {imagesCreateArgs} args - Arguments to create a Images.
     * @example
     * // Create one Images
     * const Images = await prisma.images.create({
     *   data: {
     *     // ... data to create a Images
     *   }
     * })
     * 
    **/
    create<T extends imagesCreateArgs<ExtArgs>>(
      args: SelectSubset<T, imagesCreateArgs<ExtArgs>>
    ): Prisma__imagesClient<$Result.GetResult<Prisma.$imagesPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Images.
     *     @param {imagesCreateManyArgs} args - Arguments to create many Images.
     *     @example
     *     // Create many Images
     *     const images = await prisma.images.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends imagesCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, imagesCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Images.
     * @param {imagesDeleteArgs} args - Arguments to delete one Images.
     * @example
     * // Delete one Images
     * const Images = await prisma.images.delete({
     *   where: {
     *     // ... filter to delete one Images
     *   }
     * })
     * 
    **/
    delete<T extends imagesDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, imagesDeleteArgs<ExtArgs>>
    ): Prisma__imagesClient<$Result.GetResult<Prisma.$imagesPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Images.
     * @param {imagesUpdateArgs} args - Arguments to update one Images.
     * @example
     * // Update one Images
     * const images = await prisma.images.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends imagesUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, imagesUpdateArgs<ExtArgs>>
    ): Prisma__imagesClient<$Result.GetResult<Prisma.$imagesPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Images.
     * @param {imagesDeleteManyArgs} args - Arguments to filter Images to delete.
     * @example
     * // Delete a few Images
     * const { count } = await prisma.images.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends imagesDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, imagesDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Images.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {imagesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Images
     * const images = await prisma.images.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends imagesUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, imagesUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Images.
     * @param {imagesUpsertArgs} args - Arguments to update or create a Images.
     * @example
     * // Update or create a Images
     * const images = await prisma.images.upsert({
     *   create: {
     *     // ... data to create a Images
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Images we want to update
     *   }
     * })
    **/
    upsert<T extends imagesUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, imagesUpsertArgs<ExtArgs>>
    ): Prisma__imagesClient<$Result.GetResult<Prisma.$imagesPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Images.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {imagesCountArgs} args - Arguments to filter Images to count.
     * @example
     * // Count the number of Images
     * const count = await prisma.images.count({
     *   where: {
     *     // ... the filter for the Images we want to count
     *   }
     * })
    **/
    count<T extends imagesCountArgs>(
      args?: Subset<T, imagesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ImagesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Images.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImagesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ImagesAggregateArgs>(args: Subset<T, ImagesAggregateArgs>): Prisma.PrismaPromise<GetImagesAggregateType<T>>

    /**
     * Group by Images.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {imagesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends imagesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: imagesGroupByArgs['orderBy'] }
        : { orderBy?: imagesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, imagesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetImagesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the images model
   */
  readonly fields: imagesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for images.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__imagesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    collections_images<T extends images$collections_imagesArgs<ExtArgs> = {}>(args?: Subset<T, images$collections_imagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$collections_imagesPayload<ExtArgs>, T, 'findMany'> | Null>;

    entities_images<T extends images$entities_imagesArgs<ExtArgs> = {}>(args?: Subset<T, images$entities_imagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$entities_imagesPayload<ExtArgs>, T, 'findMany'> | Null>;

    individuals<T extends individualsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, individualsDefaultArgs<ExtArgs>>): Prisma__individualsClient<$Result.GetResult<Prisma.$individualsPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    images_data<T extends images_dataDefaultArgs<ExtArgs> = {}>(args?: Subset<T, images_dataDefaultArgs<ExtArgs>>): Prisma__images_dataClient<$Result.GetResult<Prisma.$images_dataPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the images model
   */ 
  interface imagesFieldRefs {
    readonly image_id: FieldRef<"images", 'Int'>
    readonly image_creator_id: FieldRef<"images", 'Int'>
    readonly image_title: FieldRef<"images", 'String'>
    readonly image_description: FieldRef<"images", 'String'>
    readonly image_filename: FieldRef<"images", 'String'>
    readonly image_data_id: FieldRef<"images", 'Int'>
  }
    

  // Custom InputTypes

  /**
   * images findUnique
   */
  export type imagesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the images
     */
    select?: imagesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: imagesInclude<ExtArgs> | null
    /**
     * Filter, which images to fetch.
     */
    where: imagesWhereUniqueInput
  }


  /**
   * images findUniqueOrThrow
   */
  export type imagesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the images
     */
    select?: imagesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: imagesInclude<ExtArgs> | null
    /**
     * Filter, which images to fetch.
     */
    where: imagesWhereUniqueInput
  }


  /**
   * images findFirst
   */
  export type imagesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the images
     */
    select?: imagesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: imagesInclude<ExtArgs> | null
    /**
     * Filter, which images to fetch.
     */
    where?: imagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of images to fetch.
     */
    orderBy?: imagesOrderByWithRelationInput | imagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for images.
     */
    cursor?: imagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` images from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` images.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of images.
     */
    distinct?: ImagesScalarFieldEnum | ImagesScalarFieldEnum[]
  }


  /**
   * images findFirstOrThrow
   */
  export type imagesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the images
     */
    select?: imagesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: imagesInclude<ExtArgs> | null
    /**
     * Filter, which images to fetch.
     */
    where?: imagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of images to fetch.
     */
    orderBy?: imagesOrderByWithRelationInput | imagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for images.
     */
    cursor?: imagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` images from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` images.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of images.
     */
    distinct?: ImagesScalarFieldEnum | ImagesScalarFieldEnum[]
  }


  /**
   * images findMany
   */
  export type imagesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the images
     */
    select?: imagesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: imagesInclude<ExtArgs> | null
    /**
     * Filter, which images to fetch.
     */
    where?: imagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of images to fetch.
     */
    orderBy?: imagesOrderByWithRelationInput | imagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing images.
     */
    cursor?: imagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` images from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` images.
     */
    skip?: number
    distinct?: ImagesScalarFieldEnum | ImagesScalarFieldEnum[]
  }


  /**
   * images create
   */
  export type imagesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the images
     */
    select?: imagesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: imagesInclude<ExtArgs> | null
    /**
     * The data needed to create a images.
     */
    data: XOR<imagesCreateInput, imagesUncheckedCreateInput>
  }


  /**
   * images createMany
   */
  export type imagesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many images.
     */
    data: imagesCreateManyInput | imagesCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * images update
   */
  export type imagesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the images
     */
    select?: imagesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: imagesInclude<ExtArgs> | null
    /**
     * The data needed to update a images.
     */
    data: XOR<imagesUpdateInput, imagesUncheckedUpdateInput>
    /**
     * Choose, which images to update.
     */
    where: imagesWhereUniqueInput
  }


  /**
   * images updateMany
   */
  export type imagesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update images.
     */
    data: XOR<imagesUpdateManyMutationInput, imagesUncheckedUpdateManyInput>
    /**
     * Filter which images to update
     */
    where?: imagesWhereInput
  }


  /**
   * images upsert
   */
  export type imagesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the images
     */
    select?: imagesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: imagesInclude<ExtArgs> | null
    /**
     * The filter to search for the images to update in case it exists.
     */
    where: imagesWhereUniqueInput
    /**
     * In case the images found by the `where` argument doesn't exist, create a new images with this data.
     */
    create: XOR<imagesCreateInput, imagesUncheckedCreateInput>
    /**
     * In case the images was found with the provided `where` argument, update it with this data.
     */
    update: XOR<imagesUpdateInput, imagesUncheckedUpdateInput>
  }


  /**
   * images delete
   */
  export type imagesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the images
     */
    select?: imagesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: imagesInclude<ExtArgs> | null
    /**
     * Filter which images to delete.
     */
    where: imagesWhereUniqueInput
  }


  /**
   * images deleteMany
   */
  export type imagesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which images to delete
     */
    where?: imagesWhereInput
  }


  /**
   * images.collections_images
   */
  export type images$collections_imagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collections_images
     */
    select?: collections_imagesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: collections_imagesInclude<ExtArgs> | null
    where?: collections_imagesWhereInput
    orderBy?: collections_imagesOrderByWithRelationInput | collections_imagesOrderByWithRelationInput[]
    cursor?: collections_imagesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Collections_imagesScalarFieldEnum | Collections_imagesScalarFieldEnum[]
  }


  /**
   * images.entities_images
   */
  export type images$entities_imagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entities_images
     */
    select?: entities_imagesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: entities_imagesInclude<ExtArgs> | null
    where?: entities_imagesWhereInput
    orderBy?: entities_imagesOrderByWithRelationInput | entities_imagesOrderByWithRelationInput[]
    cursor?: entities_imagesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Entities_imagesScalarFieldEnum | Entities_imagesScalarFieldEnum[]
  }


  /**
   * images without action
   */
  export type imagesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the images
     */
    select?: imagesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: imagesInclude<ExtArgs> | null
  }



  /**
   * Model images_data
   */

  export type AggregateImages_data = {
    _count: Images_dataCountAggregateOutputType | null
    _avg: Images_dataAvgAggregateOutputType | null
    _sum: Images_dataSumAggregateOutputType | null
    _min: Images_dataMinAggregateOutputType | null
    _max: Images_dataMaxAggregateOutputType | null
  }

  export type Images_dataAvgAggregateOutputType = {
    image_data_id: number | null
  }

  export type Images_dataSumAggregateOutputType = {
    image_data_id: number | null
  }

  export type Images_dataMinAggregateOutputType = {
    image_data_id: number | null
    image_data: Buffer | null
  }

  export type Images_dataMaxAggregateOutputType = {
    image_data_id: number | null
    image_data: Buffer | null
  }

  export type Images_dataCountAggregateOutputType = {
    image_data_id: number
    image_data: number
    _all: number
  }


  export type Images_dataAvgAggregateInputType = {
    image_data_id?: true
  }

  export type Images_dataSumAggregateInputType = {
    image_data_id?: true
  }

  export type Images_dataMinAggregateInputType = {
    image_data_id?: true
    image_data?: true
  }

  export type Images_dataMaxAggregateInputType = {
    image_data_id?: true
    image_data?: true
  }

  export type Images_dataCountAggregateInputType = {
    image_data_id?: true
    image_data?: true
    _all?: true
  }

  export type Images_dataAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which images_data to aggregate.
     */
    where?: images_dataWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of images_data to fetch.
     */
    orderBy?: images_dataOrderByWithRelationInput | images_dataOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: images_dataWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` images_data from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` images_data.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned images_data
    **/
    _count?: true | Images_dataCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Images_dataAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Images_dataSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Images_dataMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Images_dataMaxAggregateInputType
  }

  export type GetImages_dataAggregateType<T extends Images_dataAggregateArgs> = {
        [P in keyof T & keyof AggregateImages_data]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateImages_data[P]>
      : GetScalarType<T[P], AggregateImages_data[P]>
  }




  export type images_dataGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: images_dataWhereInput
    orderBy?: images_dataOrderByWithAggregationInput | images_dataOrderByWithAggregationInput[]
    by: Images_dataScalarFieldEnum[] | Images_dataScalarFieldEnum
    having?: images_dataScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Images_dataCountAggregateInputType | true
    _avg?: Images_dataAvgAggregateInputType
    _sum?: Images_dataSumAggregateInputType
    _min?: Images_dataMinAggregateInputType
    _max?: Images_dataMaxAggregateInputType
  }

  export type Images_dataGroupByOutputType = {
    image_data_id: number
    image_data: Buffer
    _count: Images_dataCountAggregateOutputType | null
    _avg: Images_dataAvgAggregateOutputType | null
    _sum: Images_dataSumAggregateOutputType | null
    _min: Images_dataMinAggregateOutputType | null
    _max: Images_dataMaxAggregateOutputType | null
  }

  type GetImages_dataGroupByPayload<T extends images_dataGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Images_dataGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Images_dataGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Images_dataGroupByOutputType[P]>
            : GetScalarType<T[P], Images_dataGroupByOutputType[P]>
        }
      >
    >


  export type images_dataSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    image_data_id?: boolean
    image_data?: boolean
    images?: boolean | images_data$imagesArgs<ExtArgs>
    _count?: boolean | Images_dataCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["images_data"]>

  export type images_dataSelectScalar = {
    image_data_id?: boolean
    image_data?: boolean
  }

  export type images_dataInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    images?: boolean | images_data$imagesArgs<ExtArgs>
    _count?: boolean | Images_dataCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $images_dataPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "images_data"
    objects: {
      images: Prisma.$imagesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      image_data_id: number
      image_data: Buffer
    }, ExtArgs["result"]["images_data"]>
    composites: {}
  }


  type images_dataGetPayload<S extends boolean | null | undefined | images_dataDefaultArgs> = $Result.GetResult<Prisma.$images_dataPayload, S>

  type images_dataCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<images_dataFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Images_dataCountAggregateInputType | true
    }

  export interface images_dataDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['images_data'], meta: { name: 'images_data' } }
    /**
     * Find zero or one Images_data that matches the filter.
     * @param {images_dataFindUniqueArgs} args - Arguments to find a Images_data
     * @example
     * // Get one Images_data
     * const images_data = await prisma.images_data.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends images_dataFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, images_dataFindUniqueArgs<ExtArgs>>
    ): Prisma__images_dataClient<$Result.GetResult<Prisma.$images_dataPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Images_data that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {images_dataFindUniqueOrThrowArgs} args - Arguments to find a Images_data
     * @example
     * // Get one Images_data
     * const images_data = await prisma.images_data.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends images_dataFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, images_dataFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__images_dataClient<$Result.GetResult<Prisma.$images_dataPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Images_data that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {images_dataFindFirstArgs} args - Arguments to find a Images_data
     * @example
     * // Get one Images_data
     * const images_data = await prisma.images_data.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends images_dataFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, images_dataFindFirstArgs<ExtArgs>>
    ): Prisma__images_dataClient<$Result.GetResult<Prisma.$images_dataPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Images_data that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {images_dataFindFirstOrThrowArgs} args - Arguments to find a Images_data
     * @example
     * // Get one Images_data
     * const images_data = await prisma.images_data.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends images_dataFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, images_dataFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__images_dataClient<$Result.GetResult<Prisma.$images_dataPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Images_data that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {images_dataFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Images_data
     * const images_data = await prisma.images_data.findMany()
     * 
     * // Get first 10 Images_data
     * const images_data = await prisma.images_data.findMany({ take: 10 })
     * 
     * // Only select the `image_data_id`
     * const images_dataWithImage_data_idOnly = await prisma.images_data.findMany({ select: { image_data_id: true } })
     * 
    **/
    findMany<T extends images_dataFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, images_dataFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$images_dataPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Images_data.
     * @param {images_dataCreateArgs} args - Arguments to create a Images_data.
     * @example
     * // Create one Images_data
     * const Images_data = await prisma.images_data.create({
     *   data: {
     *     // ... data to create a Images_data
     *   }
     * })
     * 
    **/
    create<T extends images_dataCreateArgs<ExtArgs>>(
      args: SelectSubset<T, images_dataCreateArgs<ExtArgs>>
    ): Prisma__images_dataClient<$Result.GetResult<Prisma.$images_dataPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Images_data.
     *     @param {images_dataCreateManyArgs} args - Arguments to create many Images_data.
     *     @example
     *     // Create many Images_data
     *     const images_data = await prisma.images_data.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends images_dataCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, images_dataCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Images_data.
     * @param {images_dataDeleteArgs} args - Arguments to delete one Images_data.
     * @example
     * // Delete one Images_data
     * const Images_data = await prisma.images_data.delete({
     *   where: {
     *     // ... filter to delete one Images_data
     *   }
     * })
     * 
    **/
    delete<T extends images_dataDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, images_dataDeleteArgs<ExtArgs>>
    ): Prisma__images_dataClient<$Result.GetResult<Prisma.$images_dataPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Images_data.
     * @param {images_dataUpdateArgs} args - Arguments to update one Images_data.
     * @example
     * // Update one Images_data
     * const images_data = await prisma.images_data.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends images_dataUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, images_dataUpdateArgs<ExtArgs>>
    ): Prisma__images_dataClient<$Result.GetResult<Prisma.$images_dataPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Images_data.
     * @param {images_dataDeleteManyArgs} args - Arguments to filter Images_data to delete.
     * @example
     * // Delete a few Images_data
     * const { count } = await prisma.images_data.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends images_dataDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, images_dataDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Images_data.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {images_dataUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Images_data
     * const images_data = await prisma.images_data.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends images_dataUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, images_dataUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Images_data.
     * @param {images_dataUpsertArgs} args - Arguments to update or create a Images_data.
     * @example
     * // Update or create a Images_data
     * const images_data = await prisma.images_data.upsert({
     *   create: {
     *     // ... data to create a Images_data
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Images_data we want to update
     *   }
     * })
    **/
    upsert<T extends images_dataUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, images_dataUpsertArgs<ExtArgs>>
    ): Prisma__images_dataClient<$Result.GetResult<Prisma.$images_dataPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Images_data.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {images_dataCountArgs} args - Arguments to filter Images_data to count.
     * @example
     * // Count the number of Images_data
     * const count = await prisma.images_data.count({
     *   where: {
     *     // ... the filter for the Images_data we want to count
     *   }
     * })
    **/
    count<T extends images_dataCountArgs>(
      args?: Subset<T, images_dataCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Images_dataCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Images_data.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Images_dataAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Images_dataAggregateArgs>(args: Subset<T, Images_dataAggregateArgs>): Prisma.PrismaPromise<GetImages_dataAggregateType<T>>

    /**
     * Group by Images_data.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {images_dataGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends images_dataGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: images_dataGroupByArgs['orderBy'] }
        : { orderBy?: images_dataGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, images_dataGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetImages_dataGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the images_data model
   */
  readonly fields: images_dataFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for images_data.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__images_dataClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    images<T extends images_data$imagesArgs<ExtArgs> = {}>(args?: Subset<T, images_data$imagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$imagesPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the images_data model
   */ 
  interface images_dataFieldRefs {
    readonly image_data_id: FieldRef<"images_data", 'Int'>
    readonly image_data: FieldRef<"images_data", 'Bytes'>
  }
    

  // Custom InputTypes

  /**
   * images_data findUnique
   */
  export type images_dataFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the images_data
     */
    select?: images_dataSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: images_dataInclude<ExtArgs> | null
    /**
     * Filter, which images_data to fetch.
     */
    where: images_dataWhereUniqueInput
  }


  /**
   * images_data findUniqueOrThrow
   */
  export type images_dataFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the images_data
     */
    select?: images_dataSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: images_dataInclude<ExtArgs> | null
    /**
     * Filter, which images_data to fetch.
     */
    where: images_dataWhereUniqueInput
  }


  /**
   * images_data findFirst
   */
  export type images_dataFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the images_data
     */
    select?: images_dataSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: images_dataInclude<ExtArgs> | null
    /**
     * Filter, which images_data to fetch.
     */
    where?: images_dataWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of images_data to fetch.
     */
    orderBy?: images_dataOrderByWithRelationInput | images_dataOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for images_data.
     */
    cursor?: images_dataWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` images_data from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` images_data.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of images_data.
     */
    distinct?: Images_dataScalarFieldEnum | Images_dataScalarFieldEnum[]
  }


  /**
   * images_data findFirstOrThrow
   */
  export type images_dataFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the images_data
     */
    select?: images_dataSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: images_dataInclude<ExtArgs> | null
    /**
     * Filter, which images_data to fetch.
     */
    where?: images_dataWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of images_data to fetch.
     */
    orderBy?: images_dataOrderByWithRelationInput | images_dataOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for images_data.
     */
    cursor?: images_dataWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` images_data from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` images_data.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of images_data.
     */
    distinct?: Images_dataScalarFieldEnum | Images_dataScalarFieldEnum[]
  }


  /**
   * images_data findMany
   */
  export type images_dataFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the images_data
     */
    select?: images_dataSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: images_dataInclude<ExtArgs> | null
    /**
     * Filter, which images_data to fetch.
     */
    where?: images_dataWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of images_data to fetch.
     */
    orderBy?: images_dataOrderByWithRelationInput | images_dataOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing images_data.
     */
    cursor?: images_dataWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` images_data from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` images_data.
     */
    skip?: number
    distinct?: Images_dataScalarFieldEnum | Images_dataScalarFieldEnum[]
  }


  /**
   * images_data create
   */
  export type images_dataCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the images_data
     */
    select?: images_dataSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: images_dataInclude<ExtArgs> | null
    /**
     * The data needed to create a images_data.
     */
    data: XOR<images_dataCreateInput, images_dataUncheckedCreateInput>
  }


  /**
   * images_data createMany
   */
  export type images_dataCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many images_data.
     */
    data: images_dataCreateManyInput | images_dataCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * images_data update
   */
  export type images_dataUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the images_data
     */
    select?: images_dataSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: images_dataInclude<ExtArgs> | null
    /**
     * The data needed to update a images_data.
     */
    data: XOR<images_dataUpdateInput, images_dataUncheckedUpdateInput>
    /**
     * Choose, which images_data to update.
     */
    where: images_dataWhereUniqueInput
  }


  /**
   * images_data updateMany
   */
  export type images_dataUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update images_data.
     */
    data: XOR<images_dataUpdateManyMutationInput, images_dataUncheckedUpdateManyInput>
    /**
     * Filter which images_data to update
     */
    where?: images_dataWhereInput
  }


  /**
   * images_data upsert
   */
  export type images_dataUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the images_data
     */
    select?: images_dataSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: images_dataInclude<ExtArgs> | null
    /**
     * The filter to search for the images_data to update in case it exists.
     */
    where: images_dataWhereUniqueInput
    /**
     * In case the images_data found by the `where` argument doesn't exist, create a new images_data with this data.
     */
    create: XOR<images_dataCreateInput, images_dataUncheckedCreateInput>
    /**
     * In case the images_data was found with the provided `where` argument, update it with this data.
     */
    update: XOR<images_dataUpdateInput, images_dataUncheckedUpdateInput>
  }


  /**
   * images_data delete
   */
  export type images_dataDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the images_data
     */
    select?: images_dataSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: images_dataInclude<ExtArgs> | null
    /**
     * Filter which images_data to delete.
     */
    where: images_dataWhereUniqueInput
  }


  /**
   * images_data deleteMany
   */
  export type images_dataDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which images_data to delete
     */
    where?: images_dataWhereInput
  }


  /**
   * images_data.images
   */
  export type images_data$imagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the images
     */
    select?: imagesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: imagesInclude<ExtArgs> | null
    where?: imagesWhereInput
    orderBy?: imagesOrderByWithRelationInput | imagesOrderByWithRelationInput[]
    cursor?: imagesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ImagesScalarFieldEnum | ImagesScalarFieldEnum[]
  }


  /**
   * images_data without action
   */
  export type images_dataDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the images_data
     */
    select?: images_dataSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: images_dataInclude<ExtArgs> | null
  }



  /**
   * Model individuals
   */

  export type AggregateIndividuals = {
    _count: IndividualsCountAggregateOutputType | null
    _avg: IndividualsAvgAggregateOutputType | null
    _sum: IndividualsSumAggregateOutputType | null
    _min: IndividualsMinAggregateOutputType | null
    _max: IndividualsMaxAggregateOutputType | null
  }

  export type IndividualsAvgAggregateOutputType = {
    individual_id: number | null
  }

  export type IndividualsSumAggregateOutputType = {
    individual_id: number | null
  }

  export type IndividualsMinAggregateOutputType = {
    individual_id: number | null
    individual_userName: string | null
    individual_name: string | null
    individual_currentIssue: string | null
    individual_roles: string | null
    individual_description: string | null
  }

  export type IndividualsMaxAggregateOutputType = {
    individual_id: number | null
    individual_userName: string | null
    individual_name: string | null
    individual_currentIssue: string | null
    individual_roles: string | null
    individual_description: string | null
  }

  export type IndividualsCountAggregateOutputType = {
    individual_id: number
    individual_userName: number
    individual_name: number
    individual_currentIssue: number
    individual_roles: number
    individual_description: number
    _all: number
  }


  export type IndividualsAvgAggregateInputType = {
    individual_id?: true
  }

  export type IndividualsSumAggregateInputType = {
    individual_id?: true
  }

  export type IndividualsMinAggregateInputType = {
    individual_id?: true
    individual_userName?: true
    individual_name?: true
    individual_currentIssue?: true
    individual_roles?: true
    individual_description?: true
  }

  export type IndividualsMaxAggregateInputType = {
    individual_id?: true
    individual_userName?: true
    individual_name?: true
    individual_currentIssue?: true
    individual_roles?: true
    individual_description?: true
  }

  export type IndividualsCountAggregateInputType = {
    individual_id?: true
    individual_userName?: true
    individual_name?: true
    individual_currentIssue?: true
    individual_roles?: true
    individual_description?: true
    _all?: true
  }

  export type IndividualsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which individuals to aggregate.
     */
    where?: individualsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of individuals to fetch.
     */
    orderBy?: individualsOrderByWithRelationInput | individualsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: individualsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` individuals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` individuals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned individuals
    **/
    _count?: true | IndividualsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: IndividualsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: IndividualsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: IndividualsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: IndividualsMaxAggregateInputType
  }

  export type GetIndividualsAggregateType<T extends IndividualsAggregateArgs> = {
        [P in keyof T & keyof AggregateIndividuals]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateIndividuals[P]>
      : GetScalarType<T[P], AggregateIndividuals[P]>
  }




  export type individualsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: individualsWhereInput
    orderBy?: individualsOrderByWithAggregationInput | individualsOrderByWithAggregationInput[]
    by: IndividualsScalarFieldEnum[] | IndividualsScalarFieldEnum
    having?: individualsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: IndividualsCountAggregateInputType | true
    _avg?: IndividualsAvgAggregateInputType
    _sum?: IndividualsSumAggregateInputType
    _min?: IndividualsMinAggregateInputType
    _max?: IndividualsMaxAggregateInputType
  }

  export type IndividualsGroupByOutputType = {
    individual_id: number
    individual_userName: string
    individual_name: string
    individual_currentIssue: string | null
    individual_roles: string | null
    individual_description: string | null
    _count: IndividualsCountAggregateOutputType | null
    _avg: IndividualsAvgAggregateOutputType | null
    _sum: IndividualsSumAggregateOutputType | null
    _min: IndividualsMinAggregateOutputType | null
    _max: IndividualsMaxAggregateOutputType | null
  }

  type GetIndividualsGroupByPayload<T extends individualsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<IndividualsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof IndividualsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], IndividualsGroupByOutputType[P]>
            : GetScalarType<T[P], IndividualsGroupByOutputType[P]>
        }
      >
    >


  export type individualsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    individual_id?: boolean
    individual_userName?: boolean
    individual_name?: boolean
    individual_currentIssue?: boolean
    individual_roles?: boolean
    individual_description?: boolean
    collections?: boolean | individuals$collectionsArgs<ExtArgs>
    entities?: boolean | individuals$entitiesArgs<ExtArgs>
    entities_references?: boolean | individuals$entities_referencesArgs<ExtArgs>
    groups_members?: boolean | individuals$groups_membersArgs<ExtArgs>
    images?: boolean | individuals$imagesArgs<ExtArgs>
    organizations_members?: boolean | individuals$organizations_membersArgs<ExtArgs>
    sheets?: boolean | individuals$sheetsArgs<ExtArgs>
    videos?: boolean | individuals$videosArgs<ExtArgs>
    _count?: boolean | IndividualsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["individuals"]>

  export type individualsSelectScalar = {
    individual_id?: boolean
    individual_userName?: boolean
    individual_name?: boolean
    individual_currentIssue?: boolean
    individual_roles?: boolean
    individual_description?: boolean
  }

  export type individualsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    collections?: boolean | individuals$collectionsArgs<ExtArgs>
    entities?: boolean | individuals$entitiesArgs<ExtArgs>
    entities_references?: boolean | individuals$entities_referencesArgs<ExtArgs>
    groups_members?: boolean | individuals$groups_membersArgs<ExtArgs>
    images?: boolean | individuals$imagesArgs<ExtArgs>
    organizations_members?: boolean | individuals$organizations_membersArgs<ExtArgs>
    sheets?: boolean | individuals$sheetsArgs<ExtArgs>
    videos?: boolean | individuals$videosArgs<ExtArgs>
    _count?: boolean | IndividualsCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $individualsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "individuals"
    objects: {
      collections: Prisma.$collectionsPayload<ExtArgs>[]
      entities: Prisma.$entitiesPayload<ExtArgs>[]
      entities_references: Prisma.$entities_referencesPayload<ExtArgs>[]
      groups_members: Prisma.$groups_membersPayload<ExtArgs>[]
      images: Prisma.$imagesPayload<ExtArgs>[]
      organizations_members: Prisma.$organizations_membersPayload<ExtArgs>[]
      sheets: Prisma.$sheetsPayload<ExtArgs>[]
      videos: Prisma.$videosPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      individual_id: number
      individual_userName: string
      individual_name: string
      individual_currentIssue: string | null
      individual_roles: string | null
      individual_description: string | null
    }, ExtArgs["result"]["individuals"]>
    composites: {}
  }


  type individualsGetPayload<S extends boolean | null | undefined | individualsDefaultArgs> = $Result.GetResult<Prisma.$individualsPayload, S>

  type individualsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<individualsFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: IndividualsCountAggregateInputType | true
    }

  export interface individualsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['individuals'], meta: { name: 'individuals' } }
    /**
     * Find zero or one Individuals that matches the filter.
     * @param {individualsFindUniqueArgs} args - Arguments to find a Individuals
     * @example
     * // Get one Individuals
     * const individuals = await prisma.individuals.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends individualsFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, individualsFindUniqueArgs<ExtArgs>>
    ): Prisma__individualsClient<$Result.GetResult<Prisma.$individualsPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Individuals that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {individualsFindUniqueOrThrowArgs} args - Arguments to find a Individuals
     * @example
     * // Get one Individuals
     * const individuals = await prisma.individuals.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends individualsFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, individualsFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__individualsClient<$Result.GetResult<Prisma.$individualsPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Individuals that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {individualsFindFirstArgs} args - Arguments to find a Individuals
     * @example
     * // Get one Individuals
     * const individuals = await prisma.individuals.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends individualsFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, individualsFindFirstArgs<ExtArgs>>
    ): Prisma__individualsClient<$Result.GetResult<Prisma.$individualsPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Individuals that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {individualsFindFirstOrThrowArgs} args - Arguments to find a Individuals
     * @example
     * // Get one Individuals
     * const individuals = await prisma.individuals.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends individualsFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, individualsFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__individualsClient<$Result.GetResult<Prisma.$individualsPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Individuals that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {individualsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Individuals
     * const individuals = await prisma.individuals.findMany()
     * 
     * // Get first 10 Individuals
     * const individuals = await prisma.individuals.findMany({ take: 10 })
     * 
     * // Only select the `individual_id`
     * const individualsWithIndividual_idOnly = await prisma.individuals.findMany({ select: { individual_id: true } })
     * 
    **/
    findMany<T extends individualsFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, individualsFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$individualsPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Individuals.
     * @param {individualsCreateArgs} args - Arguments to create a Individuals.
     * @example
     * // Create one Individuals
     * const Individuals = await prisma.individuals.create({
     *   data: {
     *     // ... data to create a Individuals
     *   }
     * })
     * 
    **/
    create<T extends individualsCreateArgs<ExtArgs>>(
      args: SelectSubset<T, individualsCreateArgs<ExtArgs>>
    ): Prisma__individualsClient<$Result.GetResult<Prisma.$individualsPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Individuals.
     *     @param {individualsCreateManyArgs} args - Arguments to create many Individuals.
     *     @example
     *     // Create many Individuals
     *     const individuals = await prisma.individuals.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends individualsCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, individualsCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Individuals.
     * @param {individualsDeleteArgs} args - Arguments to delete one Individuals.
     * @example
     * // Delete one Individuals
     * const Individuals = await prisma.individuals.delete({
     *   where: {
     *     // ... filter to delete one Individuals
     *   }
     * })
     * 
    **/
    delete<T extends individualsDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, individualsDeleteArgs<ExtArgs>>
    ): Prisma__individualsClient<$Result.GetResult<Prisma.$individualsPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Individuals.
     * @param {individualsUpdateArgs} args - Arguments to update one Individuals.
     * @example
     * // Update one Individuals
     * const individuals = await prisma.individuals.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends individualsUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, individualsUpdateArgs<ExtArgs>>
    ): Prisma__individualsClient<$Result.GetResult<Prisma.$individualsPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Individuals.
     * @param {individualsDeleteManyArgs} args - Arguments to filter Individuals to delete.
     * @example
     * // Delete a few Individuals
     * const { count } = await prisma.individuals.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends individualsDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, individualsDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Individuals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {individualsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Individuals
     * const individuals = await prisma.individuals.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends individualsUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, individualsUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Individuals.
     * @param {individualsUpsertArgs} args - Arguments to update or create a Individuals.
     * @example
     * // Update or create a Individuals
     * const individuals = await prisma.individuals.upsert({
     *   create: {
     *     // ... data to create a Individuals
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Individuals we want to update
     *   }
     * })
    **/
    upsert<T extends individualsUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, individualsUpsertArgs<ExtArgs>>
    ): Prisma__individualsClient<$Result.GetResult<Prisma.$individualsPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Individuals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {individualsCountArgs} args - Arguments to filter Individuals to count.
     * @example
     * // Count the number of Individuals
     * const count = await prisma.individuals.count({
     *   where: {
     *     // ... the filter for the Individuals we want to count
     *   }
     * })
    **/
    count<T extends individualsCountArgs>(
      args?: Subset<T, individualsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], IndividualsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Individuals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IndividualsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends IndividualsAggregateArgs>(args: Subset<T, IndividualsAggregateArgs>): Prisma.PrismaPromise<GetIndividualsAggregateType<T>>

    /**
     * Group by Individuals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {individualsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends individualsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: individualsGroupByArgs['orderBy'] }
        : { orderBy?: individualsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, individualsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetIndividualsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the individuals model
   */
  readonly fields: individualsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for individuals.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__individualsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    collections<T extends individuals$collectionsArgs<ExtArgs> = {}>(args?: Subset<T, individuals$collectionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$collectionsPayload<ExtArgs>, T, 'findMany'> | Null>;

    entities<T extends individuals$entitiesArgs<ExtArgs> = {}>(args?: Subset<T, individuals$entitiesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$entitiesPayload<ExtArgs>, T, 'findMany'> | Null>;

    entities_references<T extends individuals$entities_referencesArgs<ExtArgs> = {}>(args?: Subset<T, individuals$entities_referencesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$entities_referencesPayload<ExtArgs>, T, 'findMany'> | Null>;

    groups_members<T extends individuals$groups_membersArgs<ExtArgs> = {}>(args?: Subset<T, individuals$groups_membersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$groups_membersPayload<ExtArgs>, T, 'findMany'> | Null>;

    images<T extends individuals$imagesArgs<ExtArgs> = {}>(args?: Subset<T, individuals$imagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$imagesPayload<ExtArgs>, T, 'findMany'> | Null>;

    organizations_members<T extends individuals$organizations_membersArgs<ExtArgs> = {}>(args?: Subset<T, individuals$organizations_membersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$organizations_membersPayload<ExtArgs>, T, 'findMany'> | Null>;

    sheets<T extends individuals$sheetsArgs<ExtArgs> = {}>(args?: Subset<T, individuals$sheetsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sheetsPayload<ExtArgs>, T, 'findMany'> | Null>;

    videos<T extends individuals$videosArgs<ExtArgs> = {}>(args?: Subset<T, individuals$videosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$videosPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the individuals model
   */ 
  interface individualsFieldRefs {
    readonly individual_id: FieldRef<"individuals", 'Int'>
    readonly individual_userName: FieldRef<"individuals", 'String'>
    readonly individual_name: FieldRef<"individuals", 'String'>
    readonly individual_currentIssue: FieldRef<"individuals", 'String'>
    readonly individual_roles: FieldRef<"individuals", 'String'>
    readonly individual_description: FieldRef<"individuals", 'String'>
  }
    

  // Custom InputTypes

  /**
   * individuals findUnique
   */
  export type individualsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the individuals
     */
    select?: individualsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: individualsInclude<ExtArgs> | null
    /**
     * Filter, which individuals to fetch.
     */
    where: individualsWhereUniqueInput
  }


  /**
   * individuals findUniqueOrThrow
   */
  export type individualsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the individuals
     */
    select?: individualsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: individualsInclude<ExtArgs> | null
    /**
     * Filter, which individuals to fetch.
     */
    where: individualsWhereUniqueInput
  }


  /**
   * individuals findFirst
   */
  export type individualsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the individuals
     */
    select?: individualsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: individualsInclude<ExtArgs> | null
    /**
     * Filter, which individuals to fetch.
     */
    where?: individualsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of individuals to fetch.
     */
    orderBy?: individualsOrderByWithRelationInput | individualsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for individuals.
     */
    cursor?: individualsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` individuals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` individuals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of individuals.
     */
    distinct?: IndividualsScalarFieldEnum | IndividualsScalarFieldEnum[]
  }


  /**
   * individuals findFirstOrThrow
   */
  export type individualsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the individuals
     */
    select?: individualsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: individualsInclude<ExtArgs> | null
    /**
     * Filter, which individuals to fetch.
     */
    where?: individualsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of individuals to fetch.
     */
    orderBy?: individualsOrderByWithRelationInput | individualsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for individuals.
     */
    cursor?: individualsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` individuals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` individuals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of individuals.
     */
    distinct?: IndividualsScalarFieldEnum | IndividualsScalarFieldEnum[]
  }


  /**
   * individuals findMany
   */
  export type individualsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the individuals
     */
    select?: individualsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: individualsInclude<ExtArgs> | null
    /**
     * Filter, which individuals to fetch.
     */
    where?: individualsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of individuals to fetch.
     */
    orderBy?: individualsOrderByWithRelationInput | individualsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing individuals.
     */
    cursor?: individualsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` individuals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` individuals.
     */
    skip?: number
    distinct?: IndividualsScalarFieldEnum | IndividualsScalarFieldEnum[]
  }


  /**
   * individuals create
   */
  export type individualsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the individuals
     */
    select?: individualsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: individualsInclude<ExtArgs> | null
    /**
     * The data needed to create a individuals.
     */
    data: XOR<individualsCreateInput, individualsUncheckedCreateInput>
  }


  /**
   * individuals createMany
   */
  export type individualsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many individuals.
     */
    data: individualsCreateManyInput | individualsCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * individuals update
   */
  export type individualsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the individuals
     */
    select?: individualsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: individualsInclude<ExtArgs> | null
    /**
     * The data needed to update a individuals.
     */
    data: XOR<individualsUpdateInput, individualsUncheckedUpdateInput>
    /**
     * Choose, which individuals to update.
     */
    where: individualsWhereUniqueInput
  }


  /**
   * individuals updateMany
   */
  export type individualsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update individuals.
     */
    data: XOR<individualsUpdateManyMutationInput, individualsUncheckedUpdateManyInput>
    /**
     * Filter which individuals to update
     */
    where?: individualsWhereInput
  }


  /**
   * individuals upsert
   */
  export type individualsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the individuals
     */
    select?: individualsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: individualsInclude<ExtArgs> | null
    /**
     * The filter to search for the individuals to update in case it exists.
     */
    where: individualsWhereUniqueInput
    /**
     * In case the individuals found by the `where` argument doesn't exist, create a new individuals with this data.
     */
    create: XOR<individualsCreateInput, individualsUncheckedCreateInput>
    /**
     * In case the individuals was found with the provided `where` argument, update it with this data.
     */
    update: XOR<individualsUpdateInput, individualsUncheckedUpdateInput>
  }


  /**
   * individuals delete
   */
  export type individualsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the individuals
     */
    select?: individualsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: individualsInclude<ExtArgs> | null
    /**
     * Filter which individuals to delete.
     */
    where: individualsWhereUniqueInput
  }


  /**
   * individuals deleteMany
   */
  export type individualsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which individuals to delete
     */
    where?: individualsWhereInput
  }


  /**
   * individuals.collections
   */
  export type individuals$collectionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collections
     */
    select?: collectionsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: collectionsInclude<ExtArgs> | null
    where?: collectionsWhereInput
    orderBy?: collectionsOrderByWithRelationInput | collectionsOrderByWithRelationInput[]
    cursor?: collectionsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CollectionsScalarFieldEnum | CollectionsScalarFieldEnum[]
  }


  /**
   * individuals.entities
   */
  export type individuals$entitiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entities
     */
    select?: entitiesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: entitiesInclude<ExtArgs> | null
    where?: entitiesWhereInput
    orderBy?: entitiesOrderByWithRelationInput | entitiesOrderByWithRelationInput[]
    cursor?: entitiesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EntitiesScalarFieldEnum | EntitiesScalarFieldEnum[]
  }


  /**
   * individuals.entities_references
   */
  export type individuals$entities_referencesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entities_references
     */
    select?: entities_referencesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: entities_referencesInclude<ExtArgs> | null
    where?: entities_referencesWhereInput
    orderBy?: entities_referencesOrderByWithRelationInput | entities_referencesOrderByWithRelationInput[]
    cursor?: entities_referencesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Entities_referencesScalarFieldEnum | Entities_referencesScalarFieldEnum[]
  }


  /**
   * individuals.groups_members
   */
  export type individuals$groups_membersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the groups_members
     */
    select?: groups_membersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: groups_membersInclude<ExtArgs> | null
    where?: groups_membersWhereInput
    orderBy?: groups_membersOrderByWithRelationInput | groups_membersOrderByWithRelationInput[]
    cursor?: groups_membersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Groups_membersScalarFieldEnum | Groups_membersScalarFieldEnum[]
  }


  /**
   * individuals.images
   */
  export type individuals$imagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the images
     */
    select?: imagesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: imagesInclude<ExtArgs> | null
    where?: imagesWhereInput
    orderBy?: imagesOrderByWithRelationInput | imagesOrderByWithRelationInput[]
    cursor?: imagesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ImagesScalarFieldEnum | ImagesScalarFieldEnum[]
  }


  /**
   * individuals.organizations_members
   */
  export type individuals$organizations_membersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the organizations_members
     */
    select?: organizations_membersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: organizations_membersInclude<ExtArgs> | null
    where?: organizations_membersWhereInput
    orderBy?: organizations_membersOrderByWithRelationInput | organizations_membersOrderByWithRelationInput[]
    cursor?: organizations_membersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Organizations_membersScalarFieldEnum | Organizations_membersScalarFieldEnum[]
  }


  /**
   * individuals.sheets
   */
  export type individuals$sheetsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sheets
     */
    select?: sheetsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sheetsInclude<ExtArgs> | null
    where?: sheetsWhereInput
    orderBy?: sheetsOrderByWithRelationInput | sheetsOrderByWithRelationInput[]
    cursor?: sheetsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SheetsScalarFieldEnum | SheetsScalarFieldEnum[]
  }


  /**
   * individuals.videos
   */
  export type individuals$videosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the videos
     */
    select?: videosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: videosInclude<ExtArgs> | null
    where?: videosWhereInput
    orderBy?: videosOrderByWithRelationInput | videosOrderByWithRelationInput[]
    cursor?: videosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: VideosScalarFieldEnum | VideosScalarFieldEnum[]
  }


  /**
   * individuals without action
   */
  export type individualsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the individuals
     */
    select?: individualsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: individualsInclude<ExtArgs> | null
  }



  /**
   * Model organizations
   */

  export type AggregateOrganizations = {
    _count: OrganizationsCountAggregateOutputType | null
    _avg: OrganizationsAvgAggregateOutputType | null
    _sum: OrganizationsSumAggregateOutputType | null
    _min: OrganizationsMinAggregateOutputType | null
    _max: OrganizationsMaxAggregateOutputType | null
  }

  export type OrganizationsAvgAggregateOutputType = {
    organization_id: number | null
  }

  export type OrganizationsSumAggregateOutputType = {
    organization_id: number | null
  }

  export type OrganizationsMinAggregateOutputType = {
    organization_id: number | null
    organization_handle: string | null
    organization_name: string | null
    organization_currentIssue: string | null
    organization_stances: string | null
    organization_description: string | null
  }

  export type OrganizationsMaxAggregateOutputType = {
    organization_id: number | null
    organization_handle: string | null
    organization_name: string | null
    organization_currentIssue: string | null
    organization_stances: string | null
    organization_description: string | null
  }

  export type OrganizationsCountAggregateOutputType = {
    organization_id: number
    organization_handle: number
    organization_name: number
    organization_currentIssue: number
    organization_stances: number
    organization_description: number
    _all: number
  }


  export type OrganizationsAvgAggregateInputType = {
    organization_id?: true
  }

  export type OrganizationsSumAggregateInputType = {
    organization_id?: true
  }

  export type OrganizationsMinAggregateInputType = {
    organization_id?: true
    organization_handle?: true
    organization_name?: true
    organization_currentIssue?: true
    organization_stances?: true
    organization_description?: true
  }

  export type OrganizationsMaxAggregateInputType = {
    organization_id?: true
    organization_handle?: true
    organization_name?: true
    organization_currentIssue?: true
    organization_stances?: true
    organization_description?: true
  }

  export type OrganizationsCountAggregateInputType = {
    organization_id?: true
    organization_handle?: true
    organization_name?: true
    organization_currentIssue?: true
    organization_stances?: true
    organization_description?: true
    _all?: true
  }

  export type OrganizationsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which organizations to aggregate.
     */
    where?: organizationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of organizations to fetch.
     */
    orderBy?: organizationsOrderByWithRelationInput | organizationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: organizationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` organizations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` organizations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned organizations
    **/
    _count?: true | OrganizationsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: OrganizationsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: OrganizationsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OrganizationsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OrganizationsMaxAggregateInputType
  }

  export type GetOrganizationsAggregateType<T extends OrganizationsAggregateArgs> = {
        [P in keyof T & keyof AggregateOrganizations]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOrganizations[P]>
      : GetScalarType<T[P], AggregateOrganizations[P]>
  }




  export type organizationsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: organizationsWhereInput
    orderBy?: organizationsOrderByWithAggregationInput | organizationsOrderByWithAggregationInput[]
    by: OrganizationsScalarFieldEnum[] | OrganizationsScalarFieldEnum
    having?: organizationsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OrganizationsCountAggregateInputType | true
    _avg?: OrganizationsAvgAggregateInputType
    _sum?: OrganizationsSumAggregateInputType
    _min?: OrganizationsMinAggregateInputType
    _max?: OrganizationsMaxAggregateInputType
  }

  export type OrganizationsGroupByOutputType = {
    organization_id: number
    organization_handle: string
    organization_name: string
    organization_currentIssue: string | null
    organization_stances: string | null
    organization_description: string | null
    _count: OrganizationsCountAggregateOutputType | null
    _avg: OrganizationsAvgAggregateOutputType | null
    _sum: OrganizationsSumAggregateOutputType | null
    _min: OrganizationsMinAggregateOutputType | null
    _max: OrganizationsMaxAggregateOutputType | null
  }

  type GetOrganizationsGroupByPayload<T extends organizationsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OrganizationsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OrganizationsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OrganizationsGroupByOutputType[P]>
            : GetScalarType<T[P], OrganizationsGroupByOutputType[P]>
        }
      >
    >


  export type organizationsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    organization_id?: boolean
    organization_handle?: boolean
    organization_name?: boolean
    organization_currentIssue?: boolean
    organization_stances?: boolean
    organization_description?: boolean
    collections?: boolean | organizations$collectionsArgs<ExtArgs>
    entities?: boolean | organizations$entitiesArgs<ExtArgs>
    entities_references?: boolean | organizations$entities_referencesArgs<ExtArgs>
    organizations_members?: boolean | organizations$organizations_membersArgs<ExtArgs>
    _count?: boolean | OrganizationsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["organizations"]>

  export type organizationsSelectScalar = {
    organization_id?: boolean
    organization_handle?: boolean
    organization_name?: boolean
    organization_currentIssue?: boolean
    organization_stances?: boolean
    organization_description?: boolean
  }

  export type organizationsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    collections?: boolean | organizations$collectionsArgs<ExtArgs>
    entities?: boolean | organizations$entitiesArgs<ExtArgs>
    entities_references?: boolean | organizations$entities_referencesArgs<ExtArgs>
    organizations_members?: boolean | organizations$organizations_membersArgs<ExtArgs>
    _count?: boolean | OrganizationsCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $organizationsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "organizations"
    objects: {
      collections: Prisma.$collectionsPayload<ExtArgs>[]
      entities: Prisma.$entitiesPayload<ExtArgs>[]
      entities_references: Prisma.$entities_referencesPayload<ExtArgs>[]
      organizations_members: Prisma.$organizations_membersPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      organization_id: number
      organization_handle: string
      organization_name: string
      organization_currentIssue: string | null
      organization_stances: string | null
      organization_description: string | null
    }, ExtArgs["result"]["organizations"]>
    composites: {}
  }


  type organizationsGetPayload<S extends boolean | null | undefined | organizationsDefaultArgs> = $Result.GetResult<Prisma.$organizationsPayload, S>

  type organizationsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<organizationsFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: OrganizationsCountAggregateInputType | true
    }

  export interface organizationsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['organizations'], meta: { name: 'organizations' } }
    /**
     * Find zero or one Organizations that matches the filter.
     * @param {organizationsFindUniqueArgs} args - Arguments to find a Organizations
     * @example
     * // Get one Organizations
     * const organizations = await prisma.organizations.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends organizationsFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, organizationsFindUniqueArgs<ExtArgs>>
    ): Prisma__organizationsClient<$Result.GetResult<Prisma.$organizationsPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Organizations that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {organizationsFindUniqueOrThrowArgs} args - Arguments to find a Organizations
     * @example
     * // Get one Organizations
     * const organizations = await prisma.organizations.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends organizationsFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, organizationsFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__organizationsClient<$Result.GetResult<Prisma.$organizationsPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Organizations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {organizationsFindFirstArgs} args - Arguments to find a Organizations
     * @example
     * // Get one Organizations
     * const organizations = await prisma.organizations.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends organizationsFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, organizationsFindFirstArgs<ExtArgs>>
    ): Prisma__organizationsClient<$Result.GetResult<Prisma.$organizationsPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Organizations that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {organizationsFindFirstOrThrowArgs} args - Arguments to find a Organizations
     * @example
     * // Get one Organizations
     * const organizations = await prisma.organizations.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends organizationsFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, organizationsFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__organizationsClient<$Result.GetResult<Prisma.$organizationsPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Organizations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {organizationsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Organizations
     * const organizations = await prisma.organizations.findMany()
     * 
     * // Get first 10 Organizations
     * const organizations = await prisma.organizations.findMany({ take: 10 })
     * 
     * // Only select the `organization_id`
     * const organizationsWithOrganization_idOnly = await prisma.organizations.findMany({ select: { organization_id: true } })
     * 
    **/
    findMany<T extends organizationsFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, organizationsFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$organizationsPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Organizations.
     * @param {organizationsCreateArgs} args - Arguments to create a Organizations.
     * @example
     * // Create one Organizations
     * const Organizations = await prisma.organizations.create({
     *   data: {
     *     // ... data to create a Organizations
     *   }
     * })
     * 
    **/
    create<T extends organizationsCreateArgs<ExtArgs>>(
      args: SelectSubset<T, organizationsCreateArgs<ExtArgs>>
    ): Prisma__organizationsClient<$Result.GetResult<Prisma.$organizationsPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Organizations.
     *     @param {organizationsCreateManyArgs} args - Arguments to create many Organizations.
     *     @example
     *     // Create many Organizations
     *     const organizations = await prisma.organizations.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends organizationsCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, organizationsCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Organizations.
     * @param {organizationsDeleteArgs} args - Arguments to delete one Organizations.
     * @example
     * // Delete one Organizations
     * const Organizations = await prisma.organizations.delete({
     *   where: {
     *     // ... filter to delete one Organizations
     *   }
     * })
     * 
    **/
    delete<T extends organizationsDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, organizationsDeleteArgs<ExtArgs>>
    ): Prisma__organizationsClient<$Result.GetResult<Prisma.$organizationsPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Organizations.
     * @param {organizationsUpdateArgs} args - Arguments to update one Organizations.
     * @example
     * // Update one Organizations
     * const organizations = await prisma.organizations.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends organizationsUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, organizationsUpdateArgs<ExtArgs>>
    ): Prisma__organizationsClient<$Result.GetResult<Prisma.$organizationsPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Organizations.
     * @param {organizationsDeleteManyArgs} args - Arguments to filter Organizations to delete.
     * @example
     * // Delete a few Organizations
     * const { count } = await prisma.organizations.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends organizationsDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, organizationsDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Organizations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {organizationsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Organizations
     * const organizations = await prisma.organizations.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends organizationsUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, organizationsUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Organizations.
     * @param {organizationsUpsertArgs} args - Arguments to update or create a Organizations.
     * @example
     * // Update or create a Organizations
     * const organizations = await prisma.organizations.upsert({
     *   create: {
     *     // ... data to create a Organizations
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Organizations we want to update
     *   }
     * })
    **/
    upsert<T extends organizationsUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, organizationsUpsertArgs<ExtArgs>>
    ): Prisma__organizationsClient<$Result.GetResult<Prisma.$organizationsPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Organizations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {organizationsCountArgs} args - Arguments to filter Organizations to count.
     * @example
     * // Count the number of Organizations
     * const count = await prisma.organizations.count({
     *   where: {
     *     // ... the filter for the Organizations we want to count
     *   }
     * })
    **/
    count<T extends organizationsCountArgs>(
      args?: Subset<T, organizationsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OrganizationsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Organizations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrganizationsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OrganizationsAggregateArgs>(args: Subset<T, OrganizationsAggregateArgs>): Prisma.PrismaPromise<GetOrganizationsAggregateType<T>>

    /**
     * Group by Organizations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {organizationsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends organizationsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: organizationsGroupByArgs['orderBy'] }
        : { orderBy?: organizationsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, organizationsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrganizationsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the organizations model
   */
  readonly fields: organizationsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for organizations.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__organizationsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    collections<T extends organizations$collectionsArgs<ExtArgs> = {}>(args?: Subset<T, organizations$collectionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$collectionsPayload<ExtArgs>, T, 'findMany'> | Null>;

    entities<T extends organizations$entitiesArgs<ExtArgs> = {}>(args?: Subset<T, organizations$entitiesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$entitiesPayload<ExtArgs>, T, 'findMany'> | Null>;

    entities_references<T extends organizations$entities_referencesArgs<ExtArgs> = {}>(args?: Subset<T, organizations$entities_referencesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$entities_referencesPayload<ExtArgs>, T, 'findMany'> | Null>;

    organizations_members<T extends organizations$organizations_membersArgs<ExtArgs> = {}>(args?: Subset<T, organizations$organizations_membersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$organizations_membersPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the organizations model
   */ 
  interface organizationsFieldRefs {
    readonly organization_id: FieldRef<"organizations", 'Int'>
    readonly organization_handle: FieldRef<"organizations", 'String'>
    readonly organization_name: FieldRef<"organizations", 'String'>
    readonly organization_currentIssue: FieldRef<"organizations", 'String'>
    readonly organization_stances: FieldRef<"organizations", 'String'>
    readonly organization_description: FieldRef<"organizations", 'String'>
  }
    

  // Custom InputTypes

  /**
   * organizations findUnique
   */
  export type organizationsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the organizations
     */
    select?: organizationsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: organizationsInclude<ExtArgs> | null
    /**
     * Filter, which organizations to fetch.
     */
    where: organizationsWhereUniqueInput
  }


  /**
   * organizations findUniqueOrThrow
   */
  export type organizationsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the organizations
     */
    select?: organizationsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: organizationsInclude<ExtArgs> | null
    /**
     * Filter, which organizations to fetch.
     */
    where: organizationsWhereUniqueInput
  }


  /**
   * organizations findFirst
   */
  export type organizationsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the organizations
     */
    select?: organizationsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: organizationsInclude<ExtArgs> | null
    /**
     * Filter, which organizations to fetch.
     */
    where?: organizationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of organizations to fetch.
     */
    orderBy?: organizationsOrderByWithRelationInput | organizationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for organizations.
     */
    cursor?: organizationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` organizations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` organizations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of organizations.
     */
    distinct?: OrganizationsScalarFieldEnum | OrganizationsScalarFieldEnum[]
  }


  /**
   * organizations findFirstOrThrow
   */
  export type organizationsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the organizations
     */
    select?: organizationsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: organizationsInclude<ExtArgs> | null
    /**
     * Filter, which organizations to fetch.
     */
    where?: organizationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of organizations to fetch.
     */
    orderBy?: organizationsOrderByWithRelationInput | organizationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for organizations.
     */
    cursor?: organizationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` organizations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` organizations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of organizations.
     */
    distinct?: OrganizationsScalarFieldEnum | OrganizationsScalarFieldEnum[]
  }


  /**
   * organizations findMany
   */
  export type organizationsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the organizations
     */
    select?: organizationsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: organizationsInclude<ExtArgs> | null
    /**
     * Filter, which organizations to fetch.
     */
    where?: organizationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of organizations to fetch.
     */
    orderBy?: organizationsOrderByWithRelationInput | organizationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing organizations.
     */
    cursor?: organizationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` organizations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` organizations.
     */
    skip?: number
    distinct?: OrganizationsScalarFieldEnum | OrganizationsScalarFieldEnum[]
  }


  /**
   * organizations create
   */
  export type organizationsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the organizations
     */
    select?: organizationsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: organizationsInclude<ExtArgs> | null
    /**
     * The data needed to create a organizations.
     */
    data: XOR<organizationsCreateInput, organizationsUncheckedCreateInput>
  }


  /**
   * organizations createMany
   */
  export type organizationsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many organizations.
     */
    data: organizationsCreateManyInput | organizationsCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * organizations update
   */
  export type organizationsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the organizations
     */
    select?: organizationsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: organizationsInclude<ExtArgs> | null
    /**
     * The data needed to update a organizations.
     */
    data: XOR<organizationsUpdateInput, organizationsUncheckedUpdateInput>
    /**
     * Choose, which organizations to update.
     */
    where: organizationsWhereUniqueInput
  }


  /**
   * organizations updateMany
   */
  export type organizationsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update organizations.
     */
    data: XOR<organizationsUpdateManyMutationInput, organizationsUncheckedUpdateManyInput>
    /**
     * Filter which organizations to update
     */
    where?: organizationsWhereInput
  }


  /**
   * organizations upsert
   */
  export type organizationsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the organizations
     */
    select?: organizationsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: organizationsInclude<ExtArgs> | null
    /**
     * The filter to search for the organizations to update in case it exists.
     */
    where: organizationsWhereUniqueInput
    /**
     * In case the organizations found by the `where` argument doesn't exist, create a new organizations with this data.
     */
    create: XOR<organizationsCreateInput, organizationsUncheckedCreateInput>
    /**
     * In case the organizations was found with the provided `where` argument, update it with this data.
     */
    update: XOR<organizationsUpdateInput, organizationsUncheckedUpdateInput>
  }


  /**
   * organizations delete
   */
  export type organizationsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the organizations
     */
    select?: organizationsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: organizationsInclude<ExtArgs> | null
    /**
     * Filter which organizations to delete.
     */
    where: organizationsWhereUniqueInput
  }


  /**
   * organizations deleteMany
   */
  export type organizationsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which organizations to delete
     */
    where?: organizationsWhereInput
  }


  /**
   * organizations.collections
   */
  export type organizations$collectionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collections
     */
    select?: collectionsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: collectionsInclude<ExtArgs> | null
    where?: collectionsWhereInput
    orderBy?: collectionsOrderByWithRelationInput | collectionsOrderByWithRelationInput[]
    cursor?: collectionsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CollectionsScalarFieldEnum | CollectionsScalarFieldEnum[]
  }


  /**
   * organizations.entities
   */
  export type organizations$entitiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entities
     */
    select?: entitiesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: entitiesInclude<ExtArgs> | null
    where?: entitiesWhereInput
    orderBy?: entitiesOrderByWithRelationInput | entitiesOrderByWithRelationInput[]
    cursor?: entitiesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EntitiesScalarFieldEnum | EntitiesScalarFieldEnum[]
  }


  /**
   * organizations.entities_references
   */
  export type organizations$entities_referencesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entities_references
     */
    select?: entities_referencesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: entities_referencesInclude<ExtArgs> | null
    where?: entities_referencesWhereInput
    orderBy?: entities_referencesOrderByWithRelationInput | entities_referencesOrderByWithRelationInput[]
    cursor?: entities_referencesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Entities_referencesScalarFieldEnum | Entities_referencesScalarFieldEnum[]
  }


  /**
   * organizations.organizations_members
   */
  export type organizations$organizations_membersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the organizations_members
     */
    select?: organizations_membersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: organizations_membersInclude<ExtArgs> | null
    where?: organizations_membersWhereInput
    orderBy?: organizations_membersOrderByWithRelationInput | organizations_membersOrderByWithRelationInput[]
    cursor?: organizations_membersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Organizations_membersScalarFieldEnum | Organizations_membersScalarFieldEnum[]
  }


  /**
   * organizations without action
   */
  export type organizationsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the organizations
     */
    select?: organizationsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: organizationsInclude<ExtArgs> | null
  }



  /**
   * Model organizations_members
   */

  export type AggregateOrganizations_members = {
    _count: Organizations_membersCountAggregateOutputType | null
    _avg: Organizations_membersAvgAggregateOutputType | null
    _sum: Organizations_membersSumAggregateOutputType | null
    _min: Organizations_membersMinAggregateOutputType | null
    _max: Organizations_membersMaxAggregateOutputType | null
  }

  export type Organizations_membersAvgAggregateOutputType = {
    organization_id: number | null
    individual_id: number | null
  }

  export type Organizations_membersSumAggregateOutputType = {
    organization_id: number | null
    individual_id: number | null
  }

  export type Organizations_membersMinAggregateOutputType = {
    organization_id: number | null
    individual_id: number | null
  }

  export type Organizations_membersMaxAggregateOutputType = {
    organization_id: number | null
    individual_id: number | null
  }

  export type Organizations_membersCountAggregateOutputType = {
    organization_id: number
    individual_id: number
    _all: number
  }


  export type Organizations_membersAvgAggregateInputType = {
    organization_id?: true
    individual_id?: true
  }

  export type Organizations_membersSumAggregateInputType = {
    organization_id?: true
    individual_id?: true
  }

  export type Organizations_membersMinAggregateInputType = {
    organization_id?: true
    individual_id?: true
  }

  export type Organizations_membersMaxAggregateInputType = {
    organization_id?: true
    individual_id?: true
  }

  export type Organizations_membersCountAggregateInputType = {
    organization_id?: true
    individual_id?: true
    _all?: true
  }

  export type Organizations_membersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which organizations_members to aggregate.
     */
    where?: organizations_membersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of organizations_members to fetch.
     */
    orderBy?: organizations_membersOrderByWithRelationInput | organizations_membersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: organizations_membersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` organizations_members from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` organizations_members.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned organizations_members
    **/
    _count?: true | Organizations_membersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Organizations_membersAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Organizations_membersSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Organizations_membersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Organizations_membersMaxAggregateInputType
  }

  export type GetOrganizations_membersAggregateType<T extends Organizations_membersAggregateArgs> = {
        [P in keyof T & keyof AggregateOrganizations_members]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOrganizations_members[P]>
      : GetScalarType<T[P], AggregateOrganizations_members[P]>
  }




  export type organizations_membersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: organizations_membersWhereInput
    orderBy?: organizations_membersOrderByWithAggregationInput | organizations_membersOrderByWithAggregationInput[]
    by: Organizations_membersScalarFieldEnum[] | Organizations_membersScalarFieldEnum
    having?: organizations_membersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Organizations_membersCountAggregateInputType | true
    _avg?: Organizations_membersAvgAggregateInputType
    _sum?: Organizations_membersSumAggregateInputType
    _min?: Organizations_membersMinAggregateInputType
    _max?: Organizations_membersMaxAggregateInputType
  }

  export type Organizations_membersGroupByOutputType = {
    organization_id: number
    individual_id: number
    _count: Organizations_membersCountAggregateOutputType | null
    _avg: Organizations_membersAvgAggregateOutputType | null
    _sum: Organizations_membersSumAggregateOutputType | null
    _min: Organizations_membersMinAggregateOutputType | null
    _max: Organizations_membersMaxAggregateOutputType | null
  }

  type GetOrganizations_membersGroupByPayload<T extends organizations_membersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Organizations_membersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Organizations_membersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Organizations_membersGroupByOutputType[P]>
            : GetScalarType<T[P], Organizations_membersGroupByOutputType[P]>
        }
      >
    >


  export type organizations_membersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    organization_id?: boolean
    individual_id?: boolean
    individuals?: boolean | individualsDefaultArgs<ExtArgs>
    organizations?: boolean | organizationsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["organizations_members"]>

  export type organizations_membersSelectScalar = {
    organization_id?: boolean
    individual_id?: boolean
  }

  export type organizations_membersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    individuals?: boolean | individualsDefaultArgs<ExtArgs>
    organizations?: boolean | organizationsDefaultArgs<ExtArgs>
  }


  export type $organizations_membersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "organizations_members"
    objects: {
      individuals: Prisma.$individualsPayload<ExtArgs>
      organizations: Prisma.$organizationsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      organization_id: number
      individual_id: number
    }, ExtArgs["result"]["organizations_members"]>
    composites: {}
  }


  type organizations_membersGetPayload<S extends boolean | null | undefined | organizations_membersDefaultArgs> = $Result.GetResult<Prisma.$organizations_membersPayload, S>

  type organizations_membersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<organizations_membersFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Organizations_membersCountAggregateInputType | true
    }

  export interface organizations_membersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['organizations_members'], meta: { name: 'organizations_members' } }
    /**
     * Find zero or one Organizations_members that matches the filter.
     * @param {organizations_membersFindUniqueArgs} args - Arguments to find a Organizations_members
     * @example
     * // Get one Organizations_members
     * const organizations_members = await prisma.organizations_members.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends organizations_membersFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, organizations_membersFindUniqueArgs<ExtArgs>>
    ): Prisma__organizations_membersClient<$Result.GetResult<Prisma.$organizations_membersPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Organizations_members that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {organizations_membersFindUniqueOrThrowArgs} args - Arguments to find a Organizations_members
     * @example
     * // Get one Organizations_members
     * const organizations_members = await prisma.organizations_members.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends organizations_membersFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, organizations_membersFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__organizations_membersClient<$Result.GetResult<Prisma.$organizations_membersPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Organizations_members that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {organizations_membersFindFirstArgs} args - Arguments to find a Organizations_members
     * @example
     * // Get one Organizations_members
     * const organizations_members = await prisma.organizations_members.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends organizations_membersFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, organizations_membersFindFirstArgs<ExtArgs>>
    ): Prisma__organizations_membersClient<$Result.GetResult<Prisma.$organizations_membersPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Organizations_members that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {organizations_membersFindFirstOrThrowArgs} args - Arguments to find a Organizations_members
     * @example
     * // Get one Organizations_members
     * const organizations_members = await prisma.organizations_members.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends organizations_membersFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, organizations_membersFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__organizations_membersClient<$Result.GetResult<Prisma.$organizations_membersPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Organizations_members that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {organizations_membersFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Organizations_members
     * const organizations_members = await prisma.organizations_members.findMany()
     * 
     * // Get first 10 Organizations_members
     * const organizations_members = await prisma.organizations_members.findMany({ take: 10 })
     * 
     * // Only select the `organization_id`
     * const organizations_membersWithOrganization_idOnly = await prisma.organizations_members.findMany({ select: { organization_id: true } })
     * 
    **/
    findMany<T extends organizations_membersFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, organizations_membersFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$organizations_membersPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Organizations_members.
     * @param {organizations_membersCreateArgs} args - Arguments to create a Organizations_members.
     * @example
     * // Create one Organizations_members
     * const Organizations_members = await prisma.organizations_members.create({
     *   data: {
     *     // ... data to create a Organizations_members
     *   }
     * })
     * 
    **/
    create<T extends organizations_membersCreateArgs<ExtArgs>>(
      args: SelectSubset<T, organizations_membersCreateArgs<ExtArgs>>
    ): Prisma__organizations_membersClient<$Result.GetResult<Prisma.$organizations_membersPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Organizations_members.
     *     @param {organizations_membersCreateManyArgs} args - Arguments to create many Organizations_members.
     *     @example
     *     // Create many Organizations_members
     *     const organizations_members = await prisma.organizations_members.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends organizations_membersCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, organizations_membersCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Organizations_members.
     * @param {organizations_membersDeleteArgs} args - Arguments to delete one Organizations_members.
     * @example
     * // Delete one Organizations_members
     * const Organizations_members = await prisma.organizations_members.delete({
     *   where: {
     *     // ... filter to delete one Organizations_members
     *   }
     * })
     * 
    **/
    delete<T extends organizations_membersDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, organizations_membersDeleteArgs<ExtArgs>>
    ): Prisma__organizations_membersClient<$Result.GetResult<Prisma.$organizations_membersPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Organizations_members.
     * @param {organizations_membersUpdateArgs} args - Arguments to update one Organizations_members.
     * @example
     * // Update one Organizations_members
     * const organizations_members = await prisma.organizations_members.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends organizations_membersUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, organizations_membersUpdateArgs<ExtArgs>>
    ): Prisma__organizations_membersClient<$Result.GetResult<Prisma.$organizations_membersPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Organizations_members.
     * @param {organizations_membersDeleteManyArgs} args - Arguments to filter Organizations_members to delete.
     * @example
     * // Delete a few Organizations_members
     * const { count } = await prisma.organizations_members.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends organizations_membersDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, organizations_membersDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Organizations_members.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {organizations_membersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Organizations_members
     * const organizations_members = await prisma.organizations_members.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends organizations_membersUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, organizations_membersUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Organizations_members.
     * @param {organizations_membersUpsertArgs} args - Arguments to update or create a Organizations_members.
     * @example
     * // Update or create a Organizations_members
     * const organizations_members = await prisma.organizations_members.upsert({
     *   create: {
     *     // ... data to create a Organizations_members
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Organizations_members we want to update
     *   }
     * })
    **/
    upsert<T extends organizations_membersUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, organizations_membersUpsertArgs<ExtArgs>>
    ): Prisma__organizations_membersClient<$Result.GetResult<Prisma.$organizations_membersPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Organizations_members.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {organizations_membersCountArgs} args - Arguments to filter Organizations_members to count.
     * @example
     * // Count the number of Organizations_members
     * const count = await prisma.organizations_members.count({
     *   where: {
     *     // ... the filter for the Organizations_members we want to count
     *   }
     * })
    **/
    count<T extends organizations_membersCountArgs>(
      args?: Subset<T, organizations_membersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Organizations_membersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Organizations_members.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Organizations_membersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Organizations_membersAggregateArgs>(args: Subset<T, Organizations_membersAggregateArgs>): Prisma.PrismaPromise<GetOrganizations_membersAggregateType<T>>

    /**
     * Group by Organizations_members.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {organizations_membersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends organizations_membersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: organizations_membersGroupByArgs['orderBy'] }
        : { orderBy?: organizations_membersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, organizations_membersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrganizations_membersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the organizations_members model
   */
  readonly fields: organizations_membersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for organizations_members.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__organizations_membersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    individuals<T extends individualsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, individualsDefaultArgs<ExtArgs>>): Prisma__individualsClient<$Result.GetResult<Prisma.$individualsPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    organizations<T extends organizationsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, organizationsDefaultArgs<ExtArgs>>): Prisma__organizationsClient<$Result.GetResult<Prisma.$organizationsPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the organizations_members model
   */ 
  interface organizations_membersFieldRefs {
    readonly organization_id: FieldRef<"organizations_members", 'Int'>
    readonly individual_id: FieldRef<"organizations_members", 'Int'>
  }
    

  // Custom InputTypes

  /**
   * organizations_members findUnique
   */
  export type organizations_membersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the organizations_members
     */
    select?: organizations_membersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: organizations_membersInclude<ExtArgs> | null
    /**
     * Filter, which organizations_members to fetch.
     */
    where: organizations_membersWhereUniqueInput
  }


  /**
   * organizations_members findUniqueOrThrow
   */
  export type organizations_membersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the organizations_members
     */
    select?: organizations_membersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: organizations_membersInclude<ExtArgs> | null
    /**
     * Filter, which organizations_members to fetch.
     */
    where: organizations_membersWhereUniqueInput
  }


  /**
   * organizations_members findFirst
   */
  export type organizations_membersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the organizations_members
     */
    select?: organizations_membersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: organizations_membersInclude<ExtArgs> | null
    /**
     * Filter, which organizations_members to fetch.
     */
    where?: organizations_membersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of organizations_members to fetch.
     */
    orderBy?: organizations_membersOrderByWithRelationInput | organizations_membersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for organizations_members.
     */
    cursor?: organizations_membersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` organizations_members from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` organizations_members.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of organizations_members.
     */
    distinct?: Organizations_membersScalarFieldEnum | Organizations_membersScalarFieldEnum[]
  }


  /**
   * organizations_members findFirstOrThrow
   */
  export type organizations_membersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the organizations_members
     */
    select?: organizations_membersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: organizations_membersInclude<ExtArgs> | null
    /**
     * Filter, which organizations_members to fetch.
     */
    where?: organizations_membersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of organizations_members to fetch.
     */
    orderBy?: organizations_membersOrderByWithRelationInput | organizations_membersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for organizations_members.
     */
    cursor?: organizations_membersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` organizations_members from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` organizations_members.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of organizations_members.
     */
    distinct?: Organizations_membersScalarFieldEnum | Organizations_membersScalarFieldEnum[]
  }


  /**
   * organizations_members findMany
   */
  export type organizations_membersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the organizations_members
     */
    select?: organizations_membersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: organizations_membersInclude<ExtArgs> | null
    /**
     * Filter, which organizations_members to fetch.
     */
    where?: organizations_membersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of organizations_members to fetch.
     */
    orderBy?: organizations_membersOrderByWithRelationInput | organizations_membersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing organizations_members.
     */
    cursor?: organizations_membersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` organizations_members from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` organizations_members.
     */
    skip?: number
    distinct?: Organizations_membersScalarFieldEnum | Organizations_membersScalarFieldEnum[]
  }


  /**
   * organizations_members create
   */
  export type organizations_membersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the organizations_members
     */
    select?: organizations_membersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: organizations_membersInclude<ExtArgs> | null
    /**
     * The data needed to create a organizations_members.
     */
    data: XOR<organizations_membersCreateInput, organizations_membersUncheckedCreateInput>
  }


  /**
   * organizations_members createMany
   */
  export type organizations_membersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many organizations_members.
     */
    data: organizations_membersCreateManyInput | organizations_membersCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * organizations_members update
   */
  export type organizations_membersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the organizations_members
     */
    select?: organizations_membersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: organizations_membersInclude<ExtArgs> | null
    /**
     * The data needed to update a organizations_members.
     */
    data: XOR<organizations_membersUpdateInput, organizations_membersUncheckedUpdateInput>
    /**
     * Choose, which organizations_members to update.
     */
    where: organizations_membersWhereUniqueInput
  }


  /**
   * organizations_members updateMany
   */
  export type organizations_membersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update organizations_members.
     */
    data: XOR<organizations_membersUpdateManyMutationInput, organizations_membersUncheckedUpdateManyInput>
    /**
     * Filter which organizations_members to update
     */
    where?: organizations_membersWhereInput
  }


  /**
   * organizations_members upsert
   */
  export type organizations_membersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the organizations_members
     */
    select?: organizations_membersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: organizations_membersInclude<ExtArgs> | null
    /**
     * The filter to search for the organizations_members to update in case it exists.
     */
    where: organizations_membersWhereUniqueInput
    /**
     * In case the organizations_members found by the `where` argument doesn't exist, create a new organizations_members with this data.
     */
    create: XOR<organizations_membersCreateInput, organizations_membersUncheckedCreateInput>
    /**
     * In case the organizations_members was found with the provided `where` argument, update it with this data.
     */
    update: XOR<organizations_membersUpdateInput, organizations_membersUncheckedUpdateInput>
  }


  /**
   * organizations_members delete
   */
  export type organizations_membersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the organizations_members
     */
    select?: organizations_membersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: organizations_membersInclude<ExtArgs> | null
    /**
     * Filter which organizations_members to delete.
     */
    where: organizations_membersWhereUniqueInput
  }


  /**
   * organizations_members deleteMany
   */
  export type organizations_membersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which organizations_members to delete
     */
    where?: organizations_membersWhereInput
  }


  /**
   * organizations_members without action
   */
  export type organizations_membersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the organizations_members
     */
    select?: organizations_membersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: organizations_membersInclude<ExtArgs> | null
  }



  /**
   * Model sheets
   */

  export type AggregateSheets = {
    _count: SheetsCountAggregateOutputType | null
    _avg: SheetsAvgAggregateOutputType | null
    _sum: SheetsSumAggregateOutputType | null
    _min: SheetsMinAggregateOutputType | null
    _max: SheetsMaxAggregateOutputType | null
  }

  export type SheetsAvgAggregateOutputType = {
    sheet_id: number | null
    sheet_author_id: number | null
  }

  export type SheetsSumAggregateOutputType = {
    sheet_id: number | null
    sheet_author_id: number | null
  }

  export type SheetsMinAggregateOutputType = {
    sheet_id: number | null
    sheet_author_id: number | null
    sheet_title: string | null
    sheet_subject: string | null
    sheet_filename: string | null
    sheet_data: Buffer | null
  }

  export type SheetsMaxAggregateOutputType = {
    sheet_id: number | null
    sheet_author_id: number | null
    sheet_title: string | null
    sheet_subject: string | null
    sheet_filename: string | null
    sheet_data: Buffer | null
  }

  export type SheetsCountAggregateOutputType = {
    sheet_id: number
    sheet_author_id: number
    sheet_title: number
    sheet_subject: number
    sheet_filename: number
    sheet_data: number
    _all: number
  }


  export type SheetsAvgAggregateInputType = {
    sheet_id?: true
    sheet_author_id?: true
  }

  export type SheetsSumAggregateInputType = {
    sheet_id?: true
    sheet_author_id?: true
  }

  export type SheetsMinAggregateInputType = {
    sheet_id?: true
    sheet_author_id?: true
    sheet_title?: true
    sheet_subject?: true
    sheet_filename?: true
    sheet_data?: true
  }

  export type SheetsMaxAggregateInputType = {
    sheet_id?: true
    sheet_author_id?: true
    sheet_title?: true
    sheet_subject?: true
    sheet_filename?: true
    sheet_data?: true
  }

  export type SheetsCountAggregateInputType = {
    sheet_id?: true
    sheet_author_id?: true
    sheet_title?: true
    sheet_subject?: true
    sheet_filename?: true
    sheet_data?: true
    _all?: true
  }

  export type SheetsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sheets to aggregate.
     */
    where?: sheetsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sheets to fetch.
     */
    orderBy?: sheetsOrderByWithRelationInput | sheetsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sheetsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sheets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sheets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sheets
    **/
    _count?: true | SheetsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SheetsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SheetsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SheetsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SheetsMaxAggregateInputType
  }

  export type GetSheetsAggregateType<T extends SheetsAggregateArgs> = {
        [P in keyof T & keyof AggregateSheets]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSheets[P]>
      : GetScalarType<T[P], AggregateSheets[P]>
  }




  export type sheetsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sheetsWhereInput
    orderBy?: sheetsOrderByWithAggregationInput | sheetsOrderByWithAggregationInput[]
    by: SheetsScalarFieldEnum[] | SheetsScalarFieldEnum
    having?: sheetsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SheetsCountAggregateInputType | true
    _avg?: SheetsAvgAggregateInputType
    _sum?: SheetsSumAggregateInputType
    _min?: SheetsMinAggregateInputType
    _max?: SheetsMaxAggregateInputType
  }

  export type SheetsGroupByOutputType = {
    sheet_id: number
    sheet_author_id: number
    sheet_title: string
    sheet_subject: string
    sheet_filename: string | null
    sheet_data: Buffer
    _count: SheetsCountAggregateOutputType | null
    _avg: SheetsAvgAggregateOutputType | null
    _sum: SheetsSumAggregateOutputType | null
    _min: SheetsMinAggregateOutputType | null
    _max: SheetsMaxAggregateOutputType | null
  }

  type GetSheetsGroupByPayload<T extends sheetsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SheetsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SheetsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SheetsGroupByOutputType[P]>
            : GetScalarType<T[P], SheetsGroupByOutputType[P]>
        }
      >
    >


  export type sheetsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    sheet_id?: boolean
    sheet_author_id?: boolean
    sheet_title?: boolean
    sheet_subject?: boolean
    sheet_filename?: boolean
    sheet_data?: boolean
    collections_sheets?: boolean | sheets$collections_sheetsArgs<ExtArgs>
    entities_sheets?: boolean | sheets$entities_sheetsArgs<ExtArgs>
    individuals?: boolean | individualsDefaultArgs<ExtArgs>
    _count?: boolean | SheetsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sheets"]>

  export type sheetsSelectScalar = {
    sheet_id?: boolean
    sheet_author_id?: boolean
    sheet_title?: boolean
    sheet_subject?: boolean
    sheet_filename?: boolean
    sheet_data?: boolean
  }

  export type sheetsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    collections_sheets?: boolean | sheets$collections_sheetsArgs<ExtArgs>
    entities_sheets?: boolean | sheets$entities_sheetsArgs<ExtArgs>
    individuals?: boolean | individualsDefaultArgs<ExtArgs>
    _count?: boolean | SheetsCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $sheetsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sheets"
    objects: {
      collections_sheets: Prisma.$collections_sheetsPayload<ExtArgs>[]
      entities_sheets: Prisma.$entities_sheetsPayload<ExtArgs>[]
      individuals: Prisma.$individualsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      sheet_id: number
      sheet_author_id: number
      sheet_title: string
      sheet_subject: string
      sheet_filename: string | null
      sheet_data: Buffer
    }, ExtArgs["result"]["sheets"]>
    composites: {}
  }


  type sheetsGetPayload<S extends boolean | null | undefined | sheetsDefaultArgs> = $Result.GetResult<Prisma.$sheetsPayload, S>

  type sheetsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<sheetsFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: SheetsCountAggregateInputType | true
    }

  export interface sheetsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sheets'], meta: { name: 'sheets' } }
    /**
     * Find zero or one Sheets that matches the filter.
     * @param {sheetsFindUniqueArgs} args - Arguments to find a Sheets
     * @example
     * // Get one Sheets
     * const sheets = await prisma.sheets.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends sheetsFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, sheetsFindUniqueArgs<ExtArgs>>
    ): Prisma__sheetsClient<$Result.GetResult<Prisma.$sheetsPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Sheets that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {sheetsFindUniqueOrThrowArgs} args - Arguments to find a Sheets
     * @example
     * // Get one Sheets
     * const sheets = await prisma.sheets.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends sheetsFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, sheetsFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__sheetsClient<$Result.GetResult<Prisma.$sheetsPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Sheets that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sheetsFindFirstArgs} args - Arguments to find a Sheets
     * @example
     * // Get one Sheets
     * const sheets = await prisma.sheets.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends sheetsFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, sheetsFindFirstArgs<ExtArgs>>
    ): Prisma__sheetsClient<$Result.GetResult<Prisma.$sheetsPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Sheets that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sheetsFindFirstOrThrowArgs} args - Arguments to find a Sheets
     * @example
     * // Get one Sheets
     * const sheets = await prisma.sheets.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends sheetsFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, sheetsFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__sheetsClient<$Result.GetResult<Prisma.$sheetsPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Sheets that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sheetsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sheets
     * const sheets = await prisma.sheets.findMany()
     * 
     * // Get first 10 Sheets
     * const sheets = await prisma.sheets.findMany({ take: 10 })
     * 
     * // Only select the `sheet_id`
     * const sheetsWithSheet_idOnly = await prisma.sheets.findMany({ select: { sheet_id: true } })
     * 
    **/
    findMany<T extends sheetsFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, sheetsFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sheetsPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Sheets.
     * @param {sheetsCreateArgs} args - Arguments to create a Sheets.
     * @example
     * // Create one Sheets
     * const Sheets = await prisma.sheets.create({
     *   data: {
     *     // ... data to create a Sheets
     *   }
     * })
     * 
    **/
    create<T extends sheetsCreateArgs<ExtArgs>>(
      args: SelectSubset<T, sheetsCreateArgs<ExtArgs>>
    ): Prisma__sheetsClient<$Result.GetResult<Prisma.$sheetsPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Sheets.
     *     @param {sheetsCreateManyArgs} args - Arguments to create many Sheets.
     *     @example
     *     // Create many Sheets
     *     const sheets = await prisma.sheets.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends sheetsCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, sheetsCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sheets.
     * @param {sheetsDeleteArgs} args - Arguments to delete one Sheets.
     * @example
     * // Delete one Sheets
     * const Sheets = await prisma.sheets.delete({
     *   where: {
     *     // ... filter to delete one Sheets
     *   }
     * })
     * 
    **/
    delete<T extends sheetsDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, sheetsDeleteArgs<ExtArgs>>
    ): Prisma__sheetsClient<$Result.GetResult<Prisma.$sheetsPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Sheets.
     * @param {sheetsUpdateArgs} args - Arguments to update one Sheets.
     * @example
     * // Update one Sheets
     * const sheets = await prisma.sheets.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends sheetsUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, sheetsUpdateArgs<ExtArgs>>
    ): Prisma__sheetsClient<$Result.GetResult<Prisma.$sheetsPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Sheets.
     * @param {sheetsDeleteManyArgs} args - Arguments to filter Sheets to delete.
     * @example
     * // Delete a few Sheets
     * const { count } = await prisma.sheets.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends sheetsDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, sheetsDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sheets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sheetsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sheets
     * const sheets = await prisma.sheets.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends sheetsUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, sheetsUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sheets.
     * @param {sheetsUpsertArgs} args - Arguments to update or create a Sheets.
     * @example
     * // Update or create a Sheets
     * const sheets = await prisma.sheets.upsert({
     *   create: {
     *     // ... data to create a Sheets
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sheets we want to update
     *   }
     * })
    **/
    upsert<T extends sheetsUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, sheetsUpsertArgs<ExtArgs>>
    ): Prisma__sheetsClient<$Result.GetResult<Prisma.$sheetsPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Sheets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sheetsCountArgs} args - Arguments to filter Sheets to count.
     * @example
     * // Count the number of Sheets
     * const count = await prisma.sheets.count({
     *   where: {
     *     // ... the filter for the Sheets we want to count
     *   }
     * })
    **/
    count<T extends sheetsCountArgs>(
      args?: Subset<T, sheetsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SheetsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sheets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SheetsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SheetsAggregateArgs>(args: Subset<T, SheetsAggregateArgs>): Prisma.PrismaPromise<GetSheetsAggregateType<T>>

    /**
     * Group by Sheets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sheetsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sheetsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sheetsGroupByArgs['orderBy'] }
        : { orderBy?: sheetsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sheetsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSheetsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sheets model
   */
  readonly fields: sheetsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sheets.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sheetsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    collections_sheets<T extends sheets$collections_sheetsArgs<ExtArgs> = {}>(args?: Subset<T, sheets$collections_sheetsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$collections_sheetsPayload<ExtArgs>, T, 'findMany'> | Null>;

    entities_sheets<T extends sheets$entities_sheetsArgs<ExtArgs> = {}>(args?: Subset<T, sheets$entities_sheetsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$entities_sheetsPayload<ExtArgs>, T, 'findMany'> | Null>;

    individuals<T extends individualsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, individualsDefaultArgs<ExtArgs>>): Prisma__individualsClient<$Result.GetResult<Prisma.$individualsPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the sheets model
   */ 
  interface sheetsFieldRefs {
    readonly sheet_id: FieldRef<"sheets", 'Int'>
    readonly sheet_author_id: FieldRef<"sheets", 'Int'>
    readonly sheet_title: FieldRef<"sheets", 'String'>
    readonly sheet_subject: FieldRef<"sheets", 'String'>
    readonly sheet_filename: FieldRef<"sheets", 'String'>
    readonly sheet_data: FieldRef<"sheets", 'Bytes'>
  }
    

  // Custom InputTypes

  /**
   * sheets findUnique
   */
  export type sheetsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sheets
     */
    select?: sheetsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sheetsInclude<ExtArgs> | null
    /**
     * Filter, which sheets to fetch.
     */
    where: sheetsWhereUniqueInput
  }


  /**
   * sheets findUniqueOrThrow
   */
  export type sheetsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sheets
     */
    select?: sheetsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sheetsInclude<ExtArgs> | null
    /**
     * Filter, which sheets to fetch.
     */
    where: sheetsWhereUniqueInput
  }


  /**
   * sheets findFirst
   */
  export type sheetsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sheets
     */
    select?: sheetsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sheetsInclude<ExtArgs> | null
    /**
     * Filter, which sheets to fetch.
     */
    where?: sheetsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sheets to fetch.
     */
    orderBy?: sheetsOrderByWithRelationInput | sheetsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sheets.
     */
    cursor?: sheetsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sheets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sheets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sheets.
     */
    distinct?: SheetsScalarFieldEnum | SheetsScalarFieldEnum[]
  }


  /**
   * sheets findFirstOrThrow
   */
  export type sheetsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sheets
     */
    select?: sheetsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sheetsInclude<ExtArgs> | null
    /**
     * Filter, which sheets to fetch.
     */
    where?: sheetsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sheets to fetch.
     */
    orderBy?: sheetsOrderByWithRelationInput | sheetsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sheets.
     */
    cursor?: sheetsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sheets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sheets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sheets.
     */
    distinct?: SheetsScalarFieldEnum | SheetsScalarFieldEnum[]
  }


  /**
   * sheets findMany
   */
  export type sheetsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sheets
     */
    select?: sheetsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sheetsInclude<ExtArgs> | null
    /**
     * Filter, which sheets to fetch.
     */
    where?: sheetsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sheets to fetch.
     */
    orderBy?: sheetsOrderByWithRelationInput | sheetsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sheets.
     */
    cursor?: sheetsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sheets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sheets.
     */
    skip?: number
    distinct?: SheetsScalarFieldEnum | SheetsScalarFieldEnum[]
  }


  /**
   * sheets create
   */
  export type sheetsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sheets
     */
    select?: sheetsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sheetsInclude<ExtArgs> | null
    /**
     * The data needed to create a sheets.
     */
    data: XOR<sheetsCreateInput, sheetsUncheckedCreateInput>
  }


  /**
   * sheets createMany
   */
  export type sheetsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sheets.
     */
    data: sheetsCreateManyInput | sheetsCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * sheets update
   */
  export type sheetsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sheets
     */
    select?: sheetsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sheetsInclude<ExtArgs> | null
    /**
     * The data needed to update a sheets.
     */
    data: XOR<sheetsUpdateInput, sheetsUncheckedUpdateInput>
    /**
     * Choose, which sheets to update.
     */
    where: sheetsWhereUniqueInput
  }


  /**
   * sheets updateMany
   */
  export type sheetsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sheets.
     */
    data: XOR<sheetsUpdateManyMutationInput, sheetsUncheckedUpdateManyInput>
    /**
     * Filter which sheets to update
     */
    where?: sheetsWhereInput
  }


  /**
   * sheets upsert
   */
  export type sheetsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sheets
     */
    select?: sheetsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sheetsInclude<ExtArgs> | null
    /**
     * The filter to search for the sheets to update in case it exists.
     */
    where: sheetsWhereUniqueInput
    /**
     * In case the sheets found by the `where` argument doesn't exist, create a new sheets with this data.
     */
    create: XOR<sheetsCreateInput, sheetsUncheckedCreateInput>
    /**
     * In case the sheets was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sheetsUpdateInput, sheetsUncheckedUpdateInput>
  }


  /**
   * sheets delete
   */
  export type sheetsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sheets
     */
    select?: sheetsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sheetsInclude<ExtArgs> | null
    /**
     * Filter which sheets to delete.
     */
    where: sheetsWhereUniqueInput
  }


  /**
   * sheets deleteMany
   */
  export type sheetsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sheets to delete
     */
    where?: sheetsWhereInput
  }


  /**
   * sheets.collections_sheets
   */
  export type sheets$collections_sheetsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collections_sheets
     */
    select?: collections_sheetsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: collections_sheetsInclude<ExtArgs> | null
    where?: collections_sheetsWhereInput
    orderBy?: collections_sheetsOrderByWithRelationInput | collections_sheetsOrderByWithRelationInput[]
    cursor?: collections_sheetsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Collections_sheetsScalarFieldEnum | Collections_sheetsScalarFieldEnum[]
  }


  /**
   * sheets.entities_sheets
   */
  export type sheets$entities_sheetsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entities_sheets
     */
    select?: entities_sheetsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: entities_sheetsInclude<ExtArgs> | null
    where?: entities_sheetsWhereInput
    orderBy?: entities_sheetsOrderByWithRelationInput | entities_sheetsOrderByWithRelationInput[]
    cursor?: entities_sheetsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Entities_sheetsScalarFieldEnum | Entities_sheetsScalarFieldEnum[]
  }


  /**
   * sheets without action
   */
  export type sheetsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sheets
     */
    select?: sheetsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sheetsInclude<ExtArgs> | null
  }



  /**
   * Model user_credentials
   */

  export type AggregateUser_credentials = {
    _count: User_credentialsCountAggregateOutputType | null
    _avg: User_credentialsAvgAggregateOutputType | null
    _sum: User_credentialsSumAggregateOutputType | null
    _min: User_credentialsMinAggregateOutputType | null
    _max: User_credentialsMaxAggregateOutputType | null
  }

  export type User_credentialsAvgAggregateOutputType = {
    user_id: number | null
  }

  export type User_credentialsSumAggregateOutputType = {
    user_id: number | null
  }

  export type User_credentialsMinAggregateOutputType = {
    user_id: number | null
    username: string | null
    user_password: string | null
    user_first_name: string | null
    user_last_name: string | null
    user_email: string | null
    user_phone_number: string | null
  }

  export type User_credentialsMaxAggregateOutputType = {
    user_id: number | null
    username: string | null
    user_password: string | null
    user_first_name: string | null
    user_last_name: string | null
    user_email: string | null
    user_phone_number: string | null
  }

  export type User_credentialsCountAggregateOutputType = {
    user_id: number
    username: number
    user_password: number
    user_first_name: number
    user_last_name: number
    user_email: number
    user_phone_number: number
    _all: number
  }


  export type User_credentialsAvgAggregateInputType = {
    user_id?: true
  }

  export type User_credentialsSumAggregateInputType = {
    user_id?: true
  }

  export type User_credentialsMinAggregateInputType = {
    user_id?: true
    username?: true
    user_password?: true
    user_first_name?: true
    user_last_name?: true
    user_email?: true
    user_phone_number?: true
  }

  export type User_credentialsMaxAggregateInputType = {
    user_id?: true
    username?: true
    user_password?: true
    user_first_name?: true
    user_last_name?: true
    user_email?: true
    user_phone_number?: true
  }

  export type User_credentialsCountAggregateInputType = {
    user_id?: true
    username?: true
    user_password?: true
    user_first_name?: true
    user_last_name?: true
    user_email?: true
    user_phone_number?: true
    _all?: true
  }

  export type User_credentialsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_credentials to aggregate.
     */
    where?: user_credentialsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_credentials to fetch.
     */
    orderBy?: user_credentialsOrderByWithRelationInput | user_credentialsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: user_credentialsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_credentials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_credentials.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned user_credentials
    **/
    _count?: true | User_credentialsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: User_credentialsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: User_credentialsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: User_credentialsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: User_credentialsMaxAggregateInputType
  }

  export type GetUser_credentialsAggregateType<T extends User_credentialsAggregateArgs> = {
        [P in keyof T & keyof AggregateUser_credentials]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser_credentials[P]>
      : GetScalarType<T[P], AggregateUser_credentials[P]>
  }




  export type user_credentialsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_credentialsWhereInput
    orderBy?: user_credentialsOrderByWithAggregationInput | user_credentialsOrderByWithAggregationInput[]
    by: User_credentialsScalarFieldEnum[] | User_credentialsScalarFieldEnum
    having?: user_credentialsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: User_credentialsCountAggregateInputType | true
    _avg?: User_credentialsAvgAggregateInputType
    _sum?: User_credentialsSumAggregateInputType
    _min?: User_credentialsMinAggregateInputType
    _max?: User_credentialsMaxAggregateInputType
  }

  export type User_credentialsGroupByOutputType = {
    user_id: number
    username: string
    user_password: string
    user_first_name: string | null
    user_last_name: string | null
    user_email: string | null
    user_phone_number: string | null
    _count: User_credentialsCountAggregateOutputType | null
    _avg: User_credentialsAvgAggregateOutputType | null
    _sum: User_credentialsSumAggregateOutputType | null
    _min: User_credentialsMinAggregateOutputType | null
    _max: User_credentialsMaxAggregateOutputType | null
  }

  type GetUser_credentialsGroupByPayload<T extends user_credentialsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<User_credentialsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof User_credentialsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], User_credentialsGroupByOutputType[P]>
            : GetScalarType<T[P], User_credentialsGroupByOutputType[P]>
        }
      >
    >


  export type user_credentialsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    user_id?: boolean
    username?: boolean
    user_password?: boolean
    user_first_name?: boolean
    user_last_name?: boolean
    user_email?: boolean
    user_phone_number?: boolean
  }, ExtArgs["result"]["user_credentials"]>

  export type user_credentialsSelectScalar = {
    user_id?: boolean
    username?: boolean
    user_password?: boolean
    user_first_name?: boolean
    user_last_name?: boolean
    user_email?: boolean
    user_phone_number?: boolean
  }


  export type $user_credentialsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "user_credentials"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      user_id: number
      username: string
      user_password: string
      user_first_name: string | null
      user_last_name: string | null
      user_email: string | null
      user_phone_number: string | null
    }, ExtArgs["result"]["user_credentials"]>
    composites: {}
  }


  type user_credentialsGetPayload<S extends boolean | null | undefined | user_credentialsDefaultArgs> = $Result.GetResult<Prisma.$user_credentialsPayload, S>

  type user_credentialsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<user_credentialsFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: User_credentialsCountAggregateInputType | true
    }

  export interface user_credentialsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['user_credentials'], meta: { name: 'user_credentials' } }
    /**
     * Find zero or one User_credentials that matches the filter.
     * @param {user_credentialsFindUniqueArgs} args - Arguments to find a User_credentials
     * @example
     * // Get one User_credentials
     * const user_credentials = await prisma.user_credentials.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends user_credentialsFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, user_credentialsFindUniqueArgs<ExtArgs>>
    ): Prisma__user_credentialsClient<$Result.GetResult<Prisma.$user_credentialsPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one User_credentials that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {user_credentialsFindUniqueOrThrowArgs} args - Arguments to find a User_credentials
     * @example
     * // Get one User_credentials
     * const user_credentials = await prisma.user_credentials.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends user_credentialsFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, user_credentialsFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__user_credentialsClient<$Result.GetResult<Prisma.$user_credentialsPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first User_credentials that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_credentialsFindFirstArgs} args - Arguments to find a User_credentials
     * @example
     * // Get one User_credentials
     * const user_credentials = await prisma.user_credentials.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends user_credentialsFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, user_credentialsFindFirstArgs<ExtArgs>>
    ): Prisma__user_credentialsClient<$Result.GetResult<Prisma.$user_credentialsPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first User_credentials that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_credentialsFindFirstOrThrowArgs} args - Arguments to find a User_credentials
     * @example
     * // Get one User_credentials
     * const user_credentials = await prisma.user_credentials.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends user_credentialsFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, user_credentialsFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__user_credentialsClient<$Result.GetResult<Prisma.$user_credentialsPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more User_credentials that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_credentialsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all User_credentials
     * const user_credentials = await prisma.user_credentials.findMany()
     * 
     * // Get first 10 User_credentials
     * const user_credentials = await prisma.user_credentials.findMany({ take: 10 })
     * 
     * // Only select the `user_id`
     * const user_credentialsWithUser_idOnly = await prisma.user_credentials.findMany({ select: { user_id: true } })
     * 
    **/
    findMany<T extends user_credentialsFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, user_credentialsFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_credentialsPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a User_credentials.
     * @param {user_credentialsCreateArgs} args - Arguments to create a User_credentials.
     * @example
     * // Create one User_credentials
     * const User_credentials = await prisma.user_credentials.create({
     *   data: {
     *     // ... data to create a User_credentials
     *   }
     * })
     * 
    **/
    create<T extends user_credentialsCreateArgs<ExtArgs>>(
      args: SelectSubset<T, user_credentialsCreateArgs<ExtArgs>>
    ): Prisma__user_credentialsClient<$Result.GetResult<Prisma.$user_credentialsPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many User_credentials.
     *     @param {user_credentialsCreateManyArgs} args - Arguments to create many User_credentials.
     *     @example
     *     // Create many User_credentials
     *     const user_credentials = await prisma.user_credentials.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends user_credentialsCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, user_credentialsCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a User_credentials.
     * @param {user_credentialsDeleteArgs} args - Arguments to delete one User_credentials.
     * @example
     * // Delete one User_credentials
     * const User_credentials = await prisma.user_credentials.delete({
     *   where: {
     *     // ... filter to delete one User_credentials
     *   }
     * })
     * 
    **/
    delete<T extends user_credentialsDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, user_credentialsDeleteArgs<ExtArgs>>
    ): Prisma__user_credentialsClient<$Result.GetResult<Prisma.$user_credentialsPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one User_credentials.
     * @param {user_credentialsUpdateArgs} args - Arguments to update one User_credentials.
     * @example
     * // Update one User_credentials
     * const user_credentials = await prisma.user_credentials.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends user_credentialsUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, user_credentialsUpdateArgs<ExtArgs>>
    ): Prisma__user_credentialsClient<$Result.GetResult<Prisma.$user_credentialsPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more User_credentials.
     * @param {user_credentialsDeleteManyArgs} args - Arguments to filter User_credentials to delete.
     * @example
     * // Delete a few User_credentials
     * const { count } = await prisma.user_credentials.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends user_credentialsDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, user_credentialsDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_credentials.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_credentialsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many User_credentials
     * const user_credentials = await prisma.user_credentials.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends user_credentialsUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, user_credentialsUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one User_credentials.
     * @param {user_credentialsUpsertArgs} args - Arguments to update or create a User_credentials.
     * @example
     * // Update or create a User_credentials
     * const user_credentials = await prisma.user_credentials.upsert({
     *   create: {
     *     // ... data to create a User_credentials
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User_credentials we want to update
     *   }
     * })
    **/
    upsert<T extends user_credentialsUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, user_credentialsUpsertArgs<ExtArgs>>
    ): Prisma__user_credentialsClient<$Result.GetResult<Prisma.$user_credentialsPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of User_credentials.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_credentialsCountArgs} args - Arguments to filter User_credentials to count.
     * @example
     * // Count the number of User_credentials
     * const count = await prisma.user_credentials.count({
     *   where: {
     *     // ... the filter for the User_credentials we want to count
     *   }
     * })
    **/
    count<T extends user_credentialsCountArgs>(
      args?: Subset<T, user_credentialsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], User_credentialsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User_credentials.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_credentialsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends User_credentialsAggregateArgs>(args: Subset<T, User_credentialsAggregateArgs>): Prisma.PrismaPromise<GetUser_credentialsAggregateType<T>>

    /**
     * Group by User_credentials.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_credentialsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends user_credentialsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: user_credentialsGroupByArgs['orderBy'] }
        : { orderBy?: user_credentialsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, user_credentialsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUser_credentialsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the user_credentials model
   */
  readonly fields: user_credentialsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for user_credentials.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__user_credentialsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';


    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the user_credentials model
   */ 
  interface user_credentialsFieldRefs {
    readonly user_id: FieldRef<"user_credentials", 'Int'>
    readonly username: FieldRef<"user_credentials", 'String'>
    readonly user_password: FieldRef<"user_credentials", 'String'>
    readonly user_first_name: FieldRef<"user_credentials", 'String'>
    readonly user_last_name: FieldRef<"user_credentials", 'String'>
    readonly user_email: FieldRef<"user_credentials", 'String'>
    readonly user_phone_number: FieldRef<"user_credentials", 'String'>
  }
    

  // Custom InputTypes

  /**
   * user_credentials findUnique
   */
  export type user_credentialsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_credentials
     */
    select?: user_credentialsSelect<ExtArgs> | null
    /**
     * Filter, which user_credentials to fetch.
     */
    where: user_credentialsWhereUniqueInput
  }


  /**
   * user_credentials findUniqueOrThrow
   */
  export type user_credentialsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_credentials
     */
    select?: user_credentialsSelect<ExtArgs> | null
    /**
     * Filter, which user_credentials to fetch.
     */
    where: user_credentialsWhereUniqueInput
  }


  /**
   * user_credentials findFirst
   */
  export type user_credentialsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_credentials
     */
    select?: user_credentialsSelect<ExtArgs> | null
    /**
     * Filter, which user_credentials to fetch.
     */
    where?: user_credentialsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_credentials to fetch.
     */
    orderBy?: user_credentialsOrderByWithRelationInput | user_credentialsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_credentials.
     */
    cursor?: user_credentialsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_credentials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_credentials.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_credentials.
     */
    distinct?: User_credentialsScalarFieldEnum | User_credentialsScalarFieldEnum[]
  }


  /**
   * user_credentials findFirstOrThrow
   */
  export type user_credentialsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_credentials
     */
    select?: user_credentialsSelect<ExtArgs> | null
    /**
     * Filter, which user_credentials to fetch.
     */
    where?: user_credentialsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_credentials to fetch.
     */
    orderBy?: user_credentialsOrderByWithRelationInput | user_credentialsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_credentials.
     */
    cursor?: user_credentialsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_credentials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_credentials.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_credentials.
     */
    distinct?: User_credentialsScalarFieldEnum | User_credentialsScalarFieldEnum[]
  }


  /**
   * user_credentials findMany
   */
  export type user_credentialsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_credentials
     */
    select?: user_credentialsSelect<ExtArgs> | null
    /**
     * Filter, which user_credentials to fetch.
     */
    where?: user_credentialsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_credentials to fetch.
     */
    orderBy?: user_credentialsOrderByWithRelationInput | user_credentialsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing user_credentials.
     */
    cursor?: user_credentialsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_credentials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_credentials.
     */
    skip?: number
    distinct?: User_credentialsScalarFieldEnum | User_credentialsScalarFieldEnum[]
  }


  /**
   * user_credentials create
   */
  export type user_credentialsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_credentials
     */
    select?: user_credentialsSelect<ExtArgs> | null
    /**
     * The data needed to create a user_credentials.
     */
    data: XOR<user_credentialsCreateInput, user_credentialsUncheckedCreateInput>
  }


  /**
   * user_credentials createMany
   */
  export type user_credentialsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many user_credentials.
     */
    data: user_credentialsCreateManyInput | user_credentialsCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * user_credentials update
   */
  export type user_credentialsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_credentials
     */
    select?: user_credentialsSelect<ExtArgs> | null
    /**
     * The data needed to update a user_credentials.
     */
    data: XOR<user_credentialsUpdateInput, user_credentialsUncheckedUpdateInput>
    /**
     * Choose, which user_credentials to update.
     */
    where: user_credentialsWhereUniqueInput
  }


  /**
   * user_credentials updateMany
   */
  export type user_credentialsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update user_credentials.
     */
    data: XOR<user_credentialsUpdateManyMutationInput, user_credentialsUncheckedUpdateManyInput>
    /**
     * Filter which user_credentials to update
     */
    where?: user_credentialsWhereInput
  }


  /**
   * user_credentials upsert
   */
  export type user_credentialsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_credentials
     */
    select?: user_credentialsSelect<ExtArgs> | null
    /**
     * The filter to search for the user_credentials to update in case it exists.
     */
    where: user_credentialsWhereUniqueInput
    /**
     * In case the user_credentials found by the `where` argument doesn't exist, create a new user_credentials with this data.
     */
    create: XOR<user_credentialsCreateInput, user_credentialsUncheckedCreateInput>
    /**
     * In case the user_credentials was found with the provided `where` argument, update it with this data.
     */
    update: XOR<user_credentialsUpdateInput, user_credentialsUncheckedUpdateInput>
  }


  /**
   * user_credentials delete
   */
  export type user_credentialsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_credentials
     */
    select?: user_credentialsSelect<ExtArgs> | null
    /**
     * Filter which user_credentials to delete.
     */
    where: user_credentialsWhereUniqueInput
  }


  /**
   * user_credentials deleteMany
   */
  export type user_credentialsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_credentials to delete
     */
    where?: user_credentialsWhereInput
  }


  /**
   * user_credentials without action
   */
  export type user_credentialsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_credentials
     */
    select?: user_credentialsSelect<ExtArgs> | null
  }



  /**
   * Model videos
   */

  export type AggregateVideos = {
    _count: VideosCountAggregateOutputType | null
    _avg: VideosAvgAggregateOutputType | null
    _sum: VideosSumAggregateOutputType | null
    _min: VideosMinAggregateOutputType | null
    _max: VideosMaxAggregateOutputType | null
  }

  export type VideosAvgAggregateOutputType = {
    video_id: number | null
    video_creator_id: number | null
    video_data_id: number | null
  }

  export type VideosSumAggregateOutputType = {
    video_id: number | null
    video_creator_id: number | null
    video_data_id: number | null
  }

  export type VideosMinAggregateOutputType = {
    video_id: number | null
    video_creator_id: number | null
    video_title: string | null
    video_description: string | null
    video_filename: string | null
    video_data_id: number | null
  }

  export type VideosMaxAggregateOutputType = {
    video_id: number | null
    video_creator_id: number | null
    video_title: string | null
    video_description: string | null
    video_filename: string | null
    video_data_id: number | null
  }

  export type VideosCountAggregateOutputType = {
    video_id: number
    video_creator_id: number
    video_title: number
    video_description: number
    video_filename: number
    video_data_id: number
    _all: number
  }


  export type VideosAvgAggregateInputType = {
    video_id?: true
    video_creator_id?: true
    video_data_id?: true
  }

  export type VideosSumAggregateInputType = {
    video_id?: true
    video_creator_id?: true
    video_data_id?: true
  }

  export type VideosMinAggregateInputType = {
    video_id?: true
    video_creator_id?: true
    video_title?: true
    video_description?: true
    video_filename?: true
    video_data_id?: true
  }

  export type VideosMaxAggregateInputType = {
    video_id?: true
    video_creator_id?: true
    video_title?: true
    video_description?: true
    video_filename?: true
    video_data_id?: true
  }

  export type VideosCountAggregateInputType = {
    video_id?: true
    video_creator_id?: true
    video_title?: true
    video_description?: true
    video_filename?: true
    video_data_id?: true
    _all?: true
  }

  export type VideosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which videos to aggregate.
     */
    where?: videosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of videos to fetch.
     */
    orderBy?: videosOrderByWithRelationInput | videosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: videosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` videos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` videos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned videos
    **/
    _count?: true | VideosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: VideosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: VideosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: VideosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: VideosMaxAggregateInputType
  }

  export type GetVideosAggregateType<T extends VideosAggregateArgs> = {
        [P in keyof T & keyof AggregateVideos]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateVideos[P]>
      : GetScalarType<T[P], AggregateVideos[P]>
  }




  export type videosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: videosWhereInput
    orderBy?: videosOrderByWithAggregationInput | videosOrderByWithAggregationInput[]
    by: VideosScalarFieldEnum[] | VideosScalarFieldEnum
    having?: videosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: VideosCountAggregateInputType | true
    _avg?: VideosAvgAggregateInputType
    _sum?: VideosSumAggregateInputType
    _min?: VideosMinAggregateInputType
    _max?: VideosMaxAggregateInputType
  }

  export type VideosGroupByOutputType = {
    video_id: number
    video_creator_id: number
    video_title: string
    video_description: string
    video_filename: string
    video_data_id: number
    _count: VideosCountAggregateOutputType | null
    _avg: VideosAvgAggregateOutputType | null
    _sum: VideosSumAggregateOutputType | null
    _min: VideosMinAggregateOutputType | null
    _max: VideosMaxAggregateOutputType | null
  }

  type GetVideosGroupByPayload<T extends videosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<VideosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof VideosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], VideosGroupByOutputType[P]>
            : GetScalarType<T[P], VideosGroupByOutputType[P]>
        }
      >
    >


  export type videosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    video_id?: boolean
    video_creator_id?: boolean
    video_title?: boolean
    video_description?: boolean
    video_filename?: boolean
    video_data_id?: boolean
    collections_videos?: boolean | videos$collections_videosArgs<ExtArgs>
    entities_videos?: boolean | videos$entities_videosArgs<ExtArgs>
    individuals?: boolean | individualsDefaultArgs<ExtArgs>
    videos_data?: boolean | videos_dataDefaultArgs<ExtArgs>
    _count?: boolean | VideosCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["videos"]>

  export type videosSelectScalar = {
    video_id?: boolean
    video_creator_id?: boolean
    video_title?: boolean
    video_description?: boolean
    video_filename?: boolean
    video_data_id?: boolean
  }

  export type videosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    collections_videos?: boolean | videos$collections_videosArgs<ExtArgs>
    entities_videos?: boolean | videos$entities_videosArgs<ExtArgs>
    individuals?: boolean | individualsDefaultArgs<ExtArgs>
    videos_data?: boolean | videos_dataDefaultArgs<ExtArgs>
    _count?: boolean | VideosCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $videosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "videos"
    objects: {
      collections_videos: Prisma.$collections_videosPayload<ExtArgs>[]
      entities_videos: Prisma.$entities_videosPayload<ExtArgs>[]
      individuals: Prisma.$individualsPayload<ExtArgs>
      videos_data: Prisma.$videos_dataPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      video_id: number
      video_creator_id: number
      video_title: string
      video_description: string
      video_filename: string
      video_data_id: number
    }, ExtArgs["result"]["videos"]>
    composites: {}
  }


  type videosGetPayload<S extends boolean | null | undefined | videosDefaultArgs> = $Result.GetResult<Prisma.$videosPayload, S>

  type videosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<videosFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: VideosCountAggregateInputType | true
    }

  export interface videosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['videos'], meta: { name: 'videos' } }
    /**
     * Find zero or one Videos that matches the filter.
     * @param {videosFindUniqueArgs} args - Arguments to find a Videos
     * @example
     * // Get one Videos
     * const videos = await prisma.videos.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends videosFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, videosFindUniqueArgs<ExtArgs>>
    ): Prisma__videosClient<$Result.GetResult<Prisma.$videosPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Videos that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {videosFindUniqueOrThrowArgs} args - Arguments to find a Videos
     * @example
     * // Get one Videos
     * const videos = await prisma.videos.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends videosFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, videosFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__videosClient<$Result.GetResult<Prisma.$videosPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Videos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {videosFindFirstArgs} args - Arguments to find a Videos
     * @example
     * // Get one Videos
     * const videos = await prisma.videos.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends videosFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, videosFindFirstArgs<ExtArgs>>
    ): Prisma__videosClient<$Result.GetResult<Prisma.$videosPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Videos that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {videosFindFirstOrThrowArgs} args - Arguments to find a Videos
     * @example
     * // Get one Videos
     * const videos = await prisma.videos.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends videosFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, videosFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__videosClient<$Result.GetResult<Prisma.$videosPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Videos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {videosFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Videos
     * const videos = await prisma.videos.findMany()
     * 
     * // Get first 10 Videos
     * const videos = await prisma.videos.findMany({ take: 10 })
     * 
     * // Only select the `video_id`
     * const videosWithVideo_idOnly = await prisma.videos.findMany({ select: { video_id: true } })
     * 
    **/
    findMany<T extends videosFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, videosFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$videosPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Videos.
     * @param {videosCreateArgs} args - Arguments to create a Videos.
     * @example
     * // Create one Videos
     * const Videos = await prisma.videos.create({
     *   data: {
     *     // ... data to create a Videos
     *   }
     * })
     * 
    **/
    create<T extends videosCreateArgs<ExtArgs>>(
      args: SelectSubset<T, videosCreateArgs<ExtArgs>>
    ): Prisma__videosClient<$Result.GetResult<Prisma.$videosPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Videos.
     *     @param {videosCreateManyArgs} args - Arguments to create many Videos.
     *     @example
     *     // Create many Videos
     *     const videos = await prisma.videos.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends videosCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, videosCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Videos.
     * @param {videosDeleteArgs} args - Arguments to delete one Videos.
     * @example
     * // Delete one Videos
     * const Videos = await prisma.videos.delete({
     *   where: {
     *     // ... filter to delete one Videos
     *   }
     * })
     * 
    **/
    delete<T extends videosDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, videosDeleteArgs<ExtArgs>>
    ): Prisma__videosClient<$Result.GetResult<Prisma.$videosPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Videos.
     * @param {videosUpdateArgs} args - Arguments to update one Videos.
     * @example
     * // Update one Videos
     * const videos = await prisma.videos.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends videosUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, videosUpdateArgs<ExtArgs>>
    ): Prisma__videosClient<$Result.GetResult<Prisma.$videosPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Videos.
     * @param {videosDeleteManyArgs} args - Arguments to filter Videos to delete.
     * @example
     * // Delete a few Videos
     * const { count } = await prisma.videos.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends videosDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, videosDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Videos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {videosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Videos
     * const videos = await prisma.videos.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends videosUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, videosUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Videos.
     * @param {videosUpsertArgs} args - Arguments to update or create a Videos.
     * @example
     * // Update or create a Videos
     * const videos = await prisma.videos.upsert({
     *   create: {
     *     // ... data to create a Videos
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Videos we want to update
     *   }
     * })
    **/
    upsert<T extends videosUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, videosUpsertArgs<ExtArgs>>
    ): Prisma__videosClient<$Result.GetResult<Prisma.$videosPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Videos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {videosCountArgs} args - Arguments to filter Videos to count.
     * @example
     * // Count the number of Videos
     * const count = await prisma.videos.count({
     *   where: {
     *     // ... the filter for the Videos we want to count
     *   }
     * })
    **/
    count<T extends videosCountArgs>(
      args?: Subset<T, videosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], VideosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Videos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VideosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends VideosAggregateArgs>(args: Subset<T, VideosAggregateArgs>): Prisma.PrismaPromise<GetVideosAggregateType<T>>

    /**
     * Group by Videos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {videosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends videosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: videosGroupByArgs['orderBy'] }
        : { orderBy?: videosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, videosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVideosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the videos model
   */
  readonly fields: videosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for videos.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__videosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    collections_videos<T extends videos$collections_videosArgs<ExtArgs> = {}>(args?: Subset<T, videos$collections_videosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$collections_videosPayload<ExtArgs>, T, 'findMany'> | Null>;

    entities_videos<T extends videos$entities_videosArgs<ExtArgs> = {}>(args?: Subset<T, videos$entities_videosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$entities_videosPayload<ExtArgs>, T, 'findMany'> | Null>;

    individuals<T extends individualsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, individualsDefaultArgs<ExtArgs>>): Prisma__individualsClient<$Result.GetResult<Prisma.$individualsPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    videos_data<T extends videos_dataDefaultArgs<ExtArgs> = {}>(args?: Subset<T, videos_dataDefaultArgs<ExtArgs>>): Prisma__videos_dataClient<$Result.GetResult<Prisma.$videos_dataPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the videos model
   */ 
  interface videosFieldRefs {
    readonly video_id: FieldRef<"videos", 'Int'>
    readonly video_creator_id: FieldRef<"videos", 'Int'>
    readonly video_title: FieldRef<"videos", 'String'>
    readonly video_description: FieldRef<"videos", 'String'>
    readonly video_filename: FieldRef<"videos", 'String'>
    readonly video_data_id: FieldRef<"videos", 'Int'>
  }
    

  // Custom InputTypes

  /**
   * videos findUnique
   */
  export type videosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the videos
     */
    select?: videosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: videosInclude<ExtArgs> | null
    /**
     * Filter, which videos to fetch.
     */
    where: videosWhereUniqueInput
  }


  /**
   * videos findUniqueOrThrow
   */
  export type videosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the videos
     */
    select?: videosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: videosInclude<ExtArgs> | null
    /**
     * Filter, which videos to fetch.
     */
    where: videosWhereUniqueInput
  }


  /**
   * videos findFirst
   */
  export type videosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the videos
     */
    select?: videosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: videosInclude<ExtArgs> | null
    /**
     * Filter, which videos to fetch.
     */
    where?: videosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of videos to fetch.
     */
    orderBy?: videosOrderByWithRelationInput | videosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for videos.
     */
    cursor?: videosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` videos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` videos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of videos.
     */
    distinct?: VideosScalarFieldEnum | VideosScalarFieldEnum[]
  }


  /**
   * videos findFirstOrThrow
   */
  export type videosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the videos
     */
    select?: videosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: videosInclude<ExtArgs> | null
    /**
     * Filter, which videos to fetch.
     */
    where?: videosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of videos to fetch.
     */
    orderBy?: videosOrderByWithRelationInput | videosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for videos.
     */
    cursor?: videosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` videos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` videos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of videos.
     */
    distinct?: VideosScalarFieldEnum | VideosScalarFieldEnum[]
  }


  /**
   * videos findMany
   */
  export type videosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the videos
     */
    select?: videosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: videosInclude<ExtArgs> | null
    /**
     * Filter, which videos to fetch.
     */
    where?: videosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of videos to fetch.
     */
    orderBy?: videosOrderByWithRelationInput | videosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing videos.
     */
    cursor?: videosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` videos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` videos.
     */
    skip?: number
    distinct?: VideosScalarFieldEnum | VideosScalarFieldEnum[]
  }


  /**
   * videos create
   */
  export type videosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the videos
     */
    select?: videosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: videosInclude<ExtArgs> | null
    /**
     * The data needed to create a videos.
     */
    data: XOR<videosCreateInput, videosUncheckedCreateInput>
  }


  /**
   * videos createMany
   */
  export type videosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many videos.
     */
    data: videosCreateManyInput | videosCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * videos update
   */
  export type videosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the videos
     */
    select?: videosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: videosInclude<ExtArgs> | null
    /**
     * The data needed to update a videos.
     */
    data: XOR<videosUpdateInput, videosUncheckedUpdateInput>
    /**
     * Choose, which videos to update.
     */
    where: videosWhereUniqueInput
  }


  /**
   * videos updateMany
   */
  export type videosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update videos.
     */
    data: XOR<videosUpdateManyMutationInput, videosUncheckedUpdateManyInput>
    /**
     * Filter which videos to update
     */
    where?: videosWhereInput
  }


  /**
   * videos upsert
   */
  export type videosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the videos
     */
    select?: videosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: videosInclude<ExtArgs> | null
    /**
     * The filter to search for the videos to update in case it exists.
     */
    where: videosWhereUniqueInput
    /**
     * In case the videos found by the `where` argument doesn't exist, create a new videos with this data.
     */
    create: XOR<videosCreateInput, videosUncheckedCreateInput>
    /**
     * In case the videos was found with the provided `where` argument, update it with this data.
     */
    update: XOR<videosUpdateInput, videosUncheckedUpdateInput>
  }


  /**
   * videos delete
   */
  export type videosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the videos
     */
    select?: videosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: videosInclude<ExtArgs> | null
    /**
     * Filter which videos to delete.
     */
    where: videosWhereUniqueInput
  }


  /**
   * videos deleteMany
   */
  export type videosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which videos to delete
     */
    where?: videosWhereInput
  }


  /**
   * videos.collections_videos
   */
  export type videos$collections_videosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collections_videos
     */
    select?: collections_videosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: collections_videosInclude<ExtArgs> | null
    where?: collections_videosWhereInput
    orderBy?: collections_videosOrderByWithRelationInput | collections_videosOrderByWithRelationInput[]
    cursor?: collections_videosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Collections_videosScalarFieldEnum | Collections_videosScalarFieldEnum[]
  }


  /**
   * videos.entities_videos
   */
  export type videos$entities_videosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entities_videos
     */
    select?: entities_videosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: entities_videosInclude<ExtArgs> | null
    where?: entities_videosWhereInput
    orderBy?: entities_videosOrderByWithRelationInput | entities_videosOrderByWithRelationInput[]
    cursor?: entities_videosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Entities_videosScalarFieldEnum | Entities_videosScalarFieldEnum[]
  }


  /**
   * videos without action
   */
  export type videosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the videos
     */
    select?: videosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: videosInclude<ExtArgs> | null
  }



  /**
   * Model videos_data
   */

  export type AggregateVideos_data = {
    _count: Videos_dataCountAggregateOutputType | null
    _avg: Videos_dataAvgAggregateOutputType | null
    _sum: Videos_dataSumAggregateOutputType | null
    _min: Videos_dataMinAggregateOutputType | null
    _max: Videos_dataMaxAggregateOutputType | null
  }

  export type Videos_dataAvgAggregateOutputType = {
    video_data_id: number | null
  }

  export type Videos_dataSumAggregateOutputType = {
    video_data_id: number | null
  }

  export type Videos_dataMinAggregateOutputType = {
    video_data_id: number | null
    video_data: Buffer | null
  }

  export type Videos_dataMaxAggregateOutputType = {
    video_data_id: number | null
    video_data: Buffer | null
  }

  export type Videos_dataCountAggregateOutputType = {
    video_data_id: number
    video_data: number
    _all: number
  }


  export type Videos_dataAvgAggregateInputType = {
    video_data_id?: true
  }

  export type Videos_dataSumAggregateInputType = {
    video_data_id?: true
  }

  export type Videos_dataMinAggregateInputType = {
    video_data_id?: true
    video_data?: true
  }

  export type Videos_dataMaxAggregateInputType = {
    video_data_id?: true
    video_data?: true
  }

  export type Videos_dataCountAggregateInputType = {
    video_data_id?: true
    video_data?: true
    _all?: true
  }

  export type Videos_dataAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which videos_data to aggregate.
     */
    where?: videos_dataWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of videos_data to fetch.
     */
    orderBy?: videos_dataOrderByWithRelationInput | videos_dataOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: videos_dataWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` videos_data from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` videos_data.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned videos_data
    **/
    _count?: true | Videos_dataCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Videos_dataAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Videos_dataSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Videos_dataMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Videos_dataMaxAggregateInputType
  }

  export type GetVideos_dataAggregateType<T extends Videos_dataAggregateArgs> = {
        [P in keyof T & keyof AggregateVideos_data]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateVideos_data[P]>
      : GetScalarType<T[P], AggregateVideos_data[P]>
  }




  export type videos_dataGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: videos_dataWhereInput
    orderBy?: videos_dataOrderByWithAggregationInput | videos_dataOrderByWithAggregationInput[]
    by: Videos_dataScalarFieldEnum[] | Videos_dataScalarFieldEnum
    having?: videos_dataScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Videos_dataCountAggregateInputType | true
    _avg?: Videos_dataAvgAggregateInputType
    _sum?: Videos_dataSumAggregateInputType
    _min?: Videos_dataMinAggregateInputType
    _max?: Videos_dataMaxAggregateInputType
  }

  export type Videos_dataGroupByOutputType = {
    video_data_id: number
    video_data: Buffer
    _count: Videos_dataCountAggregateOutputType | null
    _avg: Videos_dataAvgAggregateOutputType | null
    _sum: Videos_dataSumAggregateOutputType | null
    _min: Videos_dataMinAggregateOutputType | null
    _max: Videos_dataMaxAggregateOutputType | null
  }

  type GetVideos_dataGroupByPayload<T extends videos_dataGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Videos_dataGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Videos_dataGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Videos_dataGroupByOutputType[P]>
            : GetScalarType<T[P], Videos_dataGroupByOutputType[P]>
        }
      >
    >


  export type videos_dataSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    video_data_id?: boolean
    video_data?: boolean
    videos?: boolean | videos_data$videosArgs<ExtArgs>
    _count?: boolean | Videos_dataCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["videos_data"]>

  export type videos_dataSelectScalar = {
    video_data_id?: boolean
    video_data?: boolean
  }

  export type videos_dataInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    videos?: boolean | videos_data$videosArgs<ExtArgs>
    _count?: boolean | Videos_dataCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $videos_dataPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "videos_data"
    objects: {
      videos: Prisma.$videosPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      video_data_id: number
      video_data: Buffer
    }, ExtArgs["result"]["videos_data"]>
    composites: {}
  }


  type videos_dataGetPayload<S extends boolean | null | undefined | videos_dataDefaultArgs> = $Result.GetResult<Prisma.$videos_dataPayload, S>

  type videos_dataCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<videos_dataFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Videos_dataCountAggregateInputType | true
    }

  export interface videos_dataDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['videos_data'], meta: { name: 'videos_data' } }
    /**
     * Find zero or one Videos_data that matches the filter.
     * @param {videos_dataFindUniqueArgs} args - Arguments to find a Videos_data
     * @example
     * // Get one Videos_data
     * const videos_data = await prisma.videos_data.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends videos_dataFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, videos_dataFindUniqueArgs<ExtArgs>>
    ): Prisma__videos_dataClient<$Result.GetResult<Prisma.$videos_dataPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Videos_data that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {videos_dataFindUniqueOrThrowArgs} args - Arguments to find a Videos_data
     * @example
     * // Get one Videos_data
     * const videos_data = await prisma.videos_data.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends videos_dataFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, videos_dataFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__videos_dataClient<$Result.GetResult<Prisma.$videos_dataPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Videos_data that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {videos_dataFindFirstArgs} args - Arguments to find a Videos_data
     * @example
     * // Get one Videos_data
     * const videos_data = await prisma.videos_data.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends videos_dataFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, videos_dataFindFirstArgs<ExtArgs>>
    ): Prisma__videos_dataClient<$Result.GetResult<Prisma.$videos_dataPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Videos_data that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {videos_dataFindFirstOrThrowArgs} args - Arguments to find a Videos_data
     * @example
     * // Get one Videos_data
     * const videos_data = await prisma.videos_data.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends videos_dataFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, videos_dataFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__videos_dataClient<$Result.GetResult<Prisma.$videos_dataPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Videos_data that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {videos_dataFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Videos_data
     * const videos_data = await prisma.videos_data.findMany()
     * 
     * // Get first 10 Videos_data
     * const videos_data = await prisma.videos_data.findMany({ take: 10 })
     * 
     * // Only select the `video_data_id`
     * const videos_dataWithVideo_data_idOnly = await prisma.videos_data.findMany({ select: { video_data_id: true } })
     * 
    **/
    findMany<T extends videos_dataFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, videos_dataFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$videos_dataPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Videos_data.
     * @param {videos_dataCreateArgs} args - Arguments to create a Videos_data.
     * @example
     * // Create one Videos_data
     * const Videos_data = await prisma.videos_data.create({
     *   data: {
     *     // ... data to create a Videos_data
     *   }
     * })
     * 
    **/
    create<T extends videos_dataCreateArgs<ExtArgs>>(
      args: SelectSubset<T, videos_dataCreateArgs<ExtArgs>>
    ): Prisma__videos_dataClient<$Result.GetResult<Prisma.$videos_dataPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Videos_data.
     *     @param {videos_dataCreateManyArgs} args - Arguments to create many Videos_data.
     *     @example
     *     // Create many Videos_data
     *     const videos_data = await prisma.videos_data.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends videos_dataCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, videos_dataCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Videos_data.
     * @param {videos_dataDeleteArgs} args - Arguments to delete one Videos_data.
     * @example
     * // Delete one Videos_data
     * const Videos_data = await prisma.videos_data.delete({
     *   where: {
     *     // ... filter to delete one Videos_data
     *   }
     * })
     * 
    **/
    delete<T extends videos_dataDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, videos_dataDeleteArgs<ExtArgs>>
    ): Prisma__videos_dataClient<$Result.GetResult<Prisma.$videos_dataPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Videos_data.
     * @param {videos_dataUpdateArgs} args - Arguments to update one Videos_data.
     * @example
     * // Update one Videos_data
     * const videos_data = await prisma.videos_data.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends videos_dataUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, videos_dataUpdateArgs<ExtArgs>>
    ): Prisma__videos_dataClient<$Result.GetResult<Prisma.$videos_dataPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Videos_data.
     * @param {videos_dataDeleteManyArgs} args - Arguments to filter Videos_data to delete.
     * @example
     * // Delete a few Videos_data
     * const { count } = await prisma.videos_data.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends videos_dataDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, videos_dataDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Videos_data.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {videos_dataUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Videos_data
     * const videos_data = await prisma.videos_data.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends videos_dataUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, videos_dataUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Videos_data.
     * @param {videos_dataUpsertArgs} args - Arguments to update or create a Videos_data.
     * @example
     * // Update or create a Videos_data
     * const videos_data = await prisma.videos_data.upsert({
     *   create: {
     *     // ... data to create a Videos_data
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Videos_data we want to update
     *   }
     * })
    **/
    upsert<T extends videos_dataUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, videos_dataUpsertArgs<ExtArgs>>
    ): Prisma__videos_dataClient<$Result.GetResult<Prisma.$videos_dataPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Videos_data.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {videos_dataCountArgs} args - Arguments to filter Videos_data to count.
     * @example
     * // Count the number of Videos_data
     * const count = await prisma.videos_data.count({
     *   where: {
     *     // ... the filter for the Videos_data we want to count
     *   }
     * })
    **/
    count<T extends videos_dataCountArgs>(
      args?: Subset<T, videos_dataCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Videos_dataCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Videos_data.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Videos_dataAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Videos_dataAggregateArgs>(args: Subset<T, Videos_dataAggregateArgs>): Prisma.PrismaPromise<GetVideos_dataAggregateType<T>>

    /**
     * Group by Videos_data.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {videos_dataGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends videos_dataGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: videos_dataGroupByArgs['orderBy'] }
        : { orderBy?: videos_dataGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, videos_dataGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVideos_dataGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the videos_data model
   */
  readonly fields: videos_dataFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for videos_data.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__videos_dataClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    videos<T extends videos_data$videosArgs<ExtArgs> = {}>(args?: Subset<T, videos_data$videosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$videosPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the videos_data model
   */ 
  interface videos_dataFieldRefs {
    readonly video_data_id: FieldRef<"videos_data", 'Int'>
    readonly video_data: FieldRef<"videos_data", 'Bytes'>
  }
    

  // Custom InputTypes

  /**
   * videos_data findUnique
   */
  export type videos_dataFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the videos_data
     */
    select?: videos_dataSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: videos_dataInclude<ExtArgs> | null
    /**
     * Filter, which videos_data to fetch.
     */
    where: videos_dataWhereUniqueInput
  }


  /**
   * videos_data findUniqueOrThrow
   */
  export type videos_dataFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the videos_data
     */
    select?: videos_dataSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: videos_dataInclude<ExtArgs> | null
    /**
     * Filter, which videos_data to fetch.
     */
    where: videos_dataWhereUniqueInput
  }


  /**
   * videos_data findFirst
   */
  export type videos_dataFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the videos_data
     */
    select?: videos_dataSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: videos_dataInclude<ExtArgs> | null
    /**
     * Filter, which videos_data to fetch.
     */
    where?: videos_dataWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of videos_data to fetch.
     */
    orderBy?: videos_dataOrderByWithRelationInput | videos_dataOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for videos_data.
     */
    cursor?: videos_dataWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` videos_data from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` videos_data.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of videos_data.
     */
    distinct?: Videos_dataScalarFieldEnum | Videos_dataScalarFieldEnum[]
  }


  /**
   * videos_data findFirstOrThrow
   */
  export type videos_dataFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the videos_data
     */
    select?: videos_dataSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: videos_dataInclude<ExtArgs> | null
    /**
     * Filter, which videos_data to fetch.
     */
    where?: videos_dataWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of videos_data to fetch.
     */
    orderBy?: videos_dataOrderByWithRelationInput | videos_dataOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for videos_data.
     */
    cursor?: videos_dataWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` videos_data from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` videos_data.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of videos_data.
     */
    distinct?: Videos_dataScalarFieldEnum | Videos_dataScalarFieldEnum[]
  }


  /**
   * videos_data findMany
   */
  export type videos_dataFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the videos_data
     */
    select?: videos_dataSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: videos_dataInclude<ExtArgs> | null
    /**
     * Filter, which videos_data to fetch.
     */
    where?: videos_dataWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of videos_data to fetch.
     */
    orderBy?: videos_dataOrderByWithRelationInput | videos_dataOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing videos_data.
     */
    cursor?: videos_dataWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` videos_data from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` videos_data.
     */
    skip?: number
    distinct?: Videos_dataScalarFieldEnum | Videos_dataScalarFieldEnum[]
  }


  /**
   * videos_data create
   */
  export type videos_dataCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the videos_data
     */
    select?: videos_dataSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: videos_dataInclude<ExtArgs> | null
    /**
     * The data needed to create a videos_data.
     */
    data: XOR<videos_dataCreateInput, videos_dataUncheckedCreateInput>
  }


  /**
   * videos_data createMany
   */
  export type videos_dataCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many videos_data.
     */
    data: videos_dataCreateManyInput | videos_dataCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * videos_data update
   */
  export type videos_dataUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the videos_data
     */
    select?: videos_dataSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: videos_dataInclude<ExtArgs> | null
    /**
     * The data needed to update a videos_data.
     */
    data: XOR<videos_dataUpdateInput, videos_dataUncheckedUpdateInput>
    /**
     * Choose, which videos_data to update.
     */
    where: videos_dataWhereUniqueInput
  }


  /**
   * videos_data updateMany
   */
  export type videos_dataUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update videos_data.
     */
    data: XOR<videos_dataUpdateManyMutationInput, videos_dataUncheckedUpdateManyInput>
    /**
     * Filter which videos_data to update
     */
    where?: videos_dataWhereInput
  }


  /**
   * videos_data upsert
   */
  export type videos_dataUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the videos_data
     */
    select?: videos_dataSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: videos_dataInclude<ExtArgs> | null
    /**
     * The filter to search for the videos_data to update in case it exists.
     */
    where: videos_dataWhereUniqueInput
    /**
     * In case the videos_data found by the `where` argument doesn't exist, create a new videos_data with this data.
     */
    create: XOR<videos_dataCreateInput, videos_dataUncheckedCreateInput>
    /**
     * In case the videos_data was found with the provided `where` argument, update it with this data.
     */
    update: XOR<videos_dataUpdateInput, videos_dataUncheckedUpdateInput>
  }


  /**
   * videos_data delete
   */
  export type videos_dataDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the videos_data
     */
    select?: videos_dataSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: videos_dataInclude<ExtArgs> | null
    /**
     * Filter which videos_data to delete.
     */
    where: videos_dataWhereUniqueInput
  }


  /**
   * videos_data deleteMany
   */
  export type videos_dataDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which videos_data to delete
     */
    where?: videos_dataWhereInput
  }


  /**
   * videos_data.videos
   */
  export type videos_data$videosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the videos
     */
    select?: videosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: videosInclude<ExtArgs> | null
    where?: videosWhereInput
    orderBy?: videosOrderByWithRelationInput | videosOrderByWithRelationInput[]
    cursor?: videosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: VideosScalarFieldEnum | VideosScalarFieldEnum[]
  }


  /**
   * videos_data without action
   */
  export type videos_dataDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the videos_data
     */
    select?: videos_dataSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: videos_dataInclude<ExtArgs> | null
  }



  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const CollectionsScalarFieldEnum: {
    collection_id: 'collection_id',
    collection_name: 'collection_name',
    individual_id: 'individual_id',
    group_id: 'group_id',
    organization_id: 'organization_id'
  };

  export type CollectionsScalarFieldEnum = (typeof CollectionsScalarFieldEnum)[keyof typeof CollectionsScalarFieldEnum]


  export const Collections_imagesScalarFieldEnum: {
    collections_images_id: 'collections_images_id',
    collection_id: 'collection_id',
    image_id: 'image_id',
    date_added: 'date_added',
    pinned: 'pinned',
    date_pinned: 'date_pinned'
  };

  export type Collections_imagesScalarFieldEnum = (typeof Collections_imagesScalarFieldEnum)[keyof typeof Collections_imagesScalarFieldEnum]


  export const Collections_sheetsScalarFieldEnum: {
    collections_sheets_id: 'collections_sheets_id',
    collection_id: 'collection_id',
    sheet_id: 'sheet_id',
    date_added: 'date_added',
    pinned: 'pinned',
    date_pinned: 'date_pinned'
  };

  export type Collections_sheetsScalarFieldEnum = (typeof Collections_sheetsScalarFieldEnum)[keyof typeof Collections_sheetsScalarFieldEnum]


  export const Collections_videosScalarFieldEnum: {
    collections_videos_id: 'collections_videos_id',
    collection_id: 'collection_id',
    video_id: 'video_id',
    date_added: 'date_added',
    pinned: 'pinned',
    date_pinned: 'date_pinned'
  };

  export type Collections_videosScalarFieldEnum = (typeof Collections_videosScalarFieldEnum)[keyof typeof Collections_videosScalarFieldEnum]


  export const EntitiesScalarFieldEnum: {
    entity_id: 'entity_id',
    individual_id: 'individual_id',
    group_id: 'group_id',
    organization_id: 'organization_id'
  };

  export type EntitiesScalarFieldEnum = (typeof EntitiesScalarFieldEnum)[keyof typeof EntitiesScalarFieldEnum]


  export const Entities_imagesScalarFieldEnum: {
    entities_images_id: 'entities_images_id',
    entity_id: 'entity_id',
    image_id: 'image_id',
    date_added: 'date_added',
    pinned: 'pinned',
    date_pinned: 'date_pinned'
  };

  export type Entities_imagesScalarFieldEnum = (typeof Entities_imagesScalarFieldEnum)[keyof typeof Entities_imagesScalarFieldEnum]


  export const Entities_referencesScalarFieldEnum: {
    reference_id: 'reference_id',
    individual_id: 'individual_id',
    group_id: 'group_id',
    organization_id: 'organization_id',
    title: 'title',
    author: 'author',
    url: 'url'
  };

  export type Entities_referencesScalarFieldEnum = (typeof Entities_referencesScalarFieldEnum)[keyof typeof Entities_referencesScalarFieldEnum]


  export const Entities_sheetsScalarFieldEnum: {
    entities_sheets_id: 'entities_sheets_id',
    entity_id: 'entity_id',
    sheet_id: 'sheet_id',
    date_added: 'date_added',
    pinned: 'pinned',
    date_pinned: 'date_pinned'
  };

  export type Entities_sheetsScalarFieldEnum = (typeof Entities_sheetsScalarFieldEnum)[keyof typeof Entities_sheetsScalarFieldEnum]


  export const Entities_videosScalarFieldEnum: {
    entities_videos_id: 'entities_videos_id',
    entity_id: 'entity_id',
    video_id: 'video_id',
    date_added: 'date_added',
    pinned: 'pinned',
    date_pinned: 'date_pinned'
  };

  export type Entities_videosScalarFieldEnum = (typeof Entities_videosScalarFieldEnum)[keyof typeof Entities_videosScalarFieldEnum]


  export const GroupsScalarFieldEnum: {
    group_id: 'group_id',
    group_handle: 'group_handle',
    group_name: 'group_name',
    group_currentIssue: 'group_currentIssue',
    group_stances: 'group_stances',
    group_description: 'group_description'
  };

  export type GroupsScalarFieldEnum = (typeof GroupsScalarFieldEnum)[keyof typeof GroupsScalarFieldEnum]


  export const Groups_membersScalarFieldEnum: {
    group_id: 'group_id',
    individual_id: 'individual_id'
  };

  export type Groups_membersScalarFieldEnum = (typeof Groups_membersScalarFieldEnum)[keyof typeof Groups_membersScalarFieldEnum]


  export const ImagesScalarFieldEnum: {
    image_id: 'image_id',
    image_creator_id: 'image_creator_id',
    image_title: 'image_title',
    image_description: 'image_description',
    image_filename: 'image_filename',
    image_data_id: 'image_data_id'
  };

  export type ImagesScalarFieldEnum = (typeof ImagesScalarFieldEnum)[keyof typeof ImagesScalarFieldEnum]


  export const Images_dataScalarFieldEnum: {
    image_data_id: 'image_data_id',
    image_data: 'image_data'
  };

  export type Images_dataScalarFieldEnum = (typeof Images_dataScalarFieldEnum)[keyof typeof Images_dataScalarFieldEnum]


  export const IndividualsScalarFieldEnum: {
    individual_id: 'individual_id',
    individual_userName: 'individual_userName',
    individual_name: 'individual_name',
    individual_currentIssue: 'individual_currentIssue',
    individual_roles: 'individual_roles',
    individual_description: 'individual_description'
  };

  export type IndividualsScalarFieldEnum = (typeof IndividualsScalarFieldEnum)[keyof typeof IndividualsScalarFieldEnum]


  export const OrganizationsScalarFieldEnum: {
    organization_id: 'organization_id',
    organization_handle: 'organization_handle',
    organization_name: 'organization_name',
    organization_currentIssue: 'organization_currentIssue',
    organization_stances: 'organization_stances',
    organization_description: 'organization_description'
  };

  export type OrganizationsScalarFieldEnum = (typeof OrganizationsScalarFieldEnum)[keyof typeof OrganizationsScalarFieldEnum]


  export const Organizations_membersScalarFieldEnum: {
    organization_id: 'organization_id',
    individual_id: 'individual_id'
  };

  export type Organizations_membersScalarFieldEnum = (typeof Organizations_membersScalarFieldEnum)[keyof typeof Organizations_membersScalarFieldEnum]


  export const SheetsScalarFieldEnum: {
    sheet_id: 'sheet_id',
    sheet_author_id: 'sheet_author_id',
    sheet_title: 'sheet_title',
    sheet_subject: 'sheet_subject',
    sheet_filename: 'sheet_filename',
    sheet_data: 'sheet_data'
  };

  export type SheetsScalarFieldEnum = (typeof SheetsScalarFieldEnum)[keyof typeof SheetsScalarFieldEnum]


  export const User_credentialsScalarFieldEnum: {
    user_id: 'user_id',
    username: 'username',
    user_password: 'user_password',
    user_first_name: 'user_first_name',
    user_last_name: 'user_last_name',
    user_email: 'user_email',
    user_phone_number: 'user_phone_number'
  };

  export type User_credentialsScalarFieldEnum = (typeof User_credentialsScalarFieldEnum)[keyof typeof User_credentialsScalarFieldEnum]


  export const VideosScalarFieldEnum: {
    video_id: 'video_id',
    video_creator_id: 'video_creator_id',
    video_title: 'video_title',
    video_description: 'video_description',
    video_filename: 'video_filename',
    video_data_id: 'video_data_id'
  };

  export type VideosScalarFieldEnum = (typeof VideosScalarFieldEnum)[keyof typeof VideosScalarFieldEnum]


  export const Videos_dataScalarFieldEnum: {
    video_data_id: 'video_data_id',
    video_data: 'video_data'
  };

  export type Videos_dataScalarFieldEnum = (typeof Videos_dataScalarFieldEnum)[keyof typeof Videos_dataScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Bytes'
   */
  export type BytesFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Bytes'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    
  /**
   * Deep Input Types
   */


  export type collectionsWhereInput = {
    AND?: collectionsWhereInput | collectionsWhereInput[]
    OR?: collectionsWhereInput[]
    NOT?: collectionsWhereInput | collectionsWhereInput[]
    collection_id?: IntFilter<"collections"> | number
    collection_name?: StringFilter<"collections"> | string
    individual_id?: IntNullableFilter<"collections"> | number | null
    group_id?: IntNullableFilter<"collections"> | number | null
    organization_id?: IntNullableFilter<"collections"> | number | null
    individuals?: XOR<IndividualsNullableRelationFilter, individualsWhereInput> | null
    organizations?: XOR<OrganizationsNullableRelationFilter, organizationsWhereInput> | null
    groups?: XOR<GroupsNullableRelationFilter, groupsWhereInput> | null
    collections_images?: Collections_imagesListRelationFilter
    collections_sheets?: Collections_sheetsListRelationFilter
    collections_videos?: Collections_videosListRelationFilter
  }

  export type collectionsOrderByWithRelationInput = {
    collection_id?: SortOrder
    collection_name?: SortOrder
    individual_id?: SortOrderInput | SortOrder
    group_id?: SortOrderInput | SortOrder
    organization_id?: SortOrderInput | SortOrder
    individuals?: individualsOrderByWithRelationInput
    organizations?: organizationsOrderByWithRelationInput
    groups?: groupsOrderByWithRelationInput
    collections_images?: collections_imagesOrderByRelationAggregateInput
    collections_sheets?: collections_sheetsOrderByRelationAggregateInput
    collections_videos?: collections_videosOrderByRelationAggregateInput
  }

  export type collectionsWhereUniqueInput = Prisma.AtLeast<{
    collection_id?: number
    AND?: collectionsWhereInput | collectionsWhereInput[]
    OR?: collectionsWhereInput[]
    NOT?: collectionsWhereInput | collectionsWhereInput[]
    collection_name?: StringFilter<"collections"> | string
    individual_id?: IntNullableFilter<"collections"> | number | null
    group_id?: IntNullableFilter<"collections"> | number | null
    organization_id?: IntNullableFilter<"collections"> | number | null
    individuals?: XOR<IndividualsNullableRelationFilter, individualsWhereInput> | null
    organizations?: XOR<OrganizationsNullableRelationFilter, organizationsWhereInput> | null
    groups?: XOR<GroupsNullableRelationFilter, groupsWhereInput> | null
    collections_images?: Collections_imagesListRelationFilter
    collections_sheets?: Collections_sheetsListRelationFilter
    collections_videos?: Collections_videosListRelationFilter
  }, "collection_id" | "collection_id">

  export type collectionsOrderByWithAggregationInput = {
    collection_id?: SortOrder
    collection_name?: SortOrder
    individual_id?: SortOrderInput | SortOrder
    group_id?: SortOrderInput | SortOrder
    organization_id?: SortOrderInput | SortOrder
    _count?: collectionsCountOrderByAggregateInput
    _avg?: collectionsAvgOrderByAggregateInput
    _max?: collectionsMaxOrderByAggregateInput
    _min?: collectionsMinOrderByAggregateInput
    _sum?: collectionsSumOrderByAggregateInput
  }

  export type collectionsScalarWhereWithAggregatesInput = {
    AND?: collectionsScalarWhereWithAggregatesInput | collectionsScalarWhereWithAggregatesInput[]
    OR?: collectionsScalarWhereWithAggregatesInput[]
    NOT?: collectionsScalarWhereWithAggregatesInput | collectionsScalarWhereWithAggregatesInput[]
    collection_id?: IntWithAggregatesFilter<"collections"> | number
    collection_name?: StringWithAggregatesFilter<"collections"> | string
    individual_id?: IntNullableWithAggregatesFilter<"collections"> | number | null
    group_id?: IntNullableWithAggregatesFilter<"collections"> | number | null
    organization_id?: IntNullableWithAggregatesFilter<"collections"> | number | null
  }

  export type collections_imagesWhereInput = {
    AND?: collections_imagesWhereInput | collections_imagesWhereInput[]
    OR?: collections_imagesWhereInput[]
    NOT?: collections_imagesWhereInput | collections_imagesWhereInput[]
    collections_images_id?: IntFilter<"collections_images"> | number
    collection_id?: IntFilter<"collections_images"> | number
    image_id?: IntFilter<"collections_images"> | number
    date_added?: DateTimeFilter<"collections_images"> | Date | string
    pinned?: BoolFilter<"collections_images"> | boolean
    date_pinned?: DateTimeNullableFilter<"collections_images"> | Date | string | null
    collections?: XOR<CollectionsRelationFilter, collectionsWhereInput>
    images?: XOR<ImagesRelationFilter, imagesWhereInput>
  }

  export type collections_imagesOrderByWithRelationInput = {
    collections_images_id?: SortOrder
    collection_id?: SortOrder
    image_id?: SortOrder
    date_added?: SortOrder
    pinned?: SortOrder
    date_pinned?: SortOrderInput | SortOrder
    collections?: collectionsOrderByWithRelationInput
    images?: imagesOrderByWithRelationInput
  }

  export type collections_imagesWhereUniqueInput = Prisma.AtLeast<{
    collections_images_id?: number
    AND?: collections_imagesWhereInput | collections_imagesWhereInput[]
    OR?: collections_imagesWhereInput[]
    NOT?: collections_imagesWhereInput | collections_imagesWhereInput[]
    collection_id?: IntFilter<"collections_images"> | number
    image_id?: IntFilter<"collections_images"> | number
    date_added?: DateTimeFilter<"collections_images"> | Date | string
    pinned?: BoolFilter<"collections_images"> | boolean
    date_pinned?: DateTimeNullableFilter<"collections_images"> | Date | string | null
    collections?: XOR<CollectionsRelationFilter, collectionsWhereInput>
    images?: XOR<ImagesRelationFilter, imagesWhereInput>
  }, "collections_images_id" | "collections_images_id">

  export type collections_imagesOrderByWithAggregationInput = {
    collections_images_id?: SortOrder
    collection_id?: SortOrder
    image_id?: SortOrder
    date_added?: SortOrder
    pinned?: SortOrder
    date_pinned?: SortOrderInput | SortOrder
    _count?: collections_imagesCountOrderByAggregateInput
    _avg?: collections_imagesAvgOrderByAggregateInput
    _max?: collections_imagesMaxOrderByAggregateInput
    _min?: collections_imagesMinOrderByAggregateInput
    _sum?: collections_imagesSumOrderByAggregateInput
  }

  export type collections_imagesScalarWhereWithAggregatesInput = {
    AND?: collections_imagesScalarWhereWithAggregatesInput | collections_imagesScalarWhereWithAggregatesInput[]
    OR?: collections_imagesScalarWhereWithAggregatesInput[]
    NOT?: collections_imagesScalarWhereWithAggregatesInput | collections_imagesScalarWhereWithAggregatesInput[]
    collections_images_id?: IntWithAggregatesFilter<"collections_images"> | number
    collection_id?: IntWithAggregatesFilter<"collections_images"> | number
    image_id?: IntWithAggregatesFilter<"collections_images"> | number
    date_added?: DateTimeWithAggregatesFilter<"collections_images"> | Date | string
    pinned?: BoolWithAggregatesFilter<"collections_images"> | boolean
    date_pinned?: DateTimeNullableWithAggregatesFilter<"collections_images"> | Date | string | null
  }

  export type collections_sheetsWhereInput = {
    AND?: collections_sheetsWhereInput | collections_sheetsWhereInput[]
    OR?: collections_sheetsWhereInput[]
    NOT?: collections_sheetsWhereInput | collections_sheetsWhereInput[]
    collections_sheets_id?: IntFilter<"collections_sheets"> | number
    collection_id?: IntFilter<"collections_sheets"> | number
    sheet_id?: IntFilter<"collections_sheets"> | number
    date_added?: DateTimeFilter<"collections_sheets"> | Date | string
    pinned?: BoolFilter<"collections_sheets"> | boolean
    date_pinned?: DateTimeNullableFilter<"collections_sheets"> | Date | string | null
    collections?: XOR<CollectionsRelationFilter, collectionsWhereInput>
    sheets?: XOR<SheetsRelationFilter, sheetsWhereInput>
  }

  export type collections_sheetsOrderByWithRelationInput = {
    collections_sheets_id?: SortOrder
    collection_id?: SortOrder
    sheet_id?: SortOrder
    date_added?: SortOrder
    pinned?: SortOrder
    date_pinned?: SortOrderInput | SortOrder
    collections?: collectionsOrderByWithRelationInput
    sheets?: sheetsOrderByWithRelationInput
  }

  export type collections_sheetsWhereUniqueInput = Prisma.AtLeast<{
    collections_sheets_id?: number
    AND?: collections_sheetsWhereInput | collections_sheetsWhereInput[]
    OR?: collections_sheetsWhereInput[]
    NOT?: collections_sheetsWhereInput | collections_sheetsWhereInput[]
    collection_id?: IntFilter<"collections_sheets"> | number
    sheet_id?: IntFilter<"collections_sheets"> | number
    date_added?: DateTimeFilter<"collections_sheets"> | Date | string
    pinned?: BoolFilter<"collections_sheets"> | boolean
    date_pinned?: DateTimeNullableFilter<"collections_sheets"> | Date | string | null
    collections?: XOR<CollectionsRelationFilter, collectionsWhereInput>
    sheets?: XOR<SheetsRelationFilter, sheetsWhereInput>
  }, "collections_sheets_id" | "collections_sheets_id">

  export type collections_sheetsOrderByWithAggregationInput = {
    collections_sheets_id?: SortOrder
    collection_id?: SortOrder
    sheet_id?: SortOrder
    date_added?: SortOrder
    pinned?: SortOrder
    date_pinned?: SortOrderInput | SortOrder
    _count?: collections_sheetsCountOrderByAggregateInput
    _avg?: collections_sheetsAvgOrderByAggregateInput
    _max?: collections_sheetsMaxOrderByAggregateInput
    _min?: collections_sheetsMinOrderByAggregateInput
    _sum?: collections_sheetsSumOrderByAggregateInput
  }

  export type collections_sheetsScalarWhereWithAggregatesInput = {
    AND?: collections_sheetsScalarWhereWithAggregatesInput | collections_sheetsScalarWhereWithAggregatesInput[]
    OR?: collections_sheetsScalarWhereWithAggregatesInput[]
    NOT?: collections_sheetsScalarWhereWithAggregatesInput | collections_sheetsScalarWhereWithAggregatesInput[]
    collections_sheets_id?: IntWithAggregatesFilter<"collections_sheets"> | number
    collection_id?: IntWithAggregatesFilter<"collections_sheets"> | number
    sheet_id?: IntWithAggregatesFilter<"collections_sheets"> | number
    date_added?: DateTimeWithAggregatesFilter<"collections_sheets"> | Date | string
    pinned?: BoolWithAggregatesFilter<"collections_sheets"> | boolean
    date_pinned?: DateTimeNullableWithAggregatesFilter<"collections_sheets"> | Date | string | null
  }

  export type collections_videosWhereInput = {
    AND?: collections_videosWhereInput | collections_videosWhereInput[]
    OR?: collections_videosWhereInput[]
    NOT?: collections_videosWhereInput | collections_videosWhereInput[]
    collections_videos_id?: IntFilter<"collections_videos"> | number
    collection_id?: IntFilter<"collections_videos"> | number
    video_id?: IntFilter<"collections_videos"> | number
    date_added?: DateTimeFilter<"collections_videos"> | Date | string
    pinned?: BoolFilter<"collections_videos"> | boolean
    date_pinned?: DateTimeNullableFilter<"collections_videos"> | Date | string | null
    collections?: XOR<CollectionsRelationFilter, collectionsWhereInput>
    videos?: XOR<VideosRelationFilter, videosWhereInput>
  }

  export type collections_videosOrderByWithRelationInput = {
    collections_videos_id?: SortOrder
    collection_id?: SortOrder
    video_id?: SortOrder
    date_added?: SortOrder
    pinned?: SortOrder
    date_pinned?: SortOrderInput | SortOrder
    collections?: collectionsOrderByWithRelationInput
    videos?: videosOrderByWithRelationInput
  }

  export type collections_videosWhereUniqueInput = Prisma.AtLeast<{
    collections_videos_id?: number
    AND?: collections_videosWhereInput | collections_videosWhereInput[]
    OR?: collections_videosWhereInput[]
    NOT?: collections_videosWhereInput | collections_videosWhereInput[]
    collection_id?: IntFilter<"collections_videos"> | number
    video_id?: IntFilter<"collections_videos"> | number
    date_added?: DateTimeFilter<"collections_videos"> | Date | string
    pinned?: BoolFilter<"collections_videos"> | boolean
    date_pinned?: DateTimeNullableFilter<"collections_videos"> | Date | string | null
    collections?: XOR<CollectionsRelationFilter, collectionsWhereInput>
    videos?: XOR<VideosRelationFilter, videosWhereInput>
  }, "collections_videos_id" | "collections_videos_id">

  export type collections_videosOrderByWithAggregationInput = {
    collections_videos_id?: SortOrder
    collection_id?: SortOrder
    video_id?: SortOrder
    date_added?: SortOrder
    pinned?: SortOrder
    date_pinned?: SortOrderInput | SortOrder
    _count?: collections_videosCountOrderByAggregateInput
    _avg?: collections_videosAvgOrderByAggregateInput
    _max?: collections_videosMaxOrderByAggregateInput
    _min?: collections_videosMinOrderByAggregateInput
    _sum?: collections_videosSumOrderByAggregateInput
  }

  export type collections_videosScalarWhereWithAggregatesInput = {
    AND?: collections_videosScalarWhereWithAggregatesInput | collections_videosScalarWhereWithAggregatesInput[]
    OR?: collections_videosScalarWhereWithAggregatesInput[]
    NOT?: collections_videosScalarWhereWithAggregatesInput | collections_videosScalarWhereWithAggregatesInput[]
    collections_videos_id?: IntWithAggregatesFilter<"collections_videos"> | number
    collection_id?: IntWithAggregatesFilter<"collections_videos"> | number
    video_id?: IntWithAggregatesFilter<"collections_videos"> | number
    date_added?: DateTimeWithAggregatesFilter<"collections_videos"> | Date | string
    pinned?: BoolWithAggregatesFilter<"collections_videos"> | boolean
    date_pinned?: DateTimeNullableWithAggregatesFilter<"collections_videos"> | Date | string | null
  }

  export type entitiesWhereInput = {
    AND?: entitiesWhereInput | entitiesWhereInput[]
    OR?: entitiesWhereInput[]
    NOT?: entitiesWhereInput | entitiesWhereInput[]
    entity_id?: IntFilter<"entities"> | number
    individual_id?: IntNullableFilter<"entities"> | number | null
    group_id?: IntNullableFilter<"entities"> | number | null
    organization_id?: IntNullableFilter<"entities"> | number | null
    groups?: XOR<GroupsNullableRelationFilter, groupsWhereInput> | null
    individuals?: XOR<IndividualsNullableRelationFilter, individualsWhereInput> | null
    organizations?: XOR<OrganizationsNullableRelationFilter, organizationsWhereInput> | null
    entities_images?: Entities_imagesListRelationFilter
    entities_sheets?: Entities_sheetsListRelationFilter
    entities_videos?: Entities_videosListRelationFilter
  }

  export type entitiesOrderByWithRelationInput = {
    entity_id?: SortOrder
    individual_id?: SortOrderInput | SortOrder
    group_id?: SortOrderInput | SortOrder
    organization_id?: SortOrderInput | SortOrder
    groups?: groupsOrderByWithRelationInput
    individuals?: individualsOrderByWithRelationInput
    organizations?: organizationsOrderByWithRelationInput
    entities_images?: entities_imagesOrderByRelationAggregateInput
    entities_sheets?: entities_sheetsOrderByRelationAggregateInput
    entities_videos?: entities_videosOrderByRelationAggregateInput
  }

  export type entitiesWhereUniqueInput = Prisma.AtLeast<{
    entity_id?: number
    AND?: entitiesWhereInput | entitiesWhereInput[]
    OR?: entitiesWhereInput[]
    NOT?: entitiesWhereInput | entitiesWhereInput[]
    individual_id?: IntNullableFilter<"entities"> | number | null
    group_id?: IntNullableFilter<"entities"> | number | null
    organization_id?: IntNullableFilter<"entities"> | number | null
    groups?: XOR<GroupsNullableRelationFilter, groupsWhereInput> | null
    individuals?: XOR<IndividualsNullableRelationFilter, individualsWhereInput> | null
    organizations?: XOR<OrganizationsNullableRelationFilter, organizationsWhereInput> | null
    entities_images?: Entities_imagesListRelationFilter
    entities_sheets?: Entities_sheetsListRelationFilter
    entities_videos?: Entities_videosListRelationFilter
  }, "entity_id" | "entity_id">

  export type entitiesOrderByWithAggregationInput = {
    entity_id?: SortOrder
    individual_id?: SortOrderInput | SortOrder
    group_id?: SortOrderInput | SortOrder
    organization_id?: SortOrderInput | SortOrder
    _count?: entitiesCountOrderByAggregateInput
    _avg?: entitiesAvgOrderByAggregateInput
    _max?: entitiesMaxOrderByAggregateInput
    _min?: entitiesMinOrderByAggregateInput
    _sum?: entitiesSumOrderByAggregateInput
  }

  export type entitiesScalarWhereWithAggregatesInput = {
    AND?: entitiesScalarWhereWithAggregatesInput | entitiesScalarWhereWithAggregatesInput[]
    OR?: entitiesScalarWhereWithAggregatesInput[]
    NOT?: entitiesScalarWhereWithAggregatesInput | entitiesScalarWhereWithAggregatesInput[]
    entity_id?: IntWithAggregatesFilter<"entities"> | number
    individual_id?: IntNullableWithAggregatesFilter<"entities"> | number | null
    group_id?: IntNullableWithAggregatesFilter<"entities"> | number | null
    organization_id?: IntNullableWithAggregatesFilter<"entities"> | number | null
  }

  export type entities_imagesWhereInput = {
    AND?: entities_imagesWhereInput | entities_imagesWhereInput[]
    OR?: entities_imagesWhereInput[]
    NOT?: entities_imagesWhereInput | entities_imagesWhereInput[]
    entities_images_id?: IntFilter<"entities_images"> | number
    entity_id?: IntFilter<"entities_images"> | number
    image_id?: IntFilter<"entities_images"> | number
    date_added?: DateTimeFilter<"entities_images"> | Date | string
    pinned?: BoolFilter<"entities_images"> | boolean
    date_pinned?: DateTimeNullableFilter<"entities_images"> | Date | string | null
    entities?: XOR<EntitiesRelationFilter, entitiesWhereInput>
    images?: XOR<ImagesRelationFilter, imagesWhereInput>
  }

  export type entities_imagesOrderByWithRelationInput = {
    entities_images_id?: SortOrder
    entity_id?: SortOrder
    image_id?: SortOrder
    date_added?: SortOrder
    pinned?: SortOrder
    date_pinned?: SortOrderInput | SortOrder
    entities?: entitiesOrderByWithRelationInput
    images?: imagesOrderByWithRelationInput
  }

  export type entities_imagesWhereUniqueInput = Prisma.AtLeast<{
    entities_images_id?: number
    AND?: entities_imagesWhereInput | entities_imagesWhereInput[]
    OR?: entities_imagesWhereInput[]
    NOT?: entities_imagesWhereInput | entities_imagesWhereInput[]
    entity_id?: IntFilter<"entities_images"> | number
    image_id?: IntFilter<"entities_images"> | number
    date_added?: DateTimeFilter<"entities_images"> | Date | string
    pinned?: BoolFilter<"entities_images"> | boolean
    date_pinned?: DateTimeNullableFilter<"entities_images"> | Date | string | null
    entities?: XOR<EntitiesRelationFilter, entitiesWhereInput>
    images?: XOR<ImagesRelationFilter, imagesWhereInput>
  }, "entities_images_id" | "entities_images_id">

  export type entities_imagesOrderByWithAggregationInput = {
    entities_images_id?: SortOrder
    entity_id?: SortOrder
    image_id?: SortOrder
    date_added?: SortOrder
    pinned?: SortOrder
    date_pinned?: SortOrderInput | SortOrder
    _count?: entities_imagesCountOrderByAggregateInput
    _avg?: entities_imagesAvgOrderByAggregateInput
    _max?: entities_imagesMaxOrderByAggregateInput
    _min?: entities_imagesMinOrderByAggregateInput
    _sum?: entities_imagesSumOrderByAggregateInput
  }

  export type entities_imagesScalarWhereWithAggregatesInput = {
    AND?: entities_imagesScalarWhereWithAggregatesInput | entities_imagesScalarWhereWithAggregatesInput[]
    OR?: entities_imagesScalarWhereWithAggregatesInput[]
    NOT?: entities_imagesScalarWhereWithAggregatesInput | entities_imagesScalarWhereWithAggregatesInput[]
    entities_images_id?: IntWithAggregatesFilter<"entities_images"> | number
    entity_id?: IntWithAggregatesFilter<"entities_images"> | number
    image_id?: IntWithAggregatesFilter<"entities_images"> | number
    date_added?: DateTimeWithAggregatesFilter<"entities_images"> | Date | string
    pinned?: BoolWithAggregatesFilter<"entities_images"> | boolean
    date_pinned?: DateTimeNullableWithAggregatesFilter<"entities_images"> | Date | string | null
  }

  export type entities_referencesWhereInput = {
    AND?: entities_referencesWhereInput | entities_referencesWhereInput[]
    OR?: entities_referencesWhereInput[]
    NOT?: entities_referencesWhereInput | entities_referencesWhereInput[]
    reference_id?: IntFilter<"entities_references"> | number
    individual_id?: IntNullableFilter<"entities_references"> | number | null
    group_id?: IntNullableFilter<"entities_references"> | number | null
    organization_id?: IntNullableFilter<"entities_references"> | number | null
    title?: StringFilter<"entities_references"> | string
    author?: StringFilter<"entities_references"> | string
    url?: StringFilter<"entities_references"> | string
    groups?: XOR<GroupsNullableRelationFilter, groupsWhereInput> | null
    individuals?: XOR<IndividualsNullableRelationFilter, individualsWhereInput> | null
    organizations?: XOR<OrganizationsNullableRelationFilter, organizationsWhereInput> | null
  }

  export type entities_referencesOrderByWithRelationInput = {
    reference_id?: SortOrder
    individual_id?: SortOrderInput | SortOrder
    group_id?: SortOrderInput | SortOrder
    organization_id?: SortOrderInput | SortOrder
    title?: SortOrder
    author?: SortOrder
    url?: SortOrder
    groups?: groupsOrderByWithRelationInput
    individuals?: individualsOrderByWithRelationInput
    organizations?: organizationsOrderByWithRelationInput
  }

  export type entities_referencesWhereUniqueInput = Prisma.AtLeast<{
    reference_id?: number
    AND?: entities_referencesWhereInput | entities_referencesWhereInput[]
    OR?: entities_referencesWhereInput[]
    NOT?: entities_referencesWhereInput | entities_referencesWhereInput[]
    individual_id?: IntNullableFilter<"entities_references"> | number | null
    group_id?: IntNullableFilter<"entities_references"> | number | null
    organization_id?: IntNullableFilter<"entities_references"> | number | null
    title?: StringFilter<"entities_references"> | string
    author?: StringFilter<"entities_references"> | string
    url?: StringFilter<"entities_references"> | string
    groups?: XOR<GroupsNullableRelationFilter, groupsWhereInput> | null
    individuals?: XOR<IndividualsNullableRelationFilter, individualsWhereInput> | null
    organizations?: XOR<OrganizationsNullableRelationFilter, organizationsWhereInput> | null
  }, "reference_id" | "reference_id">

  export type entities_referencesOrderByWithAggregationInput = {
    reference_id?: SortOrder
    individual_id?: SortOrderInput | SortOrder
    group_id?: SortOrderInput | SortOrder
    organization_id?: SortOrderInput | SortOrder
    title?: SortOrder
    author?: SortOrder
    url?: SortOrder
    _count?: entities_referencesCountOrderByAggregateInput
    _avg?: entities_referencesAvgOrderByAggregateInput
    _max?: entities_referencesMaxOrderByAggregateInput
    _min?: entities_referencesMinOrderByAggregateInput
    _sum?: entities_referencesSumOrderByAggregateInput
  }

  export type entities_referencesScalarWhereWithAggregatesInput = {
    AND?: entities_referencesScalarWhereWithAggregatesInput | entities_referencesScalarWhereWithAggregatesInput[]
    OR?: entities_referencesScalarWhereWithAggregatesInput[]
    NOT?: entities_referencesScalarWhereWithAggregatesInput | entities_referencesScalarWhereWithAggregatesInput[]
    reference_id?: IntWithAggregatesFilter<"entities_references"> | number
    individual_id?: IntNullableWithAggregatesFilter<"entities_references"> | number | null
    group_id?: IntNullableWithAggregatesFilter<"entities_references"> | number | null
    organization_id?: IntNullableWithAggregatesFilter<"entities_references"> | number | null
    title?: StringWithAggregatesFilter<"entities_references"> | string
    author?: StringWithAggregatesFilter<"entities_references"> | string
    url?: StringWithAggregatesFilter<"entities_references"> | string
  }

  export type entities_sheetsWhereInput = {
    AND?: entities_sheetsWhereInput | entities_sheetsWhereInput[]
    OR?: entities_sheetsWhereInput[]
    NOT?: entities_sheetsWhereInput | entities_sheetsWhereInput[]
    entities_sheets_id?: IntFilter<"entities_sheets"> | number
    entity_id?: IntFilter<"entities_sheets"> | number
    sheet_id?: IntFilter<"entities_sheets"> | number
    date_added?: DateTimeFilter<"entities_sheets"> | Date | string
    pinned?: BoolFilter<"entities_sheets"> | boolean
    date_pinned?: DateTimeNullableFilter<"entities_sheets"> | Date | string | null
    entities?: XOR<EntitiesRelationFilter, entitiesWhereInput>
    sheets?: XOR<SheetsRelationFilter, sheetsWhereInput>
  }

  export type entities_sheetsOrderByWithRelationInput = {
    entities_sheets_id?: SortOrder
    entity_id?: SortOrder
    sheet_id?: SortOrder
    date_added?: SortOrder
    pinned?: SortOrder
    date_pinned?: SortOrderInput | SortOrder
    entities?: entitiesOrderByWithRelationInput
    sheets?: sheetsOrderByWithRelationInput
  }

  export type entities_sheetsWhereUniqueInput = Prisma.AtLeast<{
    entities_sheets_id?: number
    AND?: entities_sheetsWhereInput | entities_sheetsWhereInput[]
    OR?: entities_sheetsWhereInput[]
    NOT?: entities_sheetsWhereInput | entities_sheetsWhereInput[]
    entity_id?: IntFilter<"entities_sheets"> | number
    sheet_id?: IntFilter<"entities_sheets"> | number
    date_added?: DateTimeFilter<"entities_sheets"> | Date | string
    pinned?: BoolFilter<"entities_sheets"> | boolean
    date_pinned?: DateTimeNullableFilter<"entities_sheets"> | Date | string | null
    entities?: XOR<EntitiesRelationFilter, entitiesWhereInput>
    sheets?: XOR<SheetsRelationFilter, sheetsWhereInput>
  }, "entities_sheets_id" | "entities_sheets_id">

  export type entities_sheetsOrderByWithAggregationInput = {
    entities_sheets_id?: SortOrder
    entity_id?: SortOrder
    sheet_id?: SortOrder
    date_added?: SortOrder
    pinned?: SortOrder
    date_pinned?: SortOrderInput | SortOrder
    _count?: entities_sheetsCountOrderByAggregateInput
    _avg?: entities_sheetsAvgOrderByAggregateInput
    _max?: entities_sheetsMaxOrderByAggregateInput
    _min?: entities_sheetsMinOrderByAggregateInput
    _sum?: entities_sheetsSumOrderByAggregateInput
  }

  export type entities_sheetsScalarWhereWithAggregatesInput = {
    AND?: entities_sheetsScalarWhereWithAggregatesInput | entities_sheetsScalarWhereWithAggregatesInput[]
    OR?: entities_sheetsScalarWhereWithAggregatesInput[]
    NOT?: entities_sheetsScalarWhereWithAggregatesInput | entities_sheetsScalarWhereWithAggregatesInput[]
    entities_sheets_id?: IntWithAggregatesFilter<"entities_sheets"> | number
    entity_id?: IntWithAggregatesFilter<"entities_sheets"> | number
    sheet_id?: IntWithAggregatesFilter<"entities_sheets"> | number
    date_added?: DateTimeWithAggregatesFilter<"entities_sheets"> | Date | string
    pinned?: BoolWithAggregatesFilter<"entities_sheets"> | boolean
    date_pinned?: DateTimeNullableWithAggregatesFilter<"entities_sheets"> | Date | string | null
  }

  export type entities_videosWhereInput = {
    AND?: entities_videosWhereInput | entities_videosWhereInput[]
    OR?: entities_videosWhereInput[]
    NOT?: entities_videosWhereInput | entities_videosWhereInput[]
    entities_videos_id?: IntFilter<"entities_videos"> | number
    entity_id?: IntFilter<"entities_videos"> | number
    video_id?: IntFilter<"entities_videos"> | number
    date_added?: DateTimeFilter<"entities_videos"> | Date | string
    pinned?: BoolFilter<"entities_videos"> | boolean
    date_pinned?: DateTimeNullableFilter<"entities_videos"> | Date | string | null
    entities?: XOR<EntitiesRelationFilter, entitiesWhereInput>
    videos?: XOR<VideosRelationFilter, videosWhereInput>
  }

  export type entities_videosOrderByWithRelationInput = {
    entities_videos_id?: SortOrder
    entity_id?: SortOrder
    video_id?: SortOrder
    date_added?: SortOrder
    pinned?: SortOrder
    date_pinned?: SortOrderInput | SortOrder
    entities?: entitiesOrderByWithRelationInput
    videos?: videosOrderByWithRelationInput
  }

  export type entities_videosWhereUniqueInput = Prisma.AtLeast<{
    entities_videos_id?: number
    AND?: entities_videosWhereInput | entities_videosWhereInput[]
    OR?: entities_videosWhereInput[]
    NOT?: entities_videosWhereInput | entities_videosWhereInput[]
    entity_id?: IntFilter<"entities_videos"> | number
    video_id?: IntFilter<"entities_videos"> | number
    date_added?: DateTimeFilter<"entities_videos"> | Date | string
    pinned?: BoolFilter<"entities_videos"> | boolean
    date_pinned?: DateTimeNullableFilter<"entities_videos"> | Date | string | null
    entities?: XOR<EntitiesRelationFilter, entitiesWhereInput>
    videos?: XOR<VideosRelationFilter, videosWhereInput>
  }, "entities_videos_id" | "entities_videos_id">

  export type entities_videosOrderByWithAggregationInput = {
    entities_videos_id?: SortOrder
    entity_id?: SortOrder
    video_id?: SortOrder
    date_added?: SortOrder
    pinned?: SortOrder
    date_pinned?: SortOrderInput | SortOrder
    _count?: entities_videosCountOrderByAggregateInput
    _avg?: entities_videosAvgOrderByAggregateInput
    _max?: entities_videosMaxOrderByAggregateInput
    _min?: entities_videosMinOrderByAggregateInput
    _sum?: entities_videosSumOrderByAggregateInput
  }

  export type entities_videosScalarWhereWithAggregatesInput = {
    AND?: entities_videosScalarWhereWithAggregatesInput | entities_videosScalarWhereWithAggregatesInput[]
    OR?: entities_videosScalarWhereWithAggregatesInput[]
    NOT?: entities_videosScalarWhereWithAggregatesInput | entities_videosScalarWhereWithAggregatesInput[]
    entities_videos_id?: IntWithAggregatesFilter<"entities_videos"> | number
    entity_id?: IntWithAggregatesFilter<"entities_videos"> | number
    video_id?: IntWithAggregatesFilter<"entities_videos"> | number
    date_added?: DateTimeWithAggregatesFilter<"entities_videos"> | Date | string
    pinned?: BoolWithAggregatesFilter<"entities_videos"> | boolean
    date_pinned?: DateTimeNullableWithAggregatesFilter<"entities_videos"> | Date | string | null
  }

  export type groupsWhereInput = {
    AND?: groupsWhereInput | groupsWhereInput[]
    OR?: groupsWhereInput[]
    NOT?: groupsWhereInput | groupsWhereInput[]
    group_id?: IntFilter<"groups"> | number
    group_handle?: StringFilter<"groups"> | string
    group_name?: StringFilter<"groups"> | string
    group_currentIssue?: StringNullableFilter<"groups"> | string | null
    group_stances?: StringNullableFilter<"groups"> | string | null
    group_description?: StringNullableFilter<"groups"> | string | null
    collections?: CollectionsListRelationFilter
    entities?: EntitiesListRelationFilter
    entities_references?: Entities_referencesListRelationFilter
    groups_members?: Groups_membersListRelationFilter
  }

  export type groupsOrderByWithRelationInput = {
    group_id?: SortOrder
    group_handle?: SortOrder
    group_name?: SortOrder
    group_currentIssue?: SortOrderInput | SortOrder
    group_stances?: SortOrderInput | SortOrder
    group_description?: SortOrderInput | SortOrder
    collections?: collectionsOrderByRelationAggregateInput
    entities?: entitiesOrderByRelationAggregateInput
    entities_references?: entities_referencesOrderByRelationAggregateInput
    groups_members?: groups_membersOrderByRelationAggregateInput
  }

  export type groupsWhereUniqueInput = Prisma.AtLeast<{
    group_id?: number
    group_handle?: string
    AND?: groupsWhereInput | groupsWhereInput[]
    OR?: groupsWhereInput[]
    NOT?: groupsWhereInput | groupsWhereInput[]
    group_name?: StringFilter<"groups"> | string
    group_currentIssue?: StringNullableFilter<"groups"> | string | null
    group_stances?: StringNullableFilter<"groups"> | string | null
    group_description?: StringNullableFilter<"groups"> | string | null
    collections?: CollectionsListRelationFilter
    entities?: EntitiesListRelationFilter
    entities_references?: Entities_referencesListRelationFilter
    groups_members?: Groups_membersListRelationFilter
  }, "group_id" | "group_id" | "group_handle">

  export type groupsOrderByWithAggregationInput = {
    group_id?: SortOrder
    group_handle?: SortOrder
    group_name?: SortOrder
    group_currentIssue?: SortOrderInput | SortOrder
    group_stances?: SortOrderInput | SortOrder
    group_description?: SortOrderInput | SortOrder
    _count?: groupsCountOrderByAggregateInput
    _avg?: groupsAvgOrderByAggregateInput
    _max?: groupsMaxOrderByAggregateInput
    _min?: groupsMinOrderByAggregateInput
    _sum?: groupsSumOrderByAggregateInput
  }

  export type groupsScalarWhereWithAggregatesInput = {
    AND?: groupsScalarWhereWithAggregatesInput | groupsScalarWhereWithAggregatesInput[]
    OR?: groupsScalarWhereWithAggregatesInput[]
    NOT?: groupsScalarWhereWithAggregatesInput | groupsScalarWhereWithAggregatesInput[]
    group_id?: IntWithAggregatesFilter<"groups"> | number
    group_handle?: StringWithAggregatesFilter<"groups"> | string
    group_name?: StringWithAggregatesFilter<"groups"> | string
    group_currentIssue?: StringNullableWithAggregatesFilter<"groups"> | string | null
    group_stances?: StringNullableWithAggregatesFilter<"groups"> | string | null
    group_description?: StringNullableWithAggregatesFilter<"groups"> | string | null
  }

  export type groups_membersWhereInput = {
    AND?: groups_membersWhereInput | groups_membersWhereInput[]
    OR?: groups_membersWhereInput[]
    NOT?: groups_membersWhereInput | groups_membersWhereInput[]
    group_id?: IntFilter<"groups_members"> | number
    individual_id?: IntFilter<"groups_members"> | number
    groups?: XOR<GroupsRelationFilter, groupsWhereInput>
    individuals?: XOR<IndividualsRelationFilter, individualsWhereInput>
  }

  export type groups_membersOrderByWithRelationInput = {
    group_id?: SortOrder
    individual_id?: SortOrder
    groups?: groupsOrderByWithRelationInput
    individuals?: individualsOrderByWithRelationInput
  }

  export type groups_membersWhereUniqueInput = Prisma.AtLeast<{
    group_id_individual_id?: groups_membersGroup_idIndividual_idCompoundUniqueInput
    AND?: groups_membersWhereInput | groups_membersWhereInput[]
    OR?: groups_membersWhereInput[]
    NOT?: groups_membersWhereInput | groups_membersWhereInput[]
    group_id?: IntFilter<"groups_members"> | number
    individual_id?: IntFilter<"groups_members"> | number
    groups?: XOR<GroupsRelationFilter, groupsWhereInput>
    individuals?: XOR<IndividualsRelationFilter, individualsWhereInput>
  }, "group_id_individual_id">

  export type groups_membersOrderByWithAggregationInput = {
    group_id?: SortOrder
    individual_id?: SortOrder
    _count?: groups_membersCountOrderByAggregateInput
    _avg?: groups_membersAvgOrderByAggregateInput
    _max?: groups_membersMaxOrderByAggregateInput
    _min?: groups_membersMinOrderByAggregateInput
    _sum?: groups_membersSumOrderByAggregateInput
  }

  export type groups_membersScalarWhereWithAggregatesInput = {
    AND?: groups_membersScalarWhereWithAggregatesInput | groups_membersScalarWhereWithAggregatesInput[]
    OR?: groups_membersScalarWhereWithAggregatesInput[]
    NOT?: groups_membersScalarWhereWithAggregatesInput | groups_membersScalarWhereWithAggregatesInput[]
    group_id?: IntWithAggregatesFilter<"groups_members"> | number
    individual_id?: IntWithAggregatesFilter<"groups_members"> | number
  }

  export type imagesWhereInput = {
    AND?: imagesWhereInput | imagesWhereInput[]
    OR?: imagesWhereInput[]
    NOT?: imagesWhereInput | imagesWhereInput[]
    image_id?: IntFilter<"images"> | number
    image_creator_id?: IntFilter<"images"> | number
    image_title?: StringFilter<"images"> | string
    image_description?: StringFilter<"images"> | string
    image_filename?: StringFilter<"images"> | string
    image_data_id?: IntFilter<"images"> | number
    collections_images?: Collections_imagesListRelationFilter
    entities_images?: Entities_imagesListRelationFilter
    individuals?: XOR<IndividualsRelationFilter, individualsWhereInput>
    images_data?: XOR<Images_dataRelationFilter, images_dataWhereInput>
  }

  export type imagesOrderByWithRelationInput = {
    image_id?: SortOrder
    image_creator_id?: SortOrder
    image_title?: SortOrder
    image_description?: SortOrder
    image_filename?: SortOrder
    image_data_id?: SortOrder
    collections_images?: collections_imagesOrderByRelationAggregateInput
    entities_images?: entities_imagesOrderByRelationAggregateInput
    individuals?: individualsOrderByWithRelationInput
    images_data?: images_dataOrderByWithRelationInput
  }

  export type imagesWhereUniqueInput = Prisma.AtLeast<{
    image_id?: number
    AND?: imagesWhereInput | imagesWhereInput[]
    OR?: imagesWhereInput[]
    NOT?: imagesWhereInput | imagesWhereInput[]
    image_creator_id?: IntFilter<"images"> | number
    image_title?: StringFilter<"images"> | string
    image_description?: StringFilter<"images"> | string
    image_filename?: StringFilter<"images"> | string
    image_data_id?: IntFilter<"images"> | number
    collections_images?: Collections_imagesListRelationFilter
    entities_images?: Entities_imagesListRelationFilter
    individuals?: XOR<IndividualsRelationFilter, individualsWhereInput>
    images_data?: XOR<Images_dataRelationFilter, images_dataWhereInput>
  }, "image_id" | "image_id">

  export type imagesOrderByWithAggregationInput = {
    image_id?: SortOrder
    image_creator_id?: SortOrder
    image_title?: SortOrder
    image_description?: SortOrder
    image_filename?: SortOrder
    image_data_id?: SortOrder
    _count?: imagesCountOrderByAggregateInput
    _avg?: imagesAvgOrderByAggregateInput
    _max?: imagesMaxOrderByAggregateInput
    _min?: imagesMinOrderByAggregateInput
    _sum?: imagesSumOrderByAggregateInput
  }

  export type imagesScalarWhereWithAggregatesInput = {
    AND?: imagesScalarWhereWithAggregatesInput | imagesScalarWhereWithAggregatesInput[]
    OR?: imagesScalarWhereWithAggregatesInput[]
    NOT?: imagesScalarWhereWithAggregatesInput | imagesScalarWhereWithAggregatesInput[]
    image_id?: IntWithAggregatesFilter<"images"> | number
    image_creator_id?: IntWithAggregatesFilter<"images"> | number
    image_title?: StringWithAggregatesFilter<"images"> | string
    image_description?: StringWithAggregatesFilter<"images"> | string
    image_filename?: StringWithAggregatesFilter<"images"> | string
    image_data_id?: IntWithAggregatesFilter<"images"> | number
  }

  export type images_dataWhereInput = {
    AND?: images_dataWhereInput | images_dataWhereInput[]
    OR?: images_dataWhereInput[]
    NOT?: images_dataWhereInput | images_dataWhereInput[]
    image_data_id?: IntFilter<"images_data"> | number
    image_data?: BytesFilter<"images_data"> | Buffer
    images?: ImagesListRelationFilter
  }

  export type images_dataOrderByWithRelationInput = {
    image_data_id?: SortOrder
    image_data?: SortOrder
    images?: imagesOrderByRelationAggregateInput
  }

  export type images_dataWhereUniqueInput = Prisma.AtLeast<{
    image_data_id?: number
    AND?: images_dataWhereInput | images_dataWhereInput[]
    OR?: images_dataWhereInput[]
    NOT?: images_dataWhereInput | images_dataWhereInput[]
    image_data?: BytesFilter<"images_data"> | Buffer
    images?: ImagesListRelationFilter
  }, "image_data_id" | "image_data_id">

  export type images_dataOrderByWithAggregationInput = {
    image_data_id?: SortOrder
    image_data?: SortOrder
    _count?: images_dataCountOrderByAggregateInput
    _avg?: images_dataAvgOrderByAggregateInput
    _max?: images_dataMaxOrderByAggregateInput
    _min?: images_dataMinOrderByAggregateInput
    _sum?: images_dataSumOrderByAggregateInput
  }

  export type images_dataScalarWhereWithAggregatesInput = {
    AND?: images_dataScalarWhereWithAggregatesInput | images_dataScalarWhereWithAggregatesInput[]
    OR?: images_dataScalarWhereWithAggregatesInput[]
    NOT?: images_dataScalarWhereWithAggregatesInput | images_dataScalarWhereWithAggregatesInput[]
    image_data_id?: IntWithAggregatesFilter<"images_data"> | number
    image_data?: BytesWithAggregatesFilter<"images_data"> | Buffer
  }

  export type individualsWhereInput = {
    AND?: individualsWhereInput | individualsWhereInput[]
    OR?: individualsWhereInput[]
    NOT?: individualsWhereInput | individualsWhereInput[]
    individual_id?: IntFilter<"individuals"> | number
    individual_userName?: StringFilter<"individuals"> | string
    individual_name?: StringFilter<"individuals"> | string
    individual_currentIssue?: StringNullableFilter<"individuals"> | string | null
    individual_roles?: StringNullableFilter<"individuals"> | string | null
    individual_description?: StringNullableFilter<"individuals"> | string | null
    collections?: CollectionsListRelationFilter
    entities?: EntitiesListRelationFilter
    entities_references?: Entities_referencesListRelationFilter
    groups_members?: Groups_membersListRelationFilter
    images?: ImagesListRelationFilter
    organizations_members?: Organizations_membersListRelationFilter
    sheets?: SheetsListRelationFilter
    videos?: VideosListRelationFilter
  }

  export type individualsOrderByWithRelationInput = {
    individual_id?: SortOrder
    individual_userName?: SortOrder
    individual_name?: SortOrder
    individual_currentIssue?: SortOrderInput | SortOrder
    individual_roles?: SortOrderInput | SortOrder
    individual_description?: SortOrderInput | SortOrder
    collections?: collectionsOrderByRelationAggregateInput
    entities?: entitiesOrderByRelationAggregateInput
    entities_references?: entities_referencesOrderByRelationAggregateInput
    groups_members?: groups_membersOrderByRelationAggregateInput
    images?: imagesOrderByRelationAggregateInput
    organizations_members?: organizations_membersOrderByRelationAggregateInput
    sheets?: sheetsOrderByRelationAggregateInput
    videos?: videosOrderByRelationAggregateInput
  }

  export type individualsWhereUniqueInput = Prisma.AtLeast<{
    individual_id?: number
    individual_userName?: string
    AND?: individualsWhereInput | individualsWhereInput[]
    OR?: individualsWhereInput[]
    NOT?: individualsWhereInput | individualsWhereInput[]
    individual_name?: StringFilter<"individuals"> | string
    individual_currentIssue?: StringNullableFilter<"individuals"> | string | null
    individual_roles?: StringNullableFilter<"individuals"> | string | null
    individual_description?: StringNullableFilter<"individuals"> | string | null
    collections?: CollectionsListRelationFilter
    entities?: EntitiesListRelationFilter
    entities_references?: Entities_referencesListRelationFilter
    groups_members?: Groups_membersListRelationFilter
    images?: ImagesListRelationFilter
    organizations_members?: Organizations_membersListRelationFilter
    sheets?: SheetsListRelationFilter
    videos?: VideosListRelationFilter
  }, "individual_id" | "individual_id" | "individual_userName">

  export type individualsOrderByWithAggregationInput = {
    individual_id?: SortOrder
    individual_userName?: SortOrder
    individual_name?: SortOrder
    individual_currentIssue?: SortOrderInput | SortOrder
    individual_roles?: SortOrderInput | SortOrder
    individual_description?: SortOrderInput | SortOrder
    _count?: individualsCountOrderByAggregateInput
    _avg?: individualsAvgOrderByAggregateInput
    _max?: individualsMaxOrderByAggregateInput
    _min?: individualsMinOrderByAggregateInput
    _sum?: individualsSumOrderByAggregateInput
  }

  export type individualsScalarWhereWithAggregatesInput = {
    AND?: individualsScalarWhereWithAggregatesInput | individualsScalarWhereWithAggregatesInput[]
    OR?: individualsScalarWhereWithAggregatesInput[]
    NOT?: individualsScalarWhereWithAggregatesInput | individualsScalarWhereWithAggregatesInput[]
    individual_id?: IntWithAggregatesFilter<"individuals"> | number
    individual_userName?: StringWithAggregatesFilter<"individuals"> | string
    individual_name?: StringWithAggregatesFilter<"individuals"> | string
    individual_currentIssue?: StringNullableWithAggregatesFilter<"individuals"> | string | null
    individual_roles?: StringNullableWithAggregatesFilter<"individuals"> | string | null
    individual_description?: StringNullableWithAggregatesFilter<"individuals"> | string | null
  }

  export type organizationsWhereInput = {
    AND?: organizationsWhereInput | organizationsWhereInput[]
    OR?: organizationsWhereInput[]
    NOT?: organizationsWhereInput | organizationsWhereInput[]
    organization_id?: IntFilter<"organizations"> | number
    organization_handle?: StringFilter<"organizations"> | string
    organization_name?: StringFilter<"organizations"> | string
    organization_currentIssue?: StringNullableFilter<"organizations"> | string | null
    organization_stances?: StringNullableFilter<"organizations"> | string | null
    organization_description?: StringNullableFilter<"organizations"> | string | null
    collections?: CollectionsListRelationFilter
    entities?: EntitiesListRelationFilter
    entities_references?: Entities_referencesListRelationFilter
    organizations_members?: Organizations_membersListRelationFilter
  }

  export type organizationsOrderByWithRelationInput = {
    organization_id?: SortOrder
    organization_handle?: SortOrder
    organization_name?: SortOrder
    organization_currentIssue?: SortOrderInput | SortOrder
    organization_stances?: SortOrderInput | SortOrder
    organization_description?: SortOrderInput | SortOrder
    collections?: collectionsOrderByRelationAggregateInput
    entities?: entitiesOrderByRelationAggregateInput
    entities_references?: entities_referencesOrderByRelationAggregateInput
    organizations_members?: organizations_membersOrderByRelationAggregateInput
  }

  export type organizationsWhereUniqueInput = Prisma.AtLeast<{
    organization_id?: number
    organization_handle?: string
    AND?: organizationsWhereInput | organizationsWhereInput[]
    OR?: organizationsWhereInput[]
    NOT?: organizationsWhereInput | organizationsWhereInput[]
    organization_name?: StringFilter<"organizations"> | string
    organization_currentIssue?: StringNullableFilter<"organizations"> | string | null
    organization_stances?: StringNullableFilter<"organizations"> | string | null
    organization_description?: StringNullableFilter<"organizations"> | string | null
    collections?: CollectionsListRelationFilter
    entities?: EntitiesListRelationFilter
    entities_references?: Entities_referencesListRelationFilter
    organizations_members?: Organizations_membersListRelationFilter
  }, "organization_id" | "organization_id" | "organization_handle">

  export type organizationsOrderByWithAggregationInput = {
    organization_id?: SortOrder
    organization_handle?: SortOrder
    organization_name?: SortOrder
    organization_currentIssue?: SortOrderInput | SortOrder
    organization_stances?: SortOrderInput | SortOrder
    organization_description?: SortOrderInput | SortOrder
    _count?: organizationsCountOrderByAggregateInput
    _avg?: organizationsAvgOrderByAggregateInput
    _max?: organizationsMaxOrderByAggregateInput
    _min?: organizationsMinOrderByAggregateInput
    _sum?: organizationsSumOrderByAggregateInput
  }

  export type organizationsScalarWhereWithAggregatesInput = {
    AND?: organizationsScalarWhereWithAggregatesInput | organizationsScalarWhereWithAggregatesInput[]
    OR?: organizationsScalarWhereWithAggregatesInput[]
    NOT?: organizationsScalarWhereWithAggregatesInput | organizationsScalarWhereWithAggregatesInput[]
    organization_id?: IntWithAggregatesFilter<"organizations"> | number
    organization_handle?: StringWithAggregatesFilter<"organizations"> | string
    organization_name?: StringWithAggregatesFilter<"organizations"> | string
    organization_currentIssue?: StringNullableWithAggregatesFilter<"organizations"> | string | null
    organization_stances?: StringNullableWithAggregatesFilter<"organizations"> | string | null
    organization_description?: StringNullableWithAggregatesFilter<"organizations"> | string | null
  }

  export type organizations_membersWhereInput = {
    AND?: organizations_membersWhereInput | organizations_membersWhereInput[]
    OR?: organizations_membersWhereInput[]
    NOT?: organizations_membersWhereInput | organizations_membersWhereInput[]
    organization_id?: IntFilter<"organizations_members"> | number
    individual_id?: IntFilter<"organizations_members"> | number
    individuals?: XOR<IndividualsRelationFilter, individualsWhereInput>
    organizations?: XOR<OrganizationsRelationFilter, organizationsWhereInput>
  }

  export type organizations_membersOrderByWithRelationInput = {
    organization_id?: SortOrder
    individual_id?: SortOrder
    individuals?: individualsOrderByWithRelationInput
    organizations?: organizationsOrderByWithRelationInput
  }

  export type organizations_membersWhereUniqueInput = Prisma.AtLeast<{
    organization_id_individual_id?: organizations_membersOrganization_idIndividual_idCompoundUniqueInput
    AND?: organizations_membersWhereInput | organizations_membersWhereInput[]
    OR?: organizations_membersWhereInput[]
    NOT?: organizations_membersWhereInput | organizations_membersWhereInput[]
    organization_id?: IntFilter<"organizations_members"> | number
    individual_id?: IntFilter<"organizations_members"> | number
    individuals?: XOR<IndividualsRelationFilter, individualsWhereInput>
    organizations?: XOR<OrganizationsRelationFilter, organizationsWhereInput>
  }, "organization_id_individual_id">

  export type organizations_membersOrderByWithAggregationInput = {
    organization_id?: SortOrder
    individual_id?: SortOrder
    _count?: organizations_membersCountOrderByAggregateInput
    _avg?: organizations_membersAvgOrderByAggregateInput
    _max?: organizations_membersMaxOrderByAggregateInput
    _min?: organizations_membersMinOrderByAggregateInput
    _sum?: organizations_membersSumOrderByAggregateInput
  }

  export type organizations_membersScalarWhereWithAggregatesInput = {
    AND?: organizations_membersScalarWhereWithAggregatesInput | organizations_membersScalarWhereWithAggregatesInput[]
    OR?: organizations_membersScalarWhereWithAggregatesInput[]
    NOT?: organizations_membersScalarWhereWithAggregatesInput | organizations_membersScalarWhereWithAggregatesInput[]
    organization_id?: IntWithAggregatesFilter<"organizations_members"> | number
    individual_id?: IntWithAggregatesFilter<"organizations_members"> | number
  }

  export type sheetsWhereInput = {
    AND?: sheetsWhereInput | sheetsWhereInput[]
    OR?: sheetsWhereInput[]
    NOT?: sheetsWhereInput | sheetsWhereInput[]
    sheet_id?: IntFilter<"sheets"> | number
    sheet_author_id?: IntFilter<"sheets"> | number
    sheet_title?: StringFilter<"sheets"> | string
    sheet_subject?: StringFilter<"sheets"> | string
    sheet_filename?: StringNullableFilter<"sheets"> | string | null
    sheet_data?: BytesFilter<"sheets"> | Buffer
    collections_sheets?: Collections_sheetsListRelationFilter
    entities_sheets?: Entities_sheetsListRelationFilter
    individuals?: XOR<IndividualsRelationFilter, individualsWhereInput>
  }

  export type sheetsOrderByWithRelationInput = {
    sheet_id?: SortOrder
    sheet_author_id?: SortOrder
    sheet_title?: SortOrder
    sheet_subject?: SortOrder
    sheet_filename?: SortOrderInput | SortOrder
    sheet_data?: SortOrder
    collections_sheets?: collections_sheetsOrderByRelationAggregateInput
    entities_sheets?: entities_sheetsOrderByRelationAggregateInput
    individuals?: individualsOrderByWithRelationInput
  }

  export type sheetsWhereUniqueInput = Prisma.AtLeast<{
    sheet_id?: number
    AND?: sheetsWhereInput | sheetsWhereInput[]
    OR?: sheetsWhereInput[]
    NOT?: sheetsWhereInput | sheetsWhereInput[]
    sheet_author_id?: IntFilter<"sheets"> | number
    sheet_title?: StringFilter<"sheets"> | string
    sheet_subject?: StringFilter<"sheets"> | string
    sheet_filename?: StringNullableFilter<"sheets"> | string | null
    sheet_data?: BytesFilter<"sheets"> | Buffer
    collections_sheets?: Collections_sheetsListRelationFilter
    entities_sheets?: Entities_sheetsListRelationFilter
    individuals?: XOR<IndividualsRelationFilter, individualsWhereInput>
  }, "sheet_id" | "sheet_id">

  export type sheetsOrderByWithAggregationInput = {
    sheet_id?: SortOrder
    sheet_author_id?: SortOrder
    sheet_title?: SortOrder
    sheet_subject?: SortOrder
    sheet_filename?: SortOrderInput | SortOrder
    sheet_data?: SortOrder
    _count?: sheetsCountOrderByAggregateInput
    _avg?: sheetsAvgOrderByAggregateInput
    _max?: sheetsMaxOrderByAggregateInput
    _min?: sheetsMinOrderByAggregateInput
    _sum?: sheetsSumOrderByAggregateInput
  }

  export type sheetsScalarWhereWithAggregatesInput = {
    AND?: sheetsScalarWhereWithAggregatesInput | sheetsScalarWhereWithAggregatesInput[]
    OR?: sheetsScalarWhereWithAggregatesInput[]
    NOT?: sheetsScalarWhereWithAggregatesInput | sheetsScalarWhereWithAggregatesInput[]
    sheet_id?: IntWithAggregatesFilter<"sheets"> | number
    sheet_author_id?: IntWithAggregatesFilter<"sheets"> | number
    sheet_title?: StringWithAggregatesFilter<"sheets"> | string
    sheet_subject?: StringWithAggregatesFilter<"sheets"> | string
    sheet_filename?: StringNullableWithAggregatesFilter<"sheets"> | string | null
    sheet_data?: BytesWithAggregatesFilter<"sheets"> | Buffer
  }

  export type user_credentialsWhereInput = {
    AND?: user_credentialsWhereInput | user_credentialsWhereInput[]
    OR?: user_credentialsWhereInput[]
    NOT?: user_credentialsWhereInput | user_credentialsWhereInput[]
    user_id?: IntFilter<"user_credentials"> | number
    username?: StringFilter<"user_credentials"> | string
    user_password?: StringFilter<"user_credentials"> | string
    user_first_name?: StringNullableFilter<"user_credentials"> | string | null
    user_last_name?: StringNullableFilter<"user_credentials"> | string | null
    user_email?: StringNullableFilter<"user_credentials"> | string | null
    user_phone_number?: StringNullableFilter<"user_credentials"> | string | null
  }

  export type user_credentialsOrderByWithRelationInput = {
    user_id?: SortOrder
    username?: SortOrder
    user_password?: SortOrder
    user_first_name?: SortOrderInput | SortOrder
    user_last_name?: SortOrderInput | SortOrder
    user_email?: SortOrderInput | SortOrder
    user_phone_number?: SortOrderInput | SortOrder
  }

  export type user_credentialsWhereUniqueInput = Prisma.AtLeast<{
    user_id?: number
    username?: string
    AND?: user_credentialsWhereInput | user_credentialsWhereInput[]
    OR?: user_credentialsWhereInput[]
    NOT?: user_credentialsWhereInput | user_credentialsWhereInput[]
    user_password?: StringFilter<"user_credentials"> | string
    user_first_name?: StringNullableFilter<"user_credentials"> | string | null
    user_last_name?: StringNullableFilter<"user_credentials"> | string | null
    user_email?: StringNullableFilter<"user_credentials"> | string | null
    user_phone_number?: StringNullableFilter<"user_credentials"> | string | null
  }, "user_id" | "user_id" | "username">

  export type user_credentialsOrderByWithAggregationInput = {
    user_id?: SortOrder
    username?: SortOrder
    user_password?: SortOrder
    user_first_name?: SortOrderInput | SortOrder
    user_last_name?: SortOrderInput | SortOrder
    user_email?: SortOrderInput | SortOrder
    user_phone_number?: SortOrderInput | SortOrder
    _count?: user_credentialsCountOrderByAggregateInput
    _avg?: user_credentialsAvgOrderByAggregateInput
    _max?: user_credentialsMaxOrderByAggregateInput
    _min?: user_credentialsMinOrderByAggregateInput
    _sum?: user_credentialsSumOrderByAggregateInput
  }

  export type user_credentialsScalarWhereWithAggregatesInput = {
    AND?: user_credentialsScalarWhereWithAggregatesInput | user_credentialsScalarWhereWithAggregatesInput[]
    OR?: user_credentialsScalarWhereWithAggregatesInput[]
    NOT?: user_credentialsScalarWhereWithAggregatesInput | user_credentialsScalarWhereWithAggregatesInput[]
    user_id?: IntWithAggregatesFilter<"user_credentials"> | number
    username?: StringWithAggregatesFilter<"user_credentials"> | string
    user_password?: StringWithAggregatesFilter<"user_credentials"> | string
    user_first_name?: StringNullableWithAggregatesFilter<"user_credentials"> | string | null
    user_last_name?: StringNullableWithAggregatesFilter<"user_credentials"> | string | null
    user_email?: StringNullableWithAggregatesFilter<"user_credentials"> | string | null
    user_phone_number?: StringNullableWithAggregatesFilter<"user_credentials"> | string | null
  }

  export type videosWhereInput = {
    AND?: videosWhereInput | videosWhereInput[]
    OR?: videosWhereInput[]
    NOT?: videosWhereInput | videosWhereInput[]
    video_id?: IntFilter<"videos"> | number
    video_creator_id?: IntFilter<"videos"> | number
    video_title?: StringFilter<"videos"> | string
    video_description?: StringFilter<"videos"> | string
    video_filename?: StringFilter<"videos"> | string
    video_data_id?: IntFilter<"videos"> | number
    collections_videos?: Collections_videosListRelationFilter
    entities_videos?: Entities_videosListRelationFilter
    individuals?: XOR<IndividualsRelationFilter, individualsWhereInput>
    videos_data?: XOR<Videos_dataRelationFilter, videos_dataWhereInput>
  }

  export type videosOrderByWithRelationInput = {
    video_id?: SortOrder
    video_creator_id?: SortOrder
    video_title?: SortOrder
    video_description?: SortOrder
    video_filename?: SortOrder
    video_data_id?: SortOrder
    collections_videos?: collections_videosOrderByRelationAggregateInput
    entities_videos?: entities_videosOrderByRelationAggregateInput
    individuals?: individualsOrderByWithRelationInput
    videos_data?: videos_dataOrderByWithRelationInput
  }

  export type videosWhereUniqueInput = Prisma.AtLeast<{
    video_id?: number
    AND?: videosWhereInput | videosWhereInput[]
    OR?: videosWhereInput[]
    NOT?: videosWhereInput | videosWhereInput[]
    video_creator_id?: IntFilter<"videos"> | number
    video_title?: StringFilter<"videos"> | string
    video_description?: StringFilter<"videos"> | string
    video_filename?: StringFilter<"videos"> | string
    video_data_id?: IntFilter<"videos"> | number
    collections_videos?: Collections_videosListRelationFilter
    entities_videos?: Entities_videosListRelationFilter
    individuals?: XOR<IndividualsRelationFilter, individualsWhereInput>
    videos_data?: XOR<Videos_dataRelationFilter, videos_dataWhereInput>
  }, "video_id" | "video_id">

  export type videosOrderByWithAggregationInput = {
    video_id?: SortOrder
    video_creator_id?: SortOrder
    video_title?: SortOrder
    video_description?: SortOrder
    video_filename?: SortOrder
    video_data_id?: SortOrder
    _count?: videosCountOrderByAggregateInput
    _avg?: videosAvgOrderByAggregateInput
    _max?: videosMaxOrderByAggregateInput
    _min?: videosMinOrderByAggregateInput
    _sum?: videosSumOrderByAggregateInput
  }

  export type videosScalarWhereWithAggregatesInput = {
    AND?: videosScalarWhereWithAggregatesInput | videosScalarWhereWithAggregatesInput[]
    OR?: videosScalarWhereWithAggregatesInput[]
    NOT?: videosScalarWhereWithAggregatesInput | videosScalarWhereWithAggregatesInput[]
    video_id?: IntWithAggregatesFilter<"videos"> | number
    video_creator_id?: IntWithAggregatesFilter<"videos"> | number
    video_title?: StringWithAggregatesFilter<"videos"> | string
    video_description?: StringWithAggregatesFilter<"videos"> | string
    video_filename?: StringWithAggregatesFilter<"videos"> | string
    video_data_id?: IntWithAggregatesFilter<"videos"> | number
  }

  export type videos_dataWhereInput = {
    AND?: videos_dataWhereInput | videos_dataWhereInput[]
    OR?: videos_dataWhereInput[]
    NOT?: videos_dataWhereInput | videos_dataWhereInput[]
    video_data_id?: IntFilter<"videos_data"> | number
    video_data?: BytesFilter<"videos_data"> | Buffer
    videos?: VideosListRelationFilter
  }

  export type videos_dataOrderByWithRelationInput = {
    video_data_id?: SortOrder
    video_data?: SortOrder
    videos?: videosOrderByRelationAggregateInput
  }

  export type videos_dataWhereUniqueInput = Prisma.AtLeast<{
    video_data_id?: number
    AND?: videos_dataWhereInput | videos_dataWhereInput[]
    OR?: videos_dataWhereInput[]
    NOT?: videos_dataWhereInput | videos_dataWhereInput[]
    video_data?: BytesFilter<"videos_data"> | Buffer
    videos?: VideosListRelationFilter
  }, "video_data_id" | "video_data_id">

  export type videos_dataOrderByWithAggregationInput = {
    video_data_id?: SortOrder
    video_data?: SortOrder
    _count?: videos_dataCountOrderByAggregateInput
    _avg?: videos_dataAvgOrderByAggregateInput
    _max?: videos_dataMaxOrderByAggregateInput
    _min?: videos_dataMinOrderByAggregateInput
    _sum?: videos_dataSumOrderByAggregateInput
  }

  export type videos_dataScalarWhereWithAggregatesInput = {
    AND?: videos_dataScalarWhereWithAggregatesInput | videos_dataScalarWhereWithAggregatesInput[]
    OR?: videos_dataScalarWhereWithAggregatesInput[]
    NOT?: videos_dataScalarWhereWithAggregatesInput | videos_dataScalarWhereWithAggregatesInput[]
    video_data_id?: IntWithAggregatesFilter<"videos_data"> | number
    video_data?: BytesWithAggregatesFilter<"videos_data"> | Buffer
  }

  export type collectionsCreateInput = {
    collection_name: string
    individuals?: individualsCreateNestedOneWithoutCollectionsInput
    organizations?: organizationsCreateNestedOneWithoutCollectionsInput
    groups?: groupsCreateNestedOneWithoutCollectionsInput
    collections_images?: collections_imagesCreateNestedManyWithoutCollectionsInput
    collections_sheets?: collections_sheetsCreateNestedManyWithoutCollectionsInput
    collections_videos?: collections_videosCreateNestedManyWithoutCollectionsInput
  }

  export type collectionsUncheckedCreateInput = {
    collection_id?: number
    collection_name: string
    individual_id?: number | null
    group_id?: number | null
    organization_id?: number | null
    collections_images?: collections_imagesUncheckedCreateNestedManyWithoutCollectionsInput
    collections_sheets?: collections_sheetsUncheckedCreateNestedManyWithoutCollectionsInput
    collections_videos?: collections_videosUncheckedCreateNestedManyWithoutCollectionsInput
  }

  export type collectionsUpdateInput = {
    collection_name?: StringFieldUpdateOperationsInput | string
    individuals?: individualsUpdateOneWithoutCollectionsNestedInput
    organizations?: organizationsUpdateOneWithoutCollectionsNestedInput
    groups?: groupsUpdateOneWithoutCollectionsNestedInput
    collections_images?: collections_imagesUpdateManyWithoutCollectionsNestedInput
    collections_sheets?: collections_sheetsUpdateManyWithoutCollectionsNestedInput
    collections_videos?: collections_videosUpdateManyWithoutCollectionsNestedInput
  }

  export type collectionsUncheckedUpdateInput = {
    collection_id?: IntFieldUpdateOperationsInput | number
    collection_name?: StringFieldUpdateOperationsInput | string
    individual_id?: NullableIntFieldUpdateOperationsInput | number | null
    group_id?: NullableIntFieldUpdateOperationsInput | number | null
    organization_id?: NullableIntFieldUpdateOperationsInput | number | null
    collections_images?: collections_imagesUncheckedUpdateManyWithoutCollectionsNestedInput
    collections_sheets?: collections_sheetsUncheckedUpdateManyWithoutCollectionsNestedInput
    collections_videos?: collections_videosUncheckedUpdateManyWithoutCollectionsNestedInput
  }

  export type collectionsCreateManyInput = {
    collection_id?: number
    collection_name: string
    individual_id?: number | null
    group_id?: number | null
    organization_id?: number | null
  }

  export type collectionsUpdateManyMutationInput = {
    collection_name?: StringFieldUpdateOperationsInput | string
  }

  export type collectionsUncheckedUpdateManyInput = {
    collection_id?: IntFieldUpdateOperationsInput | number
    collection_name?: StringFieldUpdateOperationsInput | string
    individual_id?: NullableIntFieldUpdateOperationsInput | number | null
    group_id?: NullableIntFieldUpdateOperationsInput | number | null
    organization_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type collections_imagesCreateInput = {
    date_added: Date | string
    pinned: boolean
    date_pinned?: Date | string | null
    collections: collectionsCreateNestedOneWithoutCollections_imagesInput
    images: imagesCreateNestedOneWithoutCollections_imagesInput
  }

  export type collections_imagesUncheckedCreateInput = {
    collections_images_id?: number
    collection_id: number
    image_id: number
    date_added: Date | string
    pinned: boolean
    date_pinned?: Date | string | null
  }

  export type collections_imagesUpdateInput = {
    date_added?: DateTimeFieldUpdateOperationsInput | Date | string
    pinned?: BoolFieldUpdateOperationsInput | boolean
    date_pinned?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    collections?: collectionsUpdateOneRequiredWithoutCollections_imagesNestedInput
    images?: imagesUpdateOneRequiredWithoutCollections_imagesNestedInput
  }

  export type collections_imagesUncheckedUpdateInput = {
    collections_images_id?: IntFieldUpdateOperationsInput | number
    collection_id?: IntFieldUpdateOperationsInput | number
    image_id?: IntFieldUpdateOperationsInput | number
    date_added?: DateTimeFieldUpdateOperationsInput | Date | string
    pinned?: BoolFieldUpdateOperationsInput | boolean
    date_pinned?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type collections_imagesCreateManyInput = {
    collections_images_id?: number
    collection_id: number
    image_id: number
    date_added: Date | string
    pinned: boolean
    date_pinned?: Date | string | null
  }

  export type collections_imagesUpdateManyMutationInput = {
    date_added?: DateTimeFieldUpdateOperationsInput | Date | string
    pinned?: BoolFieldUpdateOperationsInput | boolean
    date_pinned?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type collections_imagesUncheckedUpdateManyInput = {
    collections_images_id?: IntFieldUpdateOperationsInput | number
    collection_id?: IntFieldUpdateOperationsInput | number
    image_id?: IntFieldUpdateOperationsInput | number
    date_added?: DateTimeFieldUpdateOperationsInput | Date | string
    pinned?: BoolFieldUpdateOperationsInput | boolean
    date_pinned?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type collections_sheetsCreateInput = {
    date_added: Date | string
    pinned: boolean
    date_pinned?: Date | string | null
    collections: collectionsCreateNestedOneWithoutCollections_sheetsInput
    sheets: sheetsCreateNestedOneWithoutCollections_sheetsInput
  }

  export type collections_sheetsUncheckedCreateInput = {
    collections_sheets_id?: number
    collection_id: number
    sheet_id: number
    date_added: Date | string
    pinned: boolean
    date_pinned?: Date | string | null
  }

  export type collections_sheetsUpdateInput = {
    date_added?: DateTimeFieldUpdateOperationsInput | Date | string
    pinned?: BoolFieldUpdateOperationsInput | boolean
    date_pinned?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    collections?: collectionsUpdateOneRequiredWithoutCollections_sheetsNestedInput
    sheets?: sheetsUpdateOneRequiredWithoutCollections_sheetsNestedInput
  }

  export type collections_sheetsUncheckedUpdateInput = {
    collections_sheets_id?: IntFieldUpdateOperationsInput | number
    collection_id?: IntFieldUpdateOperationsInput | number
    sheet_id?: IntFieldUpdateOperationsInput | number
    date_added?: DateTimeFieldUpdateOperationsInput | Date | string
    pinned?: BoolFieldUpdateOperationsInput | boolean
    date_pinned?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type collections_sheetsCreateManyInput = {
    collections_sheets_id?: number
    collection_id: number
    sheet_id: number
    date_added: Date | string
    pinned: boolean
    date_pinned?: Date | string | null
  }

  export type collections_sheetsUpdateManyMutationInput = {
    date_added?: DateTimeFieldUpdateOperationsInput | Date | string
    pinned?: BoolFieldUpdateOperationsInput | boolean
    date_pinned?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type collections_sheetsUncheckedUpdateManyInput = {
    collections_sheets_id?: IntFieldUpdateOperationsInput | number
    collection_id?: IntFieldUpdateOperationsInput | number
    sheet_id?: IntFieldUpdateOperationsInput | number
    date_added?: DateTimeFieldUpdateOperationsInput | Date | string
    pinned?: BoolFieldUpdateOperationsInput | boolean
    date_pinned?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type collections_videosCreateInput = {
    date_added: Date | string
    pinned: boolean
    date_pinned?: Date | string | null
    collections: collectionsCreateNestedOneWithoutCollections_videosInput
    videos: videosCreateNestedOneWithoutCollections_videosInput
  }

  export type collections_videosUncheckedCreateInput = {
    collections_videos_id?: number
    collection_id: number
    video_id: number
    date_added: Date | string
    pinned: boolean
    date_pinned?: Date | string | null
  }

  export type collections_videosUpdateInput = {
    date_added?: DateTimeFieldUpdateOperationsInput | Date | string
    pinned?: BoolFieldUpdateOperationsInput | boolean
    date_pinned?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    collections?: collectionsUpdateOneRequiredWithoutCollections_videosNestedInput
    videos?: videosUpdateOneRequiredWithoutCollections_videosNestedInput
  }

  export type collections_videosUncheckedUpdateInput = {
    collections_videos_id?: IntFieldUpdateOperationsInput | number
    collection_id?: IntFieldUpdateOperationsInput | number
    video_id?: IntFieldUpdateOperationsInput | number
    date_added?: DateTimeFieldUpdateOperationsInput | Date | string
    pinned?: BoolFieldUpdateOperationsInput | boolean
    date_pinned?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type collections_videosCreateManyInput = {
    collections_videos_id?: number
    collection_id: number
    video_id: number
    date_added: Date | string
    pinned: boolean
    date_pinned?: Date | string | null
  }

  export type collections_videosUpdateManyMutationInput = {
    date_added?: DateTimeFieldUpdateOperationsInput | Date | string
    pinned?: BoolFieldUpdateOperationsInput | boolean
    date_pinned?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type collections_videosUncheckedUpdateManyInput = {
    collections_videos_id?: IntFieldUpdateOperationsInput | number
    collection_id?: IntFieldUpdateOperationsInput | number
    video_id?: IntFieldUpdateOperationsInput | number
    date_added?: DateTimeFieldUpdateOperationsInput | Date | string
    pinned?: BoolFieldUpdateOperationsInput | boolean
    date_pinned?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type entitiesCreateInput = {
    groups?: groupsCreateNestedOneWithoutEntitiesInput
    individuals?: individualsCreateNestedOneWithoutEntitiesInput
    organizations?: organizationsCreateNestedOneWithoutEntitiesInput
    entities_images?: entities_imagesCreateNestedManyWithoutEntitiesInput
    entities_sheets?: entities_sheetsCreateNestedManyWithoutEntitiesInput
    entities_videos?: entities_videosCreateNestedManyWithoutEntitiesInput
  }

  export type entitiesUncheckedCreateInput = {
    entity_id?: number
    individual_id?: number | null
    group_id?: number | null
    organization_id?: number | null
    entities_images?: entities_imagesUncheckedCreateNestedManyWithoutEntitiesInput
    entities_sheets?: entities_sheetsUncheckedCreateNestedManyWithoutEntitiesInput
    entities_videos?: entities_videosUncheckedCreateNestedManyWithoutEntitiesInput
  }

  export type entitiesUpdateInput = {
    groups?: groupsUpdateOneWithoutEntitiesNestedInput
    individuals?: individualsUpdateOneWithoutEntitiesNestedInput
    organizations?: organizationsUpdateOneWithoutEntitiesNestedInput
    entities_images?: entities_imagesUpdateManyWithoutEntitiesNestedInput
    entities_sheets?: entities_sheetsUpdateManyWithoutEntitiesNestedInput
    entities_videos?: entities_videosUpdateManyWithoutEntitiesNestedInput
  }

  export type entitiesUncheckedUpdateInput = {
    entity_id?: IntFieldUpdateOperationsInput | number
    individual_id?: NullableIntFieldUpdateOperationsInput | number | null
    group_id?: NullableIntFieldUpdateOperationsInput | number | null
    organization_id?: NullableIntFieldUpdateOperationsInput | number | null
    entities_images?: entities_imagesUncheckedUpdateManyWithoutEntitiesNestedInput
    entities_sheets?: entities_sheetsUncheckedUpdateManyWithoutEntitiesNestedInput
    entities_videos?: entities_videosUncheckedUpdateManyWithoutEntitiesNestedInput
  }

  export type entitiesCreateManyInput = {
    entity_id?: number
    individual_id?: number | null
    group_id?: number | null
    organization_id?: number | null
  }

  export type entitiesUpdateManyMutationInput = {

  }

  export type entitiesUncheckedUpdateManyInput = {
    entity_id?: IntFieldUpdateOperationsInput | number
    individual_id?: NullableIntFieldUpdateOperationsInput | number | null
    group_id?: NullableIntFieldUpdateOperationsInput | number | null
    organization_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type entities_imagesCreateInput = {
    date_added: Date | string
    pinned: boolean
    date_pinned?: Date | string | null
    entities: entitiesCreateNestedOneWithoutEntities_imagesInput
    images: imagesCreateNestedOneWithoutEntities_imagesInput
  }

  export type entities_imagesUncheckedCreateInput = {
    entities_images_id?: number
    entity_id: number
    image_id: number
    date_added: Date | string
    pinned: boolean
    date_pinned?: Date | string | null
  }

  export type entities_imagesUpdateInput = {
    date_added?: DateTimeFieldUpdateOperationsInput | Date | string
    pinned?: BoolFieldUpdateOperationsInput | boolean
    date_pinned?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    entities?: entitiesUpdateOneRequiredWithoutEntities_imagesNestedInput
    images?: imagesUpdateOneRequiredWithoutEntities_imagesNestedInput
  }

  export type entities_imagesUncheckedUpdateInput = {
    entities_images_id?: IntFieldUpdateOperationsInput | number
    entity_id?: IntFieldUpdateOperationsInput | number
    image_id?: IntFieldUpdateOperationsInput | number
    date_added?: DateTimeFieldUpdateOperationsInput | Date | string
    pinned?: BoolFieldUpdateOperationsInput | boolean
    date_pinned?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type entities_imagesCreateManyInput = {
    entities_images_id?: number
    entity_id: number
    image_id: number
    date_added: Date | string
    pinned: boolean
    date_pinned?: Date | string | null
  }

  export type entities_imagesUpdateManyMutationInput = {
    date_added?: DateTimeFieldUpdateOperationsInput | Date | string
    pinned?: BoolFieldUpdateOperationsInput | boolean
    date_pinned?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type entities_imagesUncheckedUpdateManyInput = {
    entities_images_id?: IntFieldUpdateOperationsInput | number
    entity_id?: IntFieldUpdateOperationsInput | number
    image_id?: IntFieldUpdateOperationsInput | number
    date_added?: DateTimeFieldUpdateOperationsInput | Date | string
    pinned?: BoolFieldUpdateOperationsInput | boolean
    date_pinned?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type entities_referencesCreateInput = {
    title: string
    author: string
    url: string
    groups?: groupsCreateNestedOneWithoutEntities_referencesInput
    individuals?: individualsCreateNestedOneWithoutEntities_referencesInput
    organizations?: organizationsCreateNestedOneWithoutEntities_referencesInput
  }

  export type entities_referencesUncheckedCreateInput = {
    reference_id?: number
    individual_id?: number | null
    group_id?: number | null
    organization_id?: number | null
    title: string
    author: string
    url: string
  }

  export type entities_referencesUpdateInput = {
    title?: StringFieldUpdateOperationsInput | string
    author?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    groups?: groupsUpdateOneWithoutEntities_referencesNestedInput
    individuals?: individualsUpdateOneWithoutEntities_referencesNestedInput
    organizations?: organizationsUpdateOneWithoutEntities_referencesNestedInput
  }

  export type entities_referencesUncheckedUpdateInput = {
    reference_id?: IntFieldUpdateOperationsInput | number
    individual_id?: NullableIntFieldUpdateOperationsInput | number | null
    group_id?: NullableIntFieldUpdateOperationsInput | number | null
    organization_id?: NullableIntFieldUpdateOperationsInput | number | null
    title?: StringFieldUpdateOperationsInput | string
    author?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
  }

  export type entities_referencesCreateManyInput = {
    reference_id?: number
    individual_id?: number | null
    group_id?: number | null
    organization_id?: number | null
    title: string
    author: string
    url: string
  }

  export type entities_referencesUpdateManyMutationInput = {
    title?: StringFieldUpdateOperationsInput | string
    author?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
  }

  export type entities_referencesUncheckedUpdateManyInput = {
    reference_id?: IntFieldUpdateOperationsInput | number
    individual_id?: NullableIntFieldUpdateOperationsInput | number | null
    group_id?: NullableIntFieldUpdateOperationsInput | number | null
    organization_id?: NullableIntFieldUpdateOperationsInput | number | null
    title?: StringFieldUpdateOperationsInput | string
    author?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
  }

  export type entities_sheetsCreateInput = {
    date_added: Date | string
    pinned: boolean
    date_pinned?: Date | string | null
    entities: entitiesCreateNestedOneWithoutEntities_sheetsInput
    sheets: sheetsCreateNestedOneWithoutEntities_sheetsInput
  }

  export type entities_sheetsUncheckedCreateInput = {
    entities_sheets_id?: number
    entity_id: number
    sheet_id: number
    date_added: Date | string
    pinned: boolean
    date_pinned?: Date | string | null
  }

  export type entities_sheetsUpdateInput = {
    date_added?: DateTimeFieldUpdateOperationsInput | Date | string
    pinned?: BoolFieldUpdateOperationsInput | boolean
    date_pinned?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    entities?: entitiesUpdateOneRequiredWithoutEntities_sheetsNestedInput
    sheets?: sheetsUpdateOneRequiredWithoutEntities_sheetsNestedInput
  }

  export type entities_sheetsUncheckedUpdateInput = {
    entities_sheets_id?: IntFieldUpdateOperationsInput | number
    entity_id?: IntFieldUpdateOperationsInput | number
    sheet_id?: IntFieldUpdateOperationsInput | number
    date_added?: DateTimeFieldUpdateOperationsInput | Date | string
    pinned?: BoolFieldUpdateOperationsInput | boolean
    date_pinned?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type entities_sheetsCreateManyInput = {
    entities_sheets_id?: number
    entity_id: number
    sheet_id: number
    date_added: Date | string
    pinned: boolean
    date_pinned?: Date | string | null
  }

  export type entities_sheetsUpdateManyMutationInput = {
    date_added?: DateTimeFieldUpdateOperationsInput | Date | string
    pinned?: BoolFieldUpdateOperationsInput | boolean
    date_pinned?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type entities_sheetsUncheckedUpdateManyInput = {
    entities_sheets_id?: IntFieldUpdateOperationsInput | number
    entity_id?: IntFieldUpdateOperationsInput | number
    sheet_id?: IntFieldUpdateOperationsInput | number
    date_added?: DateTimeFieldUpdateOperationsInput | Date | string
    pinned?: BoolFieldUpdateOperationsInput | boolean
    date_pinned?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type entities_videosCreateInput = {
    date_added: Date | string
    pinned: boolean
    date_pinned?: Date | string | null
    entities: entitiesCreateNestedOneWithoutEntities_videosInput
    videos: videosCreateNestedOneWithoutEntities_videosInput
  }

  export type entities_videosUncheckedCreateInput = {
    entities_videos_id?: number
    entity_id: number
    video_id: number
    date_added: Date | string
    pinned: boolean
    date_pinned?: Date | string | null
  }

  export type entities_videosUpdateInput = {
    date_added?: DateTimeFieldUpdateOperationsInput | Date | string
    pinned?: BoolFieldUpdateOperationsInput | boolean
    date_pinned?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    entities?: entitiesUpdateOneRequiredWithoutEntities_videosNestedInput
    videos?: videosUpdateOneRequiredWithoutEntities_videosNestedInput
  }

  export type entities_videosUncheckedUpdateInput = {
    entities_videos_id?: IntFieldUpdateOperationsInput | number
    entity_id?: IntFieldUpdateOperationsInput | number
    video_id?: IntFieldUpdateOperationsInput | number
    date_added?: DateTimeFieldUpdateOperationsInput | Date | string
    pinned?: BoolFieldUpdateOperationsInput | boolean
    date_pinned?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type entities_videosCreateManyInput = {
    entities_videos_id?: number
    entity_id: number
    video_id: number
    date_added: Date | string
    pinned: boolean
    date_pinned?: Date | string | null
  }

  export type entities_videosUpdateManyMutationInput = {
    date_added?: DateTimeFieldUpdateOperationsInput | Date | string
    pinned?: BoolFieldUpdateOperationsInput | boolean
    date_pinned?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type entities_videosUncheckedUpdateManyInput = {
    entities_videos_id?: IntFieldUpdateOperationsInput | number
    entity_id?: IntFieldUpdateOperationsInput | number
    video_id?: IntFieldUpdateOperationsInput | number
    date_added?: DateTimeFieldUpdateOperationsInput | Date | string
    pinned?: BoolFieldUpdateOperationsInput | boolean
    date_pinned?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type groupsCreateInput = {
    group_handle: string
    group_name: string
    group_currentIssue?: string | null
    group_stances?: string | null
    group_description?: string | null
    collections?: collectionsCreateNestedManyWithoutGroupsInput
    entities?: entitiesCreateNestedManyWithoutGroupsInput
    entities_references?: entities_referencesCreateNestedManyWithoutGroupsInput
    groups_members?: groups_membersCreateNestedManyWithoutGroupsInput
  }

  export type groupsUncheckedCreateInput = {
    group_id?: number
    group_handle: string
    group_name: string
    group_currentIssue?: string | null
    group_stances?: string | null
    group_description?: string | null
    collections?: collectionsUncheckedCreateNestedManyWithoutGroupsInput
    entities?: entitiesUncheckedCreateNestedManyWithoutGroupsInput
    entities_references?: entities_referencesUncheckedCreateNestedManyWithoutGroupsInput
    groups_members?: groups_membersUncheckedCreateNestedManyWithoutGroupsInput
  }

  export type groupsUpdateInput = {
    group_handle?: StringFieldUpdateOperationsInput | string
    group_name?: StringFieldUpdateOperationsInput | string
    group_currentIssue?: NullableStringFieldUpdateOperationsInput | string | null
    group_stances?: NullableStringFieldUpdateOperationsInput | string | null
    group_description?: NullableStringFieldUpdateOperationsInput | string | null
    collections?: collectionsUpdateManyWithoutGroupsNestedInput
    entities?: entitiesUpdateManyWithoutGroupsNestedInput
    entities_references?: entities_referencesUpdateManyWithoutGroupsNestedInput
    groups_members?: groups_membersUpdateManyWithoutGroupsNestedInput
  }

  export type groupsUncheckedUpdateInput = {
    group_id?: IntFieldUpdateOperationsInput | number
    group_handle?: StringFieldUpdateOperationsInput | string
    group_name?: StringFieldUpdateOperationsInput | string
    group_currentIssue?: NullableStringFieldUpdateOperationsInput | string | null
    group_stances?: NullableStringFieldUpdateOperationsInput | string | null
    group_description?: NullableStringFieldUpdateOperationsInput | string | null
    collections?: collectionsUncheckedUpdateManyWithoutGroupsNestedInput
    entities?: entitiesUncheckedUpdateManyWithoutGroupsNestedInput
    entities_references?: entities_referencesUncheckedUpdateManyWithoutGroupsNestedInput
    groups_members?: groups_membersUncheckedUpdateManyWithoutGroupsNestedInput
  }

  export type groupsCreateManyInput = {
    group_id?: number
    group_handle: string
    group_name: string
    group_currentIssue?: string | null
    group_stances?: string | null
    group_description?: string | null
  }

  export type groupsUpdateManyMutationInput = {
    group_handle?: StringFieldUpdateOperationsInput | string
    group_name?: StringFieldUpdateOperationsInput | string
    group_currentIssue?: NullableStringFieldUpdateOperationsInput | string | null
    group_stances?: NullableStringFieldUpdateOperationsInput | string | null
    group_description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type groupsUncheckedUpdateManyInput = {
    group_id?: IntFieldUpdateOperationsInput | number
    group_handle?: StringFieldUpdateOperationsInput | string
    group_name?: StringFieldUpdateOperationsInput | string
    group_currentIssue?: NullableStringFieldUpdateOperationsInput | string | null
    group_stances?: NullableStringFieldUpdateOperationsInput | string | null
    group_description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type groups_membersCreateInput = {
    groups: groupsCreateNestedOneWithoutGroups_membersInput
    individuals: individualsCreateNestedOneWithoutGroups_membersInput
  }

  export type groups_membersUncheckedCreateInput = {
    group_id: number
    individual_id: number
  }

  export type groups_membersUpdateInput = {
    groups?: groupsUpdateOneRequiredWithoutGroups_membersNestedInput
    individuals?: individualsUpdateOneRequiredWithoutGroups_membersNestedInput
  }

  export type groups_membersUncheckedUpdateInput = {
    group_id?: IntFieldUpdateOperationsInput | number
    individual_id?: IntFieldUpdateOperationsInput | number
  }

  export type groups_membersCreateManyInput = {
    group_id: number
    individual_id: number
  }

  export type groups_membersUpdateManyMutationInput = {

  }

  export type groups_membersUncheckedUpdateManyInput = {
    group_id?: IntFieldUpdateOperationsInput | number
    individual_id?: IntFieldUpdateOperationsInput | number
  }

  export type imagesCreateInput = {
    image_title: string
    image_description: string
    image_filename: string
    collections_images?: collections_imagesCreateNestedManyWithoutImagesInput
    entities_images?: entities_imagesCreateNestedManyWithoutImagesInput
    individuals: individualsCreateNestedOneWithoutImagesInput
    images_data: images_dataCreateNestedOneWithoutImagesInput
  }

  export type imagesUncheckedCreateInput = {
    image_id?: number
    image_creator_id: number
    image_title: string
    image_description: string
    image_filename: string
    image_data_id: number
    collections_images?: collections_imagesUncheckedCreateNestedManyWithoutImagesInput
    entities_images?: entities_imagesUncheckedCreateNestedManyWithoutImagesInput
  }

  export type imagesUpdateInput = {
    image_title?: StringFieldUpdateOperationsInput | string
    image_description?: StringFieldUpdateOperationsInput | string
    image_filename?: StringFieldUpdateOperationsInput | string
    collections_images?: collections_imagesUpdateManyWithoutImagesNestedInput
    entities_images?: entities_imagesUpdateManyWithoutImagesNestedInput
    individuals?: individualsUpdateOneRequiredWithoutImagesNestedInput
    images_data?: images_dataUpdateOneRequiredWithoutImagesNestedInput
  }

  export type imagesUncheckedUpdateInput = {
    image_id?: IntFieldUpdateOperationsInput | number
    image_creator_id?: IntFieldUpdateOperationsInput | number
    image_title?: StringFieldUpdateOperationsInput | string
    image_description?: StringFieldUpdateOperationsInput | string
    image_filename?: StringFieldUpdateOperationsInput | string
    image_data_id?: IntFieldUpdateOperationsInput | number
    collections_images?: collections_imagesUncheckedUpdateManyWithoutImagesNestedInput
    entities_images?: entities_imagesUncheckedUpdateManyWithoutImagesNestedInput
  }

  export type imagesCreateManyInput = {
    image_id?: number
    image_creator_id: number
    image_title: string
    image_description: string
    image_filename: string
    image_data_id: number
  }

  export type imagesUpdateManyMutationInput = {
    image_title?: StringFieldUpdateOperationsInput | string
    image_description?: StringFieldUpdateOperationsInput | string
    image_filename?: StringFieldUpdateOperationsInput | string
  }

  export type imagesUncheckedUpdateManyInput = {
    image_id?: IntFieldUpdateOperationsInput | number
    image_creator_id?: IntFieldUpdateOperationsInput | number
    image_title?: StringFieldUpdateOperationsInput | string
    image_description?: StringFieldUpdateOperationsInput | string
    image_filename?: StringFieldUpdateOperationsInput | string
    image_data_id?: IntFieldUpdateOperationsInput | number
  }

  export type images_dataCreateInput = {
    image_data: Buffer
    images?: imagesCreateNestedManyWithoutImages_dataInput
  }

  export type images_dataUncheckedCreateInput = {
    image_data_id?: number
    image_data: Buffer
    images?: imagesUncheckedCreateNestedManyWithoutImages_dataInput
  }

  export type images_dataUpdateInput = {
    image_data?: BytesFieldUpdateOperationsInput | Buffer
    images?: imagesUpdateManyWithoutImages_dataNestedInput
  }

  export type images_dataUncheckedUpdateInput = {
    image_data_id?: IntFieldUpdateOperationsInput | number
    image_data?: BytesFieldUpdateOperationsInput | Buffer
    images?: imagesUncheckedUpdateManyWithoutImages_dataNestedInput
  }

  export type images_dataCreateManyInput = {
    image_data_id?: number
    image_data: Buffer
  }

  export type images_dataUpdateManyMutationInput = {
    image_data?: BytesFieldUpdateOperationsInput | Buffer
  }

  export type images_dataUncheckedUpdateManyInput = {
    image_data_id?: IntFieldUpdateOperationsInput | number
    image_data?: BytesFieldUpdateOperationsInput | Buffer
  }

  export type individualsCreateInput = {
    individual_userName: string
    individual_name: string
    individual_currentIssue?: string | null
    individual_roles?: string | null
    individual_description?: string | null
    collections?: collectionsCreateNestedManyWithoutIndividualsInput
    entities?: entitiesCreateNestedManyWithoutIndividualsInput
    entities_references?: entities_referencesCreateNestedManyWithoutIndividualsInput
    groups_members?: groups_membersCreateNestedManyWithoutIndividualsInput
    images?: imagesCreateNestedManyWithoutIndividualsInput
    organizations_members?: organizations_membersCreateNestedManyWithoutIndividualsInput
    sheets?: sheetsCreateNestedManyWithoutIndividualsInput
    videos?: videosCreateNestedManyWithoutIndividualsInput
  }

  export type individualsUncheckedCreateInput = {
    individual_id?: number
    individual_userName: string
    individual_name: string
    individual_currentIssue?: string | null
    individual_roles?: string | null
    individual_description?: string | null
    collections?: collectionsUncheckedCreateNestedManyWithoutIndividualsInput
    entities?: entitiesUncheckedCreateNestedManyWithoutIndividualsInput
    entities_references?: entities_referencesUncheckedCreateNestedManyWithoutIndividualsInput
    groups_members?: groups_membersUncheckedCreateNestedManyWithoutIndividualsInput
    images?: imagesUncheckedCreateNestedManyWithoutIndividualsInput
    organizations_members?: organizations_membersUncheckedCreateNestedManyWithoutIndividualsInput
    sheets?: sheetsUncheckedCreateNestedManyWithoutIndividualsInput
    videos?: videosUncheckedCreateNestedManyWithoutIndividualsInput
  }

  export type individualsUpdateInput = {
    individual_userName?: StringFieldUpdateOperationsInput | string
    individual_name?: StringFieldUpdateOperationsInput | string
    individual_currentIssue?: NullableStringFieldUpdateOperationsInput | string | null
    individual_roles?: NullableStringFieldUpdateOperationsInput | string | null
    individual_description?: NullableStringFieldUpdateOperationsInput | string | null
    collections?: collectionsUpdateManyWithoutIndividualsNestedInput
    entities?: entitiesUpdateManyWithoutIndividualsNestedInput
    entities_references?: entities_referencesUpdateManyWithoutIndividualsNestedInput
    groups_members?: groups_membersUpdateManyWithoutIndividualsNestedInput
    images?: imagesUpdateManyWithoutIndividualsNestedInput
    organizations_members?: organizations_membersUpdateManyWithoutIndividualsNestedInput
    sheets?: sheetsUpdateManyWithoutIndividualsNestedInput
    videos?: videosUpdateManyWithoutIndividualsNestedInput
  }

  export type individualsUncheckedUpdateInput = {
    individual_id?: IntFieldUpdateOperationsInput | number
    individual_userName?: StringFieldUpdateOperationsInput | string
    individual_name?: StringFieldUpdateOperationsInput | string
    individual_currentIssue?: NullableStringFieldUpdateOperationsInput | string | null
    individual_roles?: NullableStringFieldUpdateOperationsInput | string | null
    individual_description?: NullableStringFieldUpdateOperationsInput | string | null
    collections?: collectionsUncheckedUpdateManyWithoutIndividualsNestedInput
    entities?: entitiesUncheckedUpdateManyWithoutIndividualsNestedInput
    entities_references?: entities_referencesUncheckedUpdateManyWithoutIndividualsNestedInput
    groups_members?: groups_membersUncheckedUpdateManyWithoutIndividualsNestedInput
    images?: imagesUncheckedUpdateManyWithoutIndividualsNestedInput
    organizations_members?: organizations_membersUncheckedUpdateManyWithoutIndividualsNestedInput
    sheets?: sheetsUncheckedUpdateManyWithoutIndividualsNestedInput
    videos?: videosUncheckedUpdateManyWithoutIndividualsNestedInput
  }

  export type individualsCreateManyInput = {
    individual_id?: number
    individual_userName: string
    individual_name: string
    individual_currentIssue?: string | null
    individual_roles?: string | null
    individual_description?: string | null
  }

  export type individualsUpdateManyMutationInput = {
    individual_userName?: StringFieldUpdateOperationsInput | string
    individual_name?: StringFieldUpdateOperationsInput | string
    individual_currentIssue?: NullableStringFieldUpdateOperationsInput | string | null
    individual_roles?: NullableStringFieldUpdateOperationsInput | string | null
    individual_description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type individualsUncheckedUpdateManyInput = {
    individual_id?: IntFieldUpdateOperationsInput | number
    individual_userName?: StringFieldUpdateOperationsInput | string
    individual_name?: StringFieldUpdateOperationsInput | string
    individual_currentIssue?: NullableStringFieldUpdateOperationsInput | string | null
    individual_roles?: NullableStringFieldUpdateOperationsInput | string | null
    individual_description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type organizationsCreateInput = {
    organization_handle: string
    organization_name: string
    organization_currentIssue?: string | null
    organization_stances?: string | null
    organization_description?: string | null
    collections?: collectionsCreateNestedManyWithoutOrganizationsInput
    entities?: entitiesCreateNestedManyWithoutOrganizationsInput
    entities_references?: entities_referencesCreateNestedManyWithoutOrganizationsInput
    organizations_members?: organizations_membersCreateNestedManyWithoutOrganizationsInput
  }

  export type organizationsUncheckedCreateInput = {
    organization_id?: number
    organization_handle: string
    organization_name: string
    organization_currentIssue?: string | null
    organization_stances?: string | null
    organization_description?: string | null
    collections?: collectionsUncheckedCreateNestedManyWithoutOrganizationsInput
    entities?: entitiesUncheckedCreateNestedManyWithoutOrganizationsInput
    entities_references?: entities_referencesUncheckedCreateNestedManyWithoutOrganizationsInput
    organizations_members?: organizations_membersUncheckedCreateNestedManyWithoutOrganizationsInput
  }

  export type organizationsUpdateInput = {
    organization_handle?: StringFieldUpdateOperationsInput | string
    organization_name?: StringFieldUpdateOperationsInput | string
    organization_currentIssue?: NullableStringFieldUpdateOperationsInput | string | null
    organization_stances?: NullableStringFieldUpdateOperationsInput | string | null
    organization_description?: NullableStringFieldUpdateOperationsInput | string | null
    collections?: collectionsUpdateManyWithoutOrganizationsNestedInput
    entities?: entitiesUpdateManyWithoutOrganizationsNestedInput
    entities_references?: entities_referencesUpdateManyWithoutOrganizationsNestedInput
    organizations_members?: organizations_membersUpdateManyWithoutOrganizationsNestedInput
  }

  export type organizationsUncheckedUpdateInput = {
    organization_id?: IntFieldUpdateOperationsInput | number
    organization_handle?: StringFieldUpdateOperationsInput | string
    organization_name?: StringFieldUpdateOperationsInput | string
    organization_currentIssue?: NullableStringFieldUpdateOperationsInput | string | null
    organization_stances?: NullableStringFieldUpdateOperationsInput | string | null
    organization_description?: NullableStringFieldUpdateOperationsInput | string | null
    collections?: collectionsUncheckedUpdateManyWithoutOrganizationsNestedInput
    entities?: entitiesUncheckedUpdateManyWithoutOrganizationsNestedInput
    entities_references?: entities_referencesUncheckedUpdateManyWithoutOrganizationsNestedInput
    organizations_members?: organizations_membersUncheckedUpdateManyWithoutOrganizationsNestedInput
  }

  export type organizationsCreateManyInput = {
    organization_id?: number
    organization_handle: string
    organization_name: string
    organization_currentIssue?: string | null
    organization_stances?: string | null
    organization_description?: string | null
  }

  export type organizationsUpdateManyMutationInput = {
    organization_handle?: StringFieldUpdateOperationsInput | string
    organization_name?: StringFieldUpdateOperationsInput | string
    organization_currentIssue?: NullableStringFieldUpdateOperationsInput | string | null
    organization_stances?: NullableStringFieldUpdateOperationsInput | string | null
    organization_description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type organizationsUncheckedUpdateManyInput = {
    organization_id?: IntFieldUpdateOperationsInput | number
    organization_handle?: StringFieldUpdateOperationsInput | string
    organization_name?: StringFieldUpdateOperationsInput | string
    organization_currentIssue?: NullableStringFieldUpdateOperationsInput | string | null
    organization_stances?: NullableStringFieldUpdateOperationsInput | string | null
    organization_description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type organizations_membersCreateInput = {
    individuals: individualsCreateNestedOneWithoutOrganizations_membersInput
    organizations: organizationsCreateNestedOneWithoutOrganizations_membersInput
  }

  export type organizations_membersUncheckedCreateInput = {
    organization_id: number
    individual_id: number
  }

  export type organizations_membersUpdateInput = {
    individuals?: individualsUpdateOneRequiredWithoutOrganizations_membersNestedInput
    organizations?: organizationsUpdateOneRequiredWithoutOrganizations_membersNestedInput
  }

  export type organizations_membersUncheckedUpdateInput = {
    organization_id?: IntFieldUpdateOperationsInput | number
    individual_id?: IntFieldUpdateOperationsInput | number
  }

  export type organizations_membersCreateManyInput = {
    organization_id: number
    individual_id: number
  }

  export type organizations_membersUpdateManyMutationInput = {

  }

  export type organizations_membersUncheckedUpdateManyInput = {
    organization_id?: IntFieldUpdateOperationsInput | number
    individual_id?: IntFieldUpdateOperationsInput | number
  }

  export type sheetsCreateInput = {
    sheet_title: string
    sheet_subject: string
    sheet_filename?: string | null
    sheet_data: Buffer
    collections_sheets?: collections_sheetsCreateNestedManyWithoutSheetsInput
    entities_sheets?: entities_sheetsCreateNestedManyWithoutSheetsInput
    individuals: individualsCreateNestedOneWithoutSheetsInput
  }

  export type sheetsUncheckedCreateInput = {
    sheet_id?: number
    sheet_author_id: number
    sheet_title: string
    sheet_subject: string
    sheet_filename?: string | null
    sheet_data: Buffer
    collections_sheets?: collections_sheetsUncheckedCreateNestedManyWithoutSheetsInput
    entities_sheets?: entities_sheetsUncheckedCreateNestedManyWithoutSheetsInput
  }

  export type sheetsUpdateInput = {
    sheet_title?: StringFieldUpdateOperationsInput | string
    sheet_subject?: StringFieldUpdateOperationsInput | string
    sheet_filename?: NullableStringFieldUpdateOperationsInput | string | null
    sheet_data?: BytesFieldUpdateOperationsInput | Buffer
    collections_sheets?: collections_sheetsUpdateManyWithoutSheetsNestedInput
    entities_sheets?: entities_sheetsUpdateManyWithoutSheetsNestedInput
    individuals?: individualsUpdateOneRequiredWithoutSheetsNestedInput
  }

  export type sheetsUncheckedUpdateInput = {
    sheet_id?: IntFieldUpdateOperationsInput | number
    sheet_author_id?: IntFieldUpdateOperationsInput | number
    sheet_title?: StringFieldUpdateOperationsInput | string
    sheet_subject?: StringFieldUpdateOperationsInput | string
    sheet_filename?: NullableStringFieldUpdateOperationsInput | string | null
    sheet_data?: BytesFieldUpdateOperationsInput | Buffer
    collections_sheets?: collections_sheetsUncheckedUpdateManyWithoutSheetsNestedInput
    entities_sheets?: entities_sheetsUncheckedUpdateManyWithoutSheetsNestedInput
  }

  export type sheetsCreateManyInput = {
    sheet_id?: number
    sheet_author_id: number
    sheet_title: string
    sheet_subject: string
    sheet_filename?: string | null
    sheet_data: Buffer
  }

  export type sheetsUpdateManyMutationInput = {
    sheet_title?: StringFieldUpdateOperationsInput | string
    sheet_subject?: StringFieldUpdateOperationsInput | string
    sheet_filename?: NullableStringFieldUpdateOperationsInput | string | null
    sheet_data?: BytesFieldUpdateOperationsInput | Buffer
  }

  export type sheetsUncheckedUpdateManyInput = {
    sheet_id?: IntFieldUpdateOperationsInput | number
    sheet_author_id?: IntFieldUpdateOperationsInput | number
    sheet_title?: StringFieldUpdateOperationsInput | string
    sheet_subject?: StringFieldUpdateOperationsInput | string
    sheet_filename?: NullableStringFieldUpdateOperationsInput | string | null
    sheet_data?: BytesFieldUpdateOperationsInput | Buffer
  }

  export type user_credentialsCreateInput = {
    username: string
    user_password: string
    user_first_name?: string | null
    user_last_name?: string | null
    user_email?: string | null
    user_phone_number?: string | null
  }

  export type user_credentialsUncheckedCreateInput = {
    user_id?: number
    username: string
    user_password: string
    user_first_name?: string | null
    user_last_name?: string | null
    user_email?: string | null
    user_phone_number?: string | null
  }

  export type user_credentialsUpdateInput = {
    username?: StringFieldUpdateOperationsInput | string
    user_password?: StringFieldUpdateOperationsInput | string
    user_first_name?: NullableStringFieldUpdateOperationsInput | string | null
    user_last_name?: NullableStringFieldUpdateOperationsInput | string | null
    user_email?: NullableStringFieldUpdateOperationsInput | string | null
    user_phone_number?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type user_credentialsUncheckedUpdateInput = {
    user_id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    user_password?: StringFieldUpdateOperationsInput | string
    user_first_name?: NullableStringFieldUpdateOperationsInput | string | null
    user_last_name?: NullableStringFieldUpdateOperationsInput | string | null
    user_email?: NullableStringFieldUpdateOperationsInput | string | null
    user_phone_number?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type user_credentialsCreateManyInput = {
    user_id?: number
    username: string
    user_password: string
    user_first_name?: string | null
    user_last_name?: string | null
    user_email?: string | null
    user_phone_number?: string | null
  }

  export type user_credentialsUpdateManyMutationInput = {
    username?: StringFieldUpdateOperationsInput | string
    user_password?: StringFieldUpdateOperationsInput | string
    user_first_name?: NullableStringFieldUpdateOperationsInput | string | null
    user_last_name?: NullableStringFieldUpdateOperationsInput | string | null
    user_email?: NullableStringFieldUpdateOperationsInput | string | null
    user_phone_number?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type user_credentialsUncheckedUpdateManyInput = {
    user_id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    user_password?: StringFieldUpdateOperationsInput | string
    user_first_name?: NullableStringFieldUpdateOperationsInput | string | null
    user_last_name?: NullableStringFieldUpdateOperationsInput | string | null
    user_email?: NullableStringFieldUpdateOperationsInput | string | null
    user_phone_number?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type videosCreateInput = {
    video_title: string
    video_description: string
    video_filename: string
    collections_videos?: collections_videosCreateNestedManyWithoutVideosInput
    entities_videos?: entities_videosCreateNestedManyWithoutVideosInput
    individuals: individualsCreateNestedOneWithoutVideosInput
    videos_data: videos_dataCreateNestedOneWithoutVideosInput
  }

  export type videosUncheckedCreateInput = {
    video_id?: number
    video_creator_id: number
    video_title: string
    video_description: string
    video_filename: string
    video_data_id: number
    collections_videos?: collections_videosUncheckedCreateNestedManyWithoutVideosInput
    entities_videos?: entities_videosUncheckedCreateNestedManyWithoutVideosInput
  }

  export type videosUpdateInput = {
    video_title?: StringFieldUpdateOperationsInput | string
    video_description?: StringFieldUpdateOperationsInput | string
    video_filename?: StringFieldUpdateOperationsInput | string
    collections_videos?: collections_videosUpdateManyWithoutVideosNestedInput
    entities_videos?: entities_videosUpdateManyWithoutVideosNestedInput
    individuals?: individualsUpdateOneRequiredWithoutVideosNestedInput
    videos_data?: videos_dataUpdateOneRequiredWithoutVideosNestedInput
  }

  export type videosUncheckedUpdateInput = {
    video_id?: IntFieldUpdateOperationsInput | number
    video_creator_id?: IntFieldUpdateOperationsInput | number
    video_title?: StringFieldUpdateOperationsInput | string
    video_description?: StringFieldUpdateOperationsInput | string
    video_filename?: StringFieldUpdateOperationsInput | string
    video_data_id?: IntFieldUpdateOperationsInput | number
    collections_videos?: collections_videosUncheckedUpdateManyWithoutVideosNestedInput
    entities_videos?: entities_videosUncheckedUpdateManyWithoutVideosNestedInput
  }

  export type videosCreateManyInput = {
    video_id?: number
    video_creator_id: number
    video_title: string
    video_description: string
    video_filename: string
    video_data_id: number
  }

  export type videosUpdateManyMutationInput = {
    video_title?: StringFieldUpdateOperationsInput | string
    video_description?: StringFieldUpdateOperationsInput | string
    video_filename?: StringFieldUpdateOperationsInput | string
  }

  export type videosUncheckedUpdateManyInput = {
    video_id?: IntFieldUpdateOperationsInput | number
    video_creator_id?: IntFieldUpdateOperationsInput | number
    video_title?: StringFieldUpdateOperationsInput | string
    video_description?: StringFieldUpdateOperationsInput | string
    video_filename?: StringFieldUpdateOperationsInput | string
    video_data_id?: IntFieldUpdateOperationsInput | number
  }

  export type videos_dataCreateInput = {
    video_data: Buffer
    videos?: videosCreateNestedManyWithoutVideos_dataInput
  }

  export type videos_dataUncheckedCreateInput = {
    video_data_id?: number
    video_data: Buffer
    videos?: videosUncheckedCreateNestedManyWithoutVideos_dataInput
  }

  export type videos_dataUpdateInput = {
    video_data?: BytesFieldUpdateOperationsInput | Buffer
    videos?: videosUpdateManyWithoutVideos_dataNestedInput
  }

  export type videos_dataUncheckedUpdateInput = {
    video_data_id?: IntFieldUpdateOperationsInput | number
    video_data?: BytesFieldUpdateOperationsInput | Buffer
    videos?: videosUncheckedUpdateManyWithoutVideos_dataNestedInput
  }

  export type videos_dataCreateManyInput = {
    video_data_id?: number
    video_data: Buffer
  }

  export type videos_dataUpdateManyMutationInput = {
    video_data?: BytesFieldUpdateOperationsInput | Buffer
  }

  export type videos_dataUncheckedUpdateManyInput = {
    video_data_id?: IntFieldUpdateOperationsInput | number
    video_data?: BytesFieldUpdateOperationsInput | Buffer
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type IndividualsNullableRelationFilter = {
    is?: individualsWhereInput | null
    isNot?: individualsWhereInput | null
  }

  export type OrganizationsNullableRelationFilter = {
    is?: organizationsWhereInput | null
    isNot?: organizationsWhereInput | null
  }

  export type GroupsNullableRelationFilter = {
    is?: groupsWhereInput | null
    isNot?: groupsWhereInput | null
  }

  export type Collections_imagesListRelationFilter = {
    every?: collections_imagesWhereInput
    some?: collections_imagesWhereInput
    none?: collections_imagesWhereInput
  }

  export type Collections_sheetsListRelationFilter = {
    every?: collections_sheetsWhereInput
    some?: collections_sheetsWhereInput
    none?: collections_sheetsWhereInput
  }

  export type Collections_videosListRelationFilter = {
    every?: collections_videosWhereInput
    some?: collections_videosWhereInput
    none?: collections_videosWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type collections_imagesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type collections_sheetsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type collections_videosOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type collectionsCountOrderByAggregateInput = {
    collection_id?: SortOrder
    collection_name?: SortOrder
    individual_id?: SortOrder
    group_id?: SortOrder
    organization_id?: SortOrder
  }

  export type collectionsAvgOrderByAggregateInput = {
    collection_id?: SortOrder
    individual_id?: SortOrder
    group_id?: SortOrder
    organization_id?: SortOrder
  }

  export type collectionsMaxOrderByAggregateInput = {
    collection_id?: SortOrder
    collection_name?: SortOrder
    individual_id?: SortOrder
    group_id?: SortOrder
    organization_id?: SortOrder
  }

  export type collectionsMinOrderByAggregateInput = {
    collection_id?: SortOrder
    collection_name?: SortOrder
    individual_id?: SortOrder
    group_id?: SortOrder
    organization_id?: SortOrder
  }

  export type collectionsSumOrderByAggregateInput = {
    collection_id?: SortOrder
    individual_id?: SortOrder
    group_id?: SortOrder
    organization_id?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type CollectionsRelationFilter = {
    is?: collectionsWhereInput
    isNot?: collectionsWhereInput
  }

  export type ImagesRelationFilter = {
    is?: imagesWhereInput
    isNot?: imagesWhereInput
  }

  export type collections_imagesCountOrderByAggregateInput = {
    collections_images_id?: SortOrder
    collection_id?: SortOrder
    image_id?: SortOrder
    date_added?: SortOrder
    pinned?: SortOrder
    date_pinned?: SortOrder
  }

  export type collections_imagesAvgOrderByAggregateInput = {
    collections_images_id?: SortOrder
    collection_id?: SortOrder
    image_id?: SortOrder
  }

  export type collections_imagesMaxOrderByAggregateInput = {
    collections_images_id?: SortOrder
    collection_id?: SortOrder
    image_id?: SortOrder
    date_added?: SortOrder
    pinned?: SortOrder
    date_pinned?: SortOrder
  }

  export type collections_imagesMinOrderByAggregateInput = {
    collections_images_id?: SortOrder
    collection_id?: SortOrder
    image_id?: SortOrder
    date_added?: SortOrder
    pinned?: SortOrder
    date_pinned?: SortOrder
  }

  export type collections_imagesSumOrderByAggregateInput = {
    collections_images_id?: SortOrder
    collection_id?: SortOrder
    image_id?: SortOrder
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type SheetsRelationFilter = {
    is?: sheetsWhereInput
    isNot?: sheetsWhereInput
  }

  export type collections_sheetsCountOrderByAggregateInput = {
    collections_sheets_id?: SortOrder
    collection_id?: SortOrder
    sheet_id?: SortOrder
    date_added?: SortOrder
    pinned?: SortOrder
    date_pinned?: SortOrder
  }

  export type collections_sheetsAvgOrderByAggregateInput = {
    collections_sheets_id?: SortOrder
    collection_id?: SortOrder
    sheet_id?: SortOrder
  }

  export type collections_sheetsMaxOrderByAggregateInput = {
    collections_sheets_id?: SortOrder
    collection_id?: SortOrder
    sheet_id?: SortOrder
    date_added?: SortOrder
    pinned?: SortOrder
    date_pinned?: SortOrder
  }

  export type collections_sheetsMinOrderByAggregateInput = {
    collections_sheets_id?: SortOrder
    collection_id?: SortOrder
    sheet_id?: SortOrder
    date_added?: SortOrder
    pinned?: SortOrder
    date_pinned?: SortOrder
  }

  export type collections_sheetsSumOrderByAggregateInput = {
    collections_sheets_id?: SortOrder
    collection_id?: SortOrder
    sheet_id?: SortOrder
  }

  export type VideosRelationFilter = {
    is?: videosWhereInput
    isNot?: videosWhereInput
  }

  export type collections_videosCountOrderByAggregateInput = {
    collections_videos_id?: SortOrder
    collection_id?: SortOrder
    video_id?: SortOrder
    date_added?: SortOrder
    pinned?: SortOrder
    date_pinned?: SortOrder
  }

  export type collections_videosAvgOrderByAggregateInput = {
    collections_videos_id?: SortOrder
    collection_id?: SortOrder
    video_id?: SortOrder
  }

  export type collections_videosMaxOrderByAggregateInput = {
    collections_videos_id?: SortOrder
    collection_id?: SortOrder
    video_id?: SortOrder
    date_added?: SortOrder
    pinned?: SortOrder
    date_pinned?: SortOrder
  }

  export type collections_videosMinOrderByAggregateInput = {
    collections_videos_id?: SortOrder
    collection_id?: SortOrder
    video_id?: SortOrder
    date_added?: SortOrder
    pinned?: SortOrder
    date_pinned?: SortOrder
  }

  export type collections_videosSumOrderByAggregateInput = {
    collections_videos_id?: SortOrder
    collection_id?: SortOrder
    video_id?: SortOrder
  }

  export type Entities_imagesListRelationFilter = {
    every?: entities_imagesWhereInput
    some?: entities_imagesWhereInput
    none?: entities_imagesWhereInput
  }

  export type Entities_sheetsListRelationFilter = {
    every?: entities_sheetsWhereInput
    some?: entities_sheetsWhereInput
    none?: entities_sheetsWhereInput
  }

  export type Entities_videosListRelationFilter = {
    every?: entities_videosWhereInput
    some?: entities_videosWhereInput
    none?: entities_videosWhereInput
  }

  export type entities_imagesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type entities_sheetsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type entities_videosOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type entitiesCountOrderByAggregateInput = {
    entity_id?: SortOrder
    individual_id?: SortOrder
    group_id?: SortOrder
    organization_id?: SortOrder
  }

  export type entitiesAvgOrderByAggregateInput = {
    entity_id?: SortOrder
    individual_id?: SortOrder
    group_id?: SortOrder
    organization_id?: SortOrder
  }

  export type entitiesMaxOrderByAggregateInput = {
    entity_id?: SortOrder
    individual_id?: SortOrder
    group_id?: SortOrder
    organization_id?: SortOrder
  }

  export type entitiesMinOrderByAggregateInput = {
    entity_id?: SortOrder
    individual_id?: SortOrder
    group_id?: SortOrder
    organization_id?: SortOrder
  }

  export type entitiesSumOrderByAggregateInput = {
    entity_id?: SortOrder
    individual_id?: SortOrder
    group_id?: SortOrder
    organization_id?: SortOrder
  }

  export type EntitiesRelationFilter = {
    is?: entitiesWhereInput
    isNot?: entitiesWhereInput
  }

  export type entities_imagesCountOrderByAggregateInput = {
    entities_images_id?: SortOrder
    entity_id?: SortOrder
    image_id?: SortOrder
    date_added?: SortOrder
    pinned?: SortOrder
    date_pinned?: SortOrder
  }

  export type entities_imagesAvgOrderByAggregateInput = {
    entities_images_id?: SortOrder
    entity_id?: SortOrder
    image_id?: SortOrder
  }

  export type entities_imagesMaxOrderByAggregateInput = {
    entities_images_id?: SortOrder
    entity_id?: SortOrder
    image_id?: SortOrder
    date_added?: SortOrder
    pinned?: SortOrder
    date_pinned?: SortOrder
  }

  export type entities_imagesMinOrderByAggregateInput = {
    entities_images_id?: SortOrder
    entity_id?: SortOrder
    image_id?: SortOrder
    date_added?: SortOrder
    pinned?: SortOrder
    date_pinned?: SortOrder
  }

  export type entities_imagesSumOrderByAggregateInput = {
    entities_images_id?: SortOrder
    entity_id?: SortOrder
    image_id?: SortOrder
  }

  export type entities_referencesCountOrderByAggregateInput = {
    reference_id?: SortOrder
    individual_id?: SortOrder
    group_id?: SortOrder
    organization_id?: SortOrder
    title?: SortOrder
    author?: SortOrder
    url?: SortOrder
  }

  export type entities_referencesAvgOrderByAggregateInput = {
    reference_id?: SortOrder
    individual_id?: SortOrder
    group_id?: SortOrder
    organization_id?: SortOrder
  }

  export type entities_referencesMaxOrderByAggregateInput = {
    reference_id?: SortOrder
    individual_id?: SortOrder
    group_id?: SortOrder
    organization_id?: SortOrder
    title?: SortOrder
    author?: SortOrder
    url?: SortOrder
  }

  export type entities_referencesMinOrderByAggregateInput = {
    reference_id?: SortOrder
    individual_id?: SortOrder
    group_id?: SortOrder
    organization_id?: SortOrder
    title?: SortOrder
    author?: SortOrder
    url?: SortOrder
  }

  export type entities_referencesSumOrderByAggregateInput = {
    reference_id?: SortOrder
    individual_id?: SortOrder
    group_id?: SortOrder
    organization_id?: SortOrder
  }

  export type entities_sheetsCountOrderByAggregateInput = {
    entities_sheets_id?: SortOrder
    entity_id?: SortOrder
    sheet_id?: SortOrder
    date_added?: SortOrder
    pinned?: SortOrder
    date_pinned?: SortOrder
  }

  export type entities_sheetsAvgOrderByAggregateInput = {
    entities_sheets_id?: SortOrder
    entity_id?: SortOrder
    sheet_id?: SortOrder
  }

  export type entities_sheetsMaxOrderByAggregateInput = {
    entities_sheets_id?: SortOrder
    entity_id?: SortOrder
    sheet_id?: SortOrder
    date_added?: SortOrder
    pinned?: SortOrder
    date_pinned?: SortOrder
  }

  export type entities_sheetsMinOrderByAggregateInput = {
    entities_sheets_id?: SortOrder
    entity_id?: SortOrder
    sheet_id?: SortOrder
    date_added?: SortOrder
    pinned?: SortOrder
    date_pinned?: SortOrder
  }

  export type entities_sheetsSumOrderByAggregateInput = {
    entities_sheets_id?: SortOrder
    entity_id?: SortOrder
    sheet_id?: SortOrder
  }

  export type entities_videosCountOrderByAggregateInput = {
    entities_videos_id?: SortOrder
    entity_id?: SortOrder
    video_id?: SortOrder
    date_added?: SortOrder
    pinned?: SortOrder
    date_pinned?: SortOrder
  }

  export type entities_videosAvgOrderByAggregateInput = {
    entities_videos_id?: SortOrder
    entity_id?: SortOrder
    video_id?: SortOrder
  }

  export type entities_videosMaxOrderByAggregateInput = {
    entities_videos_id?: SortOrder
    entity_id?: SortOrder
    video_id?: SortOrder
    date_added?: SortOrder
    pinned?: SortOrder
    date_pinned?: SortOrder
  }

  export type entities_videosMinOrderByAggregateInput = {
    entities_videos_id?: SortOrder
    entity_id?: SortOrder
    video_id?: SortOrder
    date_added?: SortOrder
    pinned?: SortOrder
    date_pinned?: SortOrder
  }

  export type entities_videosSumOrderByAggregateInput = {
    entities_videos_id?: SortOrder
    entity_id?: SortOrder
    video_id?: SortOrder
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type CollectionsListRelationFilter = {
    every?: collectionsWhereInput
    some?: collectionsWhereInput
    none?: collectionsWhereInput
  }

  export type EntitiesListRelationFilter = {
    every?: entitiesWhereInput
    some?: entitiesWhereInput
    none?: entitiesWhereInput
  }

  export type Entities_referencesListRelationFilter = {
    every?: entities_referencesWhereInput
    some?: entities_referencesWhereInput
    none?: entities_referencesWhereInput
  }

  export type Groups_membersListRelationFilter = {
    every?: groups_membersWhereInput
    some?: groups_membersWhereInput
    none?: groups_membersWhereInput
  }

  export type collectionsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type entitiesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type entities_referencesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type groups_membersOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type groupsCountOrderByAggregateInput = {
    group_id?: SortOrder
    group_handle?: SortOrder
    group_name?: SortOrder
    group_currentIssue?: SortOrder
    group_stances?: SortOrder
    group_description?: SortOrder
  }

  export type groupsAvgOrderByAggregateInput = {
    group_id?: SortOrder
  }

  export type groupsMaxOrderByAggregateInput = {
    group_id?: SortOrder
    group_handle?: SortOrder
    group_name?: SortOrder
    group_currentIssue?: SortOrder
    group_stances?: SortOrder
    group_description?: SortOrder
  }

  export type groupsMinOrderByAggregateInput = {
    group_id?: SortOrder
    group_handle?: SortOrder
    group_name?: SortOrder
    group_currentIssue?: SortOrder
    group_stances?: SortOrder
    group_description?: SortOrder
  }

  export type groupsSumOrderByAggregateInput = {
    group_id?: SortOrder
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type GroupsRelationFilter = {
    is?: groupsWhereInput
    isNot?: groupsWhereInput
  }

  export type IndividualsRelationFilter = {
    is?: individualsWhereInput
    isNot?: individualsWhereInput
  }

  export type groups_membersGroup_idIndividual_idCompoundUniqueInput = {
    group_id: number
    individual_id: number
  }

  export type groups_membersCountOrderByAggregateInput = {
    group_id?: SortOrder
    individual_id?: SortOrder
  }

  export type groups_membersAvgOrderByAggregateInput = {
    group_id?: SortOrder
    individual_id?: SortOrder
  }

  export type groups_membersMaxOrderByAggregateInput = {
    group_id?: SortOrder
    individual_id?: SortOrder
  }

  export type groups_membersMinOrderByAggregateInput = {
    group_id?: SortOrder
    individual_id?: SortOrder
  }

  export type groups_membersSumOrderByAggregateInput = {
    group_id?: SortOrder
    individual_id?: SortOrder
  }

  export type Images_dataRelationFilter = {
    is?: images_dataWhereInput
    isNot?: images_dataWhereInput
  }

  export type imagesCountOrderByAggregateInput = {
    image_id?: SortOrder
    image_creator_id?: SortOrder
    image_title?: SortOrder
    image_description?: SortOrder
    image_filename?: SortOrder
    image_data_id?: SortOrder
  }

  export type imagesAvgOrderByAggregateInput = {
    image_id?: SortOrder
    image_creator_id?: SortOrder
    image_data_id?: SortOrder
  }

  export type imagesMaxOrderByAggregateInput = {
    image_id?: SortOrder
    image_creator_id?: SortOrder
    image_title?: SortOrder
    image_description?: SortOrder
    image_filename?: SortOrder
    image_data_id?: SortOrder
  }

  export type imagesMinOrderByAggregateInput = {
    image_id?: SortOrder
    image_creator_id?: SortOrder
    image_title?: SortOrder
    image_description?: SortOrder
    image_filename?: SortOrder
    image_data_id?: SortOrder
  }

  export type imagesSumOrderByAggregateInput = {
    image_id?: SortOrder
    image_creator_id?: SortOrder
    image_data_id?: SortOrder
  }

  export type BytesFilter<$PrismaModel = never> = {
    equals?: Buffer | BytesFieldRefInput<$PrismaModel>
    in?: Buffer[]
    notIn?: Buffer[]
    not?: NestedBytesFilter<$PrismaModel> | Buffer
  }

  export type ImagesListRelationFilter = {
    every?: imagesWhereInput
    some?: imagesWhereInput
    none?: imagesWhereInput
  }

  export type imagesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type images_dataCountOrderByAggregateInput = {
    image_data_id?: SortOrder
    image_data?: SortOrder
  }

  export type images_dataAvgOrderByAggregateInput = {
    image_data_id?: SortOrder
  }

  export type images_dataMaxOrderByAggregateInput = {
    image_data_id?: SortOrder
    image_data?: SortOrder
  }

  export type images_dataMinOrderByAggregateInput = {
    image_data_id?: SortOrder
    image_data?: SortOrder
  }

  export type images_dataSumOrderByAggregateInput = {
    image_data_id?: SortOrder
  }

  export type BytesWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Buffer | BytesFieldRefInput<$PrismaModel>
    in?: Buffer[]
    notIn?: Buffer[]
    not?: NestedBytesWithAggregatesFilter<$PrismaModel> | Buffer
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBytesFilter<$PrismaModel>
    _max?: NestedBytesFilter<$PrismaModel>
  }

  export type Organizations_membersListRelationFilter = {
    every?: organizations_membersWhereInput
    some?: organizations_membersWhereInput
    none?: organizations_membersWhereInput
  }

  export type SheetsListRelationFilter = {
    every?: sheetsWhereInput
    some?: sheetsWhereInput
    none?: sheetsWhereInput
  }

  export type VideosListRelationFilter = {
    every?: videosWhereInput
    some?: videosWhereInput
    none?: videosWhereInput
  }

  export type organizations_membersOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type sheetsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type videosOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type individualsCountOrderByAggregateInput = {
    individual_id?: SortOrder
    individual_userName?: SortOrder
    individual_name?: SortOrder
    individual_currentIssue?: SortOrder
    individual_roles?: SortOrder
    individual_description?: SortOrder
  }

  export type individualsAvgOrderByAggregateInput = {
    individual_id?: SortOrder
  }

  export type individualsMaxOrderByAggregateInput = {
    individual_id?: SortOrder
    individual_userName?: SortOrder
    individual_name?: SortOrder
    individual_currentIssue?: SortOrder
    individual_roles?: SortOrder
    individual_description?: SortOrder
  }

  export type individualsMinOrderByAggregateInput = {
    individual_id?: SortOrder
    individual_userName?: SortOrder
    individual_name?: SortOrder
    individual_currentIssue?: SortOrder
    individual_roles?: SortOrder
    individual_description?: SortOrder
  }

  export type individualsSumOrderByAggregateInput = {
    individual_id?: SortOrder
  }

  export type organizationsCountOrderByAggregateInput = {
    organization_id?: SortOrder
    organization_handle?: SortOrder
    organization_name?: SortOrder
    organization_currentIssue?: SortOrder
    organization_stances?: SortOrder
    organization_description?: SortOrder
  }

  export type organizationsAvgOrderByAggregateInput = {
    organization_id?: SortOrder
  }

  export type organizationsMaxOrderByAggregateInput = {
    organization_id?: SortOrder
    organization_handle?: SortOrder
    organization_name?: SortOrder
    organization_currentIssue?: SortOrder
    organization_stances?: SortOrder
    organization_description?: SortOrder
  }

  export type organizationsMinOrderByAggregateInput = {
    organization_id?: SortOrder
    organization_handle?: SortOrder
    organization_name?: SortOrder
    organization_currentIssue?: SortOrder
    organization_stances?: SortOrder
    organization_description?: SortOrder
  }

  export type organizationsSumOrderByAggregateInput = {
    organization_id?: SortOrder
  }

  export type OrganizationsRelationFilter = {
    is?: organizationsWhereInput
    isNot?: organizationsWhereInput
  }

  export type organizations_membersOrganization_idIndividual_idCompoundUniqueInput = {
    organization_id: number
    individual_id: number
  }

  export type organizations_membersCountOrderByAggregateInput = {
    organization_id?: SortOrder
    individual_id?: SortOrder
  }

  export type organizations_membersAvgOrderByAggregateInput = {
    organization_id?: SortOrder
    individual_id?: SortOrder
  }

  export type organizations_membersMaxOrderByAggregateInput = {
    organization_id?: SortOrder
    individual_id?: SortOrder
  }

  export type organizations_membersMinOrderByAggregateInput = {
    organization_id?: SortOrder
    individual_id?: SortOrder
  }

  export type organizations_membersSumOrderByAggregateInput = {
    organization_id?: SortOrder
    individual_id?: SortOrder
  }

  export type sheetsCountOrderByAggregateInput = {
    sheet_id?: SortOrder
    sheet_author_id?: SortOrder
    sheet_title?: SortOrder
    sheet_subject?: SortOrder
    sheet_filename?: SortOrder
    sheet_data?: SortOrder
  }

  export type sheetsAvgOrderByAggregateInput = {
    sheet_id?: SortOrder
    sheet_author_id?: SortOrder
  }

  export type sheetsMaxOrderByAggregateInput = {
    sheet_id?: SortOrder
    sheet_author_id?: SortOrder
    sheet_title?: SortOrder
    sheet_subject?: SortOrder
    sheet_filename?: SortOrder
    sheet_data?: SortOrder
  }

  export type sheetsMinOrderByAggregateInput = {
    sheet_id?: SortOrder
    sheet_author_id?: SortOrder
    sheet_title?: SortOrder
    sheet_subject?: SortOrder
    sheet_filename?: SortOrder
    sheet_data?: SortOrder
  }

  export type sheetsSumOrderByAggregateInput = {
    sheet_id?: SortOrder
    sheet_author_id?: SortOrder
  }

  export type user_credentialsCountOrderByAggregateInput = {
    user_id?: SortOrder
    username?: SortOrder
    user_password?: SortOrder
    user_first_name?: SortOrder
    user_last_name?: SortOrder
    user_email?: SortOrder
    user_phone_number?: SortOrder
  }

  export type user_credentialsAvgOrderByAggregateInput = {
    user_id?: SortOrder
  }

  export type user_credentialsMaxOrderByAggregateInput = {
    user_id?: SortOrder
    username?: SortOrder
    user_password?: SortOrder
    user_first_name?: SortOrder
    user_last_name?: SortOrder
    user_email?: SortOrder
    user_phone_number?: SortOrder
  }

  export type user_credentialsMinOrderByAggregateInput = {
    user_id?: SortOrder
    username?: SortOrder
    user_password?: SortOrder
    user_first_name?: SortOrder
    user_last_name?: SortOrder
    user_email?: SortOrder
    user_phone_number?: SortOrder
  }

  export type user_credentialsSumOrderByAggregateInput = {
    user_id?: SortOrder
  }

  export type Videos_dataRelationFilter = {
    is?: videos_dataWhereInput
    isNot?: videos_dataWhereInput
  }

  export type videosCountOrderByAggregateInput = {
    video_id?: SortOrder
    video_creator_id?: SortOrder
    video_title?: SortOrder
    video_description?: SortOrder
    video_filename?: SortOrder
    video_data_id?: SortOrder
  }

  export type videosAvgOrderByAggregateInput = {
    video_id?: SortOrder
    video_creator_id?: SortOrder
    video_data_id?: SortOrder
  }

  export type videosMaxOrderByAggregateInput = {
    video_id?: SortOrder
    video_creator_id?: SortOrder
    video_title?: SortOrder
    video_description?: SortOrder
    video_filename?: SortOrder
    video_data_id?: SortOrder
  }

  export type videosMinOrderByAggregateInput = {
    video_id?: SortOrder
    video_creator_id?: SortOrder
    video_title?: SortOrder
    video_description?: SortOrder
    video_filename?: SortOrder
    video_data_id?: SortOrder
  }

  export type videosSumOrderByAggregateInput = {
    video_id?: SortOrder
    video_creator_id?: SortOrder
    video_data_id?: SortOrder
  }

  export type videos_dataCountOrderByAggregateInput = {
    video_data_id?: SortOrder
    video_data?: SortOrder
  }

  export type videos_dataAvgOrderByAggregateInput = {
    video_data_id?: SortOrder
  }

  export type videos_dataMaxOrderByAggregateInput = {
    video_data_id?: SortOrder
    video_data?: SortOrder
  }

  export type videos_dataMinOrderByAggregateInput = {
    video_data_id?: SortOrder
    video_data?: SortOrder
  }

  export type videos_dataSumOrderByAggregateInput = {
    video_data_id?: SortOrder
  }

  export type individualsCreateNestedOneWithoutCollectionsInput = {
    create?: XOR<individualsCreateWithoutCollectionsInput, individualsUncheckedCreateWithoutCollectionsInput>
    connectOrCreate?: individualsCreateOrConnectWithoutCollectionsInput
    connect?: individualsWhereUniqueInput
  }

  export type organizationsCreateNestedOneWithoutCollectionsInput = {
    create?: XOR<organizationsCreateWithoutCollectionsInput, organizationsUncheckedCreateWithoutCollectionsInput>
    connectOrCreate?: organizationsCreateOrConnectWithoutCollectionsInput
    connect?: organizationsWhereUniqueInput
  }

  export type groupsCreateNestedOneWithoutCollectionsInput = {
    create?: XOR<groupsCreateWithoutCollectionsInput, groupsUncheckedCreateWithoutCollectionsInput>
    connectOrCreate?: groupsCreateOrConnectWithoutCollectionsInput
    connect?: groupsWhereUniqueInput
  }

  export type collections_imagesCreateNestedManyWithoutCollectionsInput = {
    create?: XOR<collections_imagesCreateWithoutCollectionsInput, collections_imagesUncheckedCreateWithoutCollectionsInput> | collections_imagesCreateWithoutCollectionsInput[] | collections_imagesUncheckedCreateWithoutCollectionsInput[]
    connectOrCreate?: collections_imagesCreateOrConnectWithoutCollectionsInput | collections_imagesCreateOrConnectWithoutCollectionsInput[]
    createMany?: collections_imagesCreateManyCollectionsInputEnvelope
    connect?: collections_imagesWhereUniqueInput | collections_imagesWhereUniqueInput[]
  }

  export type collections_sheetsCreateNestedManyWithoutCollectionsInput = {
    create?: XOR<collections_sheetsCreateWithoutCollectionsInput, collections_sheetsUncheckedCreateWithoutCollectionsInput> | collections_sheetsCreateWithoutCollectionsInput[] | collections_sheetsUncheckedCreateWithoutCollectionsInput[]
    connectOrCreate?: collections_sheetsCreateOrConnectWithoutCollectionsInput | collections_sheetsCreateOrConnectWithoutCollectionsInput[]
    createMany?: collections_sheetsCreateManyCollectionsInputEnvelope
    connect?: collections_sheetsWhereUniqueInput | collections_sheetsWhereUniqueInput[]
  }

  export type collections_videosCreateNestedManyWithoutCollectionsInput = {
    create?: XOR<collections_videosCreateWithoutCollectionsInput, collections_videosUncheckedCreateWithoutCollectionsInput> | collections_videosCreateWithoutCollectionsInput[] | collections_videosUncheckedCreateWithoutCollectionsInput[]
    connectOrCreate?: collections_videosCreateOrConnectWithoutCollectionsInput | collections_videosCreateOrConnectWithoutCollectionsInput[]
    createMany?: collections_videosCreateManyCollectionsInputEnvelope
    connect?: collections_videosWhereUniqueInput | collections_videosWhereUniqueInput[]
  }

  export type collections_imagesUncheckedCreateNestedManyWithoutCollectionsInput = {
    create?: XOR<collections_imagesCreateWithoutCollectionsInput, collections_imagesUncheckedCreateWithoutCollectionsInput> | collections_imagesCreateWithoutCollectionsInput[] | collections_imagesUncheckedCreateWithoutCollectionsInput[]
    connectOrCreate?: collections_imagesCreateOrConnectWithoutCollectionsInput | collections_imagesCreateOrConnectWithoutCollectionsInput[]
    createMany?: collections_imagesCreateManyCollectionsInputEnvelope
    connect?: collections_imagesWhereUniqueInput | collections_imagesWhereUniqueInput[]
  }

  export type collections_sheetsUncheckedCreateNestedManyWithoutCollectionsInput = {
    create?: XOR<collections_sheetsCreateWithoutCollectionsInput, collections_sheetsUncheckedCreateWithoutCollectionsInput> | collections_sheetsCreateWithoutCollectionsInput[] | collections_sheetsUncheckedCreateWithoutCollectionsInput[]
    connectOrCreate?: collections_sheetsCreateOrConnectWithoutCollectionsInput | collections_sheetsCreateOrConnectWithoutCollectionsInput[]
    createMany?: collections_sheetsCreateManyCollectionsInputEnvelope
    connect?: collections_sheetsWhereUniqueInput | collections_sheetsWhereUniqueInput[]
  }

  export type collections_videosUncheckedCreateNestedManyWithoutCollectionsInput = {
    create?: XOR<collections_videosCreateWithoutCollectionsInput, collections_videosUncheckedCreateWithoutCollectionsInput> | collections_videosCreateWithoutCollectionsInput[] | collections_videosUncheckedCreateWithoutCollectionsInput[]
    connectOrCreate?: collections_videosCreateOrConnectWithoutCollectionsInput | collections_videosCreateOrConnectWithoutCollectionsInput[]
    createMany?: collections_videosCreateManyCollectionsInputEnvelope
    connect?: collections_videosWhereUniqueInput | collections_videosWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type individualsUpdateOneWithoutCollectionsNestedInput = {
    create?: XOR<individualsCreateWithoutCollectionsInput, individualsUncheckedCreateWithoutCollectionsInput>
    connectOrCreate?: individualsCreateOrConnectWithoutCollectionsInput
    upsert?: individualsUpsertWithoutCollectionsInput
    disconnect?: individualsWhereInput | boolean
    delete?: individualsWhereInput | boolean
    connect?: individualsWhereUniqueInput
    update?: XOR<XOR<individualsUpdateToOneWithWhereWithoutCollectionsInput, individualsUpdateWithoutCollectionsInput>, individualsUncheckedUpdateWithoutCollectionsInput>
  }

  export type organizationsUpdateOneWithoutCollectionsNestedInput = {
    create?: XOR<organizationsCreateWithoutCollectionsInput, organizationsUncheckedCreateWithoutCollectionsInput>
    connectOrCreate?: organizationsCreateOrConnectWithoutCollectionsInput
    upsert?: organizationsUpsertWithoutCollectionsInput
    disconnect?: organizationsWhereInput | boolean
    delete?: organizationsWhereInput | boolean
    connect?: organizationsWhereUniqueInput
    update?: XOR<XOR<organizationsUpdateToOneWithWhereWithoutCollectionsInput, organizationsUpdateWithoutCollectionsInput>, organizationsUncheckedUpdateWithoutCollectionsInput>
  }

  export type groupsUpdateOneWithoutCollectionsNestedInput = {
    create?: XOR<groupsCreateWithoutCollectionsInput, groupsUncheckedCreateWithoutCollectionsInput>
    connectOrCreate?: groupsCreateOrConnectWithoutCollectionsInput
    upsert?: groupsUpsertWithoutCollectionsInput
    disconnect?: groupsWhereInput | boolean
    delete?: groupsWhereInput | boolean
    connect?: groupsWhereUniqueInput
    update?: XOR<XOR<groupsUpdateToOneWithWhereWithoutCollectionsInput, groupsUpdateWithoutCollectionsInput>, groupsUncheckedUpdateWithoutCollectionsInput>
  }

  export type collections_imagesUpdateManyWithoutCollectionsNestedInput = {
    create?: XOR<collections_imagesCreateWithoutCollectionsInput, collections_imagesUncheckedCreateWithoutCollectionsInput> | collections_imagesCreateWithoutCollectionsInput[] | collections_imagesUncheckedCreateWithoutCollectionsInput[]
    connectOrCreate?: collections_imagesCreateOrConnectWithoutCollectionsInput | collections_imagesCreateOrConnectWithoutCollectionsInput[]
    upsert?: collections_imagesUpsertWithWhereUniqueWithoutCollectionsInput | collections_imagesUpsertWithWhereUniqueWithoutCollectionsInput[]
    createMany?: collections_imagesCreateManyCollectionsInputEnvelope
    set?: collections_imagesWhereUniqueInput | collections_imagesWhereUniqueInput[]
    disconnect?: collections_imagesWhereUniqueInput | collections_imagesWhereUniqueInput[]
    delete?: collections_imagesWhereUniqueInput | collections_imagesWhereUniqueInput[]
    connect?: collections_imagesWhereUniqueInput | collections_imagesWhereUniqueInput[]
    update?: collections_imagesUpdateWithWhereUniqueWithoutCollectionsInput | collections_imagesUpdateWithWhereUniqueWithoutCollectionsInput[]
    updateMany?: collections_imagesUpdateManyWithWhereWithoutCollectionsInput | collections_imagesUpdateManyWithWhereWithoutCollectionsInput[]
    deleteMany?: collections_imagesScalarWhereInput | collections_imagesScalarWhereInput[]
  }

  export type collections_sheetsUpdateManyWithoutCollectionsNestedInput = {
    create?: XOR<collections_sheetsCreateWithoutCollectionsInput, collections_sheetsUncheckedCreateWithoutCollectionsInput> | collections_sheetsCreateWithoutCollectionsInput[] | collections_sheetsUncheckedCreateWithoutCollectionsInput[]
    connectOrCreate?: collections_sheetsCreateOrConnectWithoutCollectionsInput | collections_sheetsCreateOrConnectWithoutCollectionsInput[]
    upsert?: collections_sheetsUpsertWithWhereUniqueWithoutCollectionsInput | collections_sheetsUpsertWithWhereUniqueWithoutCollectionsInput[]
    createMany?: collections_sheetsCreateManyCollectionsInputEnvelope
    set?: collections_sheetsWhereUniqueInput | collections_sheetsWhereUniqueInput[]
    disconnect?: collections_sheetsWhereUniqueInput | collections_sheetsWhereUniqueInput[]
    delete?: collections_sheetsWhereUniqueInput | collections_sheetsWhereUniqueInput[]
    connect?: collections_sheetsWhereUniqueInput | collections_sheetsWhereUniqueInput[]
    update?: collections_sheetsUpdateWithWhereUniqueWithoutCollectionsInput | collections_sheetsUpdateWithWhereUniqueWithoutCollectionsInput[]
    updateMany?: collections_sheetsUpdateManyWithWhereWithoutCollectionsInput | collections_sheetsUpdateManyWithWhereWithoutCollectionsInput[]
    deleteMany?: collections_sheetsScalarWhereInput | collections_sheetsScalarWhereInput[]
  }

  export type collections_videosUpdateManyWithoutCollectionsNestedInput = {
    create?: XOR<collections_videosCreateWithoutCollectionsInput, collections_videosUncheckedCreateWithoutCollectionsInput> | collections_videosCreateWithoutCollectionsInput[] | collections_videosUncheckedCreateWithoutCollectionsInput[]
    connectOrCreate?: collections_videosCreateOrConnectWithoutCollectionsInput | collections_videosCreateOrConnectWithoutCollectionsInput[]
    upsert?: collections_videosUpsertWithWhereUniqueWithoutCollectionsInput | collections_videosUpsertWithWhereUniqueWithoutCollectionsInput[]
    createMany?: collections_videosCreateManyCollectionsInputEnvelope
    set?: collections_videosWhereUniqueInput | collections_videosWhereUniqueInput[]
    disconnect?: collections_videosWhereUniqueInput | collections_videosWhereUniqueInput[]
    delete?: collections_videosWhereUniqueInput | collections_videosWhereUniqueInput[]
    connect?: collections_videosWhereUniqueInput | collections_videosWhereUniqueInput[]
    update?: collections_videosUpdateWithWhereUniqueWithoutCollectionsInput | collections_videosUpdateWithWhereUniqueWithoutCollectionsInput[]
    updateMany?: collections_videosUpdateManyWithWhereWithoutCollectionsInput | collections_videosUpdateManyWithWhereWithoutCollectionsInput[]
    deleteMany?: collections_videosScalarWhereInput | collections_videosScalarWhereInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type collections_imagesUncheckedUpdateManyWithoutCollectionsNestedInput = {
    create?: XOR<collections_imagesCreateWithoutCollectionsInput, collections_imagesUncheckedCreateWithoutCollectionsInput> | collections_imagesCreateWithoutCollectionsInput[] | collections_imagesUncheckedCreateWithoutCollectionsInput[]
    connectOrCreate?: collections_imagesCreateOrConnectWithoutCollectionsInput | collections_imagesCreateOrConnectWithoutCollectionsInput[]
    upsert?: collections_imagesUpsertWithWhereUniqueWithoutCollectionsInput | collections_imagesUpsertWithWhereUniqueWithoutCollectionsInput[]
    createMany?: collections_imagesCreateManyCollectionsInputEnvelope
    set?: collections_imagesWhereUniqueInput | collections_imagesWhereUniqueInput[]
    disconnect?: collections_imagesWhereUniqueInput | collections_imagesWhereUniqueInput[]
    delete?: collections_imagesWhereUniqueInput | collections_imagesWhereUniqueInput[]
    connect?: collections_imagesWhereUniqueInput | collections_imagesWhereUniqueInput[]
    update?: collections_imagesUpdateWithWhereUniqueWithoutCollectionsInput | collections_imagesUpdateWithWhereUniqueWithoutCollectionsInput[]
    updateMany?: collections_imagesUpdateManyWithWhereWithoutCollectionsInput | collections_imagesUpdateManyWithWhereWithoutCollectionsInput[]
    deleteMany?: collections_imagesScalarWhereInput | collections_imagesScalarWhereInput[]
  }

  export type collections_sheetsUncheckedUpdateManyWithoutCollectionsNestedInput = {
    create?: XOR<collections_sheetsCreateWithoutCollectionsInput, collections_sheetsUncheckedCreateWithoutCollectionsInput> | collections_sheetsCreateWithoutCollectionsInput[] | collections_sheetsUncheckedCreateWithoutCollectionsInput[]
    connectOrCreate?: collections_sheetsCreateOrConnectWithoutCollectionsInput | collections_sheetsCreateOrConnectWithoutCollectionsInput[]
    upsert?: collections_sheetsUpsertWithWhereUniqueWithoutCollectionsInput | collections_sheetsUpsertWithWhereUniqueWithoutCollectionsInput[]
    createMany?: collections_sheetsCreateManyCollectionsInputEnvelope
    set?: collections_sheetsWhereUniqueInput | collections_sheetsWhereUniqueInput[]
    disconnect?: collections_sheetsWhereUniqueInput | collections_sheetsWhereUniqueInput[]
    delete?: collections_sheetsWhereUniqueInput | collections_sheetsWhereUniqueInput[]
    connect?: collections_sheetsWhereUniqueInput | collections_sheetsWhereUniqueInput[]
    update?: collections_sheetsUpdateWithWhereUniqueWithoutCollectionsInput | collections_sheetsUpdateWithWhereUniqueWithoutCollectionsInput[]
    updateMany?: collections_sheetsUpdateManyWithWhereWithoutCollectionsInput | collections_sheetsUpdateManyWithWhereWithoutCollectionsInput[]
    deleteMany?: collections_sheetsScalarWhereInput | collections_sheetsScalarWhereInput[]
  }

  export type collections_videosUncheckedUpdateManyWithoutCollectionsNestedInput = {
    create?: XOR<collections_videosCreateWithoutCollectionsInput, collections_videosUncheckedCreateWithoutCollectionsInput> | collections_videosCreateWithoutCollectionsInput[] | collections_videosUncheckedCreateWithoutCollectionsInput[]
    connectOrCreate?: collections_videosCreateOrConnectWithoutCollectionsInput | collections_videosCreateOrConnectWithoutCollectionsInput[]
    upsert?: collections_videosUpsertWithWhereUniqueWithoutCollectionsInput | collections_videosUpsertWithWhereUniqueWithoutCollectionsInput[]
    createMany?: collections_videosCreateManyCollectionsInputEnvelope
    set?: collections_videosWhereUniqueInput | collections_videosWhereUniqueInput[]
    disconnect?: collections_videosWhereUniqueInput | collections_videosWhereUniqueInput[]
    delete?: collections_videosWhereUniqueInput | collections_videosWhereUniqueInput[]
    connect?: collections_videosWhereUniqueInput | collections_videosWhereUniqueInput[]
    update?: collections_videosUpdateWithWhereUniqueWithoutCollectionsInput | collections_videosUpdateWithWhereUniqueWithoutCollectionsInput[]
    updateMany?: collections_videosUpdateManyWithWhereWithoutCollectionsInput | collections_videosUpdateManyWithWhereWithoutCollectionsInput[]
    deleteMany?: collections_videosScalarWhereInput | collections_videosScalarWhereInput[]
  }

  export type collectionsCreateNestedOneWithoutCollections_imagesInput = {
    create?: XOR<collectionsCreateWithoutCollections_imagesInput, collectionsUncheckedCreateWithoutCollections_imagesInput>
    connectOrCreate?: collectionsCreateOrConnectWithoutCollections_imagesInput
    connect?: collectionsWhereUniqueInput
  }

  export type imagesCreateNestedOneWithoutCollections_imagesInput = {
    create?: XOR<imagesCreateWithoutCollections_imagesInput, imagesUncheckedCreateWithoutCollections_imagesInput>
    connectOrCreate?: imagesCreateOrConnectWithoutCollections_imagesInput
    connect?: imagesWhereUniqueInput
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type collectionsUpdateOneRequiredWithoutCollections_imagesNestedInput = {
    create?: XOR<collectionsCreateWithoutCollections_imagesInput, collectionsUncheckedCreateWithoutCollections_imagesInput>
    connectOrCreate?: collectionsCreateOrConnectWithoutCollections_imagesInput
    upsert?: collectionsUpsertWithoutCollections_imagesInput
    connect?: collectionsWhereUniqueInput
    update?: XOR<XOR<collectionsUpdateToOneWithWhereWithoutCollections_imagesInput, collectionsUpdateWithoutCollections_imagesInput>, collectionsUncheckedUpdateWithoutCollections_imagesInput>
  }

  export type imagesUpdateOneRequiredWithoutCollections_imagesNestedInput = {
    create?: XOR<imagesCreateWithoutCollections_imagesInput, imagesUncheckedCreateWithoutCollections_imagesInput>
    connectOrCreate?: imagesCreateOrConnectWithoutCollections_imagesInput
    upsert?: imagesUpsertWithoutCollections_imagesInput
    connect?: imagesWhereUniqueInput
    update?: XOR<XOR<imagesUpdateToOneWithWhereWithoutCollections_imagesInput, imagesUpdateWithoutCollections_imagesInput>, imagesUncheckedUpdateWithoutCollections_imagesInput>
  }

  export type collectionsCreateNestedOneWithoutCollections_sheetsInput = {
    create?: XOR<collectionsCreateWithoutCollections_sheetsInput, collectionsUncheckedCreateWithoutCollections_sheetsInput>
    connectOrCreate?: collectionsCreateOrConnectWithoutCollections_sheetsInput
    connect?: collectionsWhereUniqueInput
  }

  export type sheetsCreateNestedOneWithoutCollections_sheetsInput = {
    create?: XOR<sheetsCreateWithoutCollections_sheetsInput, sheetsUncheckedCreateWithoutCollections_sheetsInput>
    connectOrCreate?: sheetsCreateOrConnectWithoutCollections_sheetsInput
    connect?: sheetsWhereUniqueInput
  }

  export type collectionsUpdateOneRequiredWithoutCollections_sheetsNestedInput = {
    create?: XOR<collectionsCreateWithoutCollections_sheetsInput, collectionsUncheckedCreateWithoutCollections_sheetsInput>
    connectOrCreate?: collectionsCreateOrConnectWithoutCollections_sheetsInput
    upsert?: collectionsUpsertWithoutCollections_sheetsInput
    connect?: collectionsWhereUniqueInput
    update?: XOR<XOR<collectionsUpdateToOneWithWhereWithoutCollections_sheetsInput, collectionsUpdateWithoutCollections_sheetsInput>, collectionsUncheckedUpdateWithoutCollections_sheetsInput>
  }

  export type sheetsUpdateOneRequiredWithoutCollections_sheetsNestedInput = {
    create?: XOR<sheetsCreateWithoutCollections_sheetsInput, sheetsUncheckedCreateWithoutCollections_sheetsInput>
    connectOrCreate?: sheetsCreateOrConnectWithoutCollections_sheetsInput
    upsert?: sheetsUpsertWithoutCollections_sheetsInput
    connect?: sheetsWhereUniqueInput
    update?: XOR<XOR<sheetsUpdateToOneWithWhereWithoutCollections_sheetsInput, sheetsUpdateWithoutCollections_sheetsInput>, sheetsUncheckedUpdateWithoutCollections_sheetsInput>
  }

  export type collectionsCreateNestedOneWithoutCollections_videosInput = {
    create?: XOR<collectionsCreateWithoutCollections_videosInput, collectionsUncheckedCreateWithoutCollections_videosInput>
    connectOrCreate?: collectionsCreateOrConnectWithoutCollections_videosInput
    connect?: collectionsWhereUniqueInput
  }

  export type videosCreateNestedOneWithoutCollections_videosInput = {
    create?: XOR<videosCreateWithoutCollections_videosInput, videosUncheckedCreateWithoutCollections_videosInput>
    connectOrCreate?: videosCreateOrConnectWithoutCollections_videosInput
    connect?: videosWhereUniqueInput
  }

  export type collectionsUpdateOneRequiredWithoutCollections_videosNestedInput = {
    create?: XOR<collectionsCreateWithoutCollections_videosInput, collectionsUncheckedCreateWithoutCollections_videosInput>
    connectOrCreate?: collectionsCreateOrConnectWithoutCollections_videosInput
    upsert?: collectionsUpsertWithoutCollections_videosInput
    connect?: collectionsWhereUniqueInput
    update?: XOR<XOR<collectionsUpdateToOneWithWhereWithoutCollections_videosInput, collectionsUpdateWithoutCollections_videosInput>, collectionsUncheckedUpdateWithoutCollections_videosInput>
  }

  export type videosUpdateOneRequiredWithoutCollections_videosNestedInput = {
    create?: XOR<videosCreateWithoutCollections_videosInput, videosUncheckedCreateWithoutCollections_videosInput>
    connectOrCreate?: videosCreateOrConnectWithoutCollections_videosInput
    upsert?: videosUpsertWithoutCollections_videosInput
    connect?: videosWhereUniqueInput
    update?: XOR<XOR<videosUpdateToOneWithWhereWithoutCollections_videosInput, videosUpdateWithoutCollections_videosInput>, videosUncheckedUpdateWithoutCollections_videosInput>
  }

  export type groupsCreateNestedOneWithoutEntitiesInput = {
    create?: XOR<groupsCreateWithoutEntitiesInput, groupsUncheckedCreateWithoutEntitiesInput>
    connectOrCreate?: groupsCreateOrConnectWithoutEntitiesInput
    connect?: groupsWhereUniqueInput
  }

  export type individualsCreateNestedOneWithoutEntitiesInput = {
    create?: XOR<individualsCreateWithoutEntitiesInput, individualsUncheckedCreateWithoutEntitiesInput>
    connectOrCreate?: individualsCreateOrConnectWithoutEntitiesInput
    connect?: individualsWhereUniqueInput
  }

  export type organizationsCreateNestedOneWithoutEntitiesInput = {
    create?: XOR<organizationsCreateWithoutEntitiesInput, organizationsUncheckedCreateWithoutEntitiesInput>
    connectOrCreate?: organizationsCreateOrConnectWithoutEntitiesInput
    connect?: organizationsWhereUniqueInput
  }

  export type entities_imagesCreateNestedManyWithoutEntitiesInput = {
    create?: XOR<entities_imagesCreateWithoutEntitiesInput, entities_imagesUncheckedCreateWithoutEntitiesInput> | entities_imagesCreateWithoutEntitiesInput[] | entities_imagesUncheckedCreateWithoutEntitiesInput[]
    connectOrCreate?: entities_imagesCreateOrConnectWithoutEntitiesInput | entities_imagesCreateOrConnectWithoutEntitiesInput[]
    createMany?: entities_imagesCreateManyEntitiesInputEnvelope
    connect?: entities_imagesWhereUniqueInput | entities_imagesWhereUniqueInput[]
  }

  export type entities_sheetsCreateNestedManyWithoutEntitiesInput = {
    create?: XOR<entities_sheetsCreateWithoutEntitiesInput, entities_sheetsUncheckedCreateWithoutEntitiesInput> | entities_sheetsCreateWithoutEntitiesInput[] | entities_sheetsUncheckedCreateWithoutEntitiesInput[]
    connectOrCreate?: entities_sheetsCreateOrConnectWithoutEntitiesInput | entities_sheetsCreateOrConnectWithoutEntitiesInput[]
    createMany?: entities_sheetsCreateManyEntitiesInputEnvelope
    connect?: entities_sheetsWhereUniqueInput | entities_sheetsWhereUniqueInput[]
  }

  export type entities_videosCreateNestedManyWithoutEntitiesInput = {
    create?: XOR<entities_videosCreateWithoutEntitiesInput, entities_videosUncheckedCreateWithoutEntitiesInput> | entities_videosCreateWithoutEntitiesInput[] | entities_videosUncheckedCreateWithoutEntitiesInput[]
    connectOrCreate?: entities_videosCreateOrConnectWithoutEntitiesInput | entities_videosCreateOrConnectWithoutEntitiesInput[]
    createMany?: entities_videosCreateManyEntitiesInputEnvelope
    connect?: entities_videosWhereUniqueInput | entities_videosWhereUniqueInput[]
  }

  export type entities_imagesUncheckedCreateNestedManyWithoutEntitiesInput = {
    create?: XOR<entities_imagesCreateWithoutEntitiesInput, entities_imagesUncheckedCreateWithoutEntitiesInput> | entities_imagesCreateWithoutEntitiesInput[] | entities_imagesUncheckedCreateWithoutEntitiesInput[]
    connectOrCreate?: entities_imagesCreateOrConnectWithoutEntitiesInput | entities_imagesCreateOrConnectWithoutEntitiesInput[]
    createMany?: entities_imagesCreateManyEntitiesInputEnvelope
    connect?: entities_imagesWhereUniqueInput | entities_imagesWhereUniqueInput[]
  }

  export type entities_sheetsUncheckedCreateNestedManyWithoutEntitiesInput = {
    create?: XOR<entities_sheetsCreateWithoutEntitiesInput, entities_sheetsUncheckedCreateWithoutEntitiesInput> | entities_sheetsCreateWithoutEntitiesInput[] | entities_sheetsUncheckedCreateWithoutEntitiesInput[]
    connectOrCreate?: entities_sheetsCreateOrConnectWithoutEntitiesInput | entities_sheetsCreateOrConnectWithoutEntitiesInput[]
    createMany?: entities_sheetsCreateManyEntitiesInputEnvelope
    connect?: entities_sheetsWhereUniqueInput | entities_sheetsWhereUniqueInput[]
  }

  export type entities_videosUncheckedCreateNestedManyWithoutEntitiesInput = {
    create?: XOR<entities_videosCreateWithoutEntitiesInput, entities_videosUncheckedCreateWithoutEntitiesInput> | entities_videosCreateWithoutEntitiesInput[] | entities_videosUncheckedCreateWithoutEntitiesInput[]
    connectOrCreate?: entities_videosCreateOrConnectWithoutEntitiesInput | entities_videosCreateOrConnectWithoutEntitiesInput[]
    createMany?: entities_videosCreateManyEntitiesInputEnvelope
    connect?: entities_videosWhereUniqueInput | entities_videosWhereUniqueInput[]
  }

  export type groupsUpdateOneWithoutEntitiesNestedInput = {
    create?: XOR<groupsCreateWithoutEntitiesInput, groupsUncheckedCreateWithoutEntitiesInput>
    connectOrCreate?: groupsCreateOrConnectWithoutEntitiesInput
    upsert?: groupsUpsertWithoutEntitiesInput
    disconnect?: groupsWhereInput | boolean
    delete?: groupsWhereInput | boolean
    connect?: groupsWhereUniqueInput
    update?: XOR<XOR<groupsUpdateToOneWithWhereWithoutEntitiesInput, groupsUpdateWithoutEntitiesInput>, groupsUncheckedUpdateWithoutEntitiesInput>
  }

  export type individualsUpdateOneWithoutEntitiesNestedInput = {
    create?: XOR<individualsCreateWithoutEntitiesInput, individualsUncheckedCreateWithoutEntitiesInput>
    connectOrCreate?: individualsCreateOrConnectWithoutEntitiesInput
    upsert?: individualsUpsertWithoutEntitiesInput
    disconnect?: individualsWhereInput | boolean
    delete?: individualsWhereInput | boolean
    connect?: individualsWhereUniqueInput
    update?: XOR<XOR<individualsUpdateToOneWithWhereWithoutEntitiesInput, individualsUpdateWithoutEntitiesInput>, individualsUncheckedUpdateWithoutEntitiesInput>
  }

  export type organizationsUpdateOneWithoutEntitiesNestedInput = {
    create?: XOR<organizationsCreateWithoutEntitiesInput, organizationsUncheckedCreateWithoutEntitiesInput>
    connectOrCreate?: organizationsCreateOrConnectWithoutEntitiesInput
    upsert?: organizationsUpsertWithoutEntitiesInput
    disconnect?: organizationsWhereInput | boolean
    delete?: organizationsWhereInput | boolean
    connect?: organizationsWhereUniqueInput
    update?: XOR<XOR<organizationsUpdateToOneWithWhereWithoutEntitiesInput, organizationsUpdateWithoutEntitiesInput>, organizationsUncheckedUpdateWithoutEntitiesInput>
  }

  export type entities_imagesUpdateManyWithoutEntitiesNestedInput = {
    create?: XOR<entities_imagesCreateWithoutEntitiesInput, entities_imagesUncheckedCreateWithoutEntitiesInput> | entities_imagesCreateWithoutEntitiesInput[] | entities_imagesUncheckedCreateWithoutEntitiesInput[]
    connectOrCreate?: entities_imagesCreateOrConnectWithoutEntitiesInput | entities_imagesCreateOrConnectWithoutEntitiesInput[]
    upsert?: entities_imagesUpsertWithWhereUniqueWithoutEntitiesInput | entities_imagesUpsertWithWhereUniqueWithoutEntitiesInput[]
    createMany?: entities_imagesCreateManyEntitiesInputEnvelope
    set?: entities_imagesWhereUniqueInput | entities_imagesWhereUniqueInput[]
    disconnect?: entities_imagesWhereUniqueInput | entities_imagesWhereUniqueInput[]
    delete?: entities_imagesWhereUniqueInput | entities_imagesWhereUniqueInput[]
    connect?: entities_imagesWhereUniqueInput | entities_imagesWhereUniqueInput[]
    update?: entities_imagesUpdateWithWhereUniqueWithoutEntitiesInput | entities_imagesUpdateWithWhereUniqueWithoutEntitiesInput[]
    updateMany?: entities_imagesUpdateManyWithWhereWithoutEntitiesInput | entities_imagesUpdateManyWithWhereWithoutEntitiesInput[]
    deleteMany?: entities_imagesScalarWhereInput | entities_imagesScalarWhereInput[]
  }

  export type entities_sheetsUpdateManyWithoutEntitiesNestedInput = {
    create?: XOR<entities_sheetsCreateWithoutEntitiesInput, entities_sheetsUncheckedCreateWithoutEntitiesInput> | entities_sheetsCreateWithoutEntitiesInput[] | entities_sheetsUncheckedCreateWithoutEntitiesInput[]
    connectOrCreate?: entities_sheetsCreateOrConnectWithoutEntitiesInput | entities_sheetsCreateOrConnectWithoutEntitiesInput[]
    upsert?: entities_sheetsUpsertWithWhereUniqueWithoutEntitiesInput | entities_sheetsUpsertWithWhereUniqueWithoutEntitiesInput[]
    createMany?: entities_sheetsCreateManyEntitiesInputEnvelope
    set?: entities_sheetsWhereUniqueInput | entities_sheetsWhereUniqueInput[]
    disconnect?: entities_sheetsWhereUniqueInput | entities_sheetsWhereUniqueInput[]
    delete?: entities_sheetsWhereUniqueInput | entities_sheetsWhereUniqueInput[]
    connect?: entities_sheetsWhereUniqueInput | entities_sheetsWhereUniqueInput[]
    update?: entities_sheetsUpdateWithWhereUniqueWithoutEntitiesInput | entities_sheetsUpdateWithWhereUniqueWithoutEntitiesInput[]
    updateMany?: entities_sheetsUpdateManyWithWhereWithoutEntitiesInput | entities_sheetsUpdateManyWithWhereWithoutEntitiesInput[]
    deleteMany?: entities_sheetsScalarWhereInput | entities_sheetsScalarWhereInput[]
  }

  export type entities_videosUpdateManyWithoutEntitiesNestedInput = {
    create?: XOR<entities_videosCreateWithoutEntitiesInput, entities_videosUncheckedCreateWithoutEntitiesInput> | entities_videosCreateWithoutEntitiesInput[] | entities_videosUncheckedCreateWithoutEntitiesInput[]
    connectOrCreate?: entities_videosCreateOrConnectWithoutEntitiesInput | entities_videosCreateOrConnectWithoutEntitiesInput[]
    upsert?: entities_videosUpsertWithWhereUniqueWithoutEntitiesInput | entities_videosUpsertWithWhereUniqueWithoutEntitiesInput[]
    createMany?: entities_videosCreateManyEntitiesInputEnvelope
    set?: entities_videosWhereUniqueInput | entities_videosWhereUniqueInput[]
    disconnect?: entities_videosWhereUniqueInput | entities_videosWhereUniqueInput[]
    delete?: entities_videosWhereUniqueInput | entities_videosWhereUniqueInput[]
    connect?: entities_videosWhereUniqueInput | entities_videosWhereUniqueInput[]
    update?: entities_videosUpdateWithWhereUniqueWithoutEntitiesInput | entities_videosUpdateWithWhereUniqueWithoutEntitiesInput[]
    updateMany?: entities_videosUpdateManyWithWhereWithoutEntitiesInput | entities_videosUpdateManyWithWhereWithoutEntitiesInput[]
    deleteMany?: entities_videosScalarWhereInput | entities_videosScalarWhereInput[]
  }

  export type entities_imagesUncheckedUpdateManyWithoutEntitiesNestedInput = {
    create?: XOR<entities_imagesCreateWithoutEntitiesInput, entities_imagesUncheckedCreateWithoutEntitiesInput> | entities_imagesCreateWithoutEntitiesInput[] | entities_imagesUncheckedCreateWithoutEntitiesInput[]
    connectOrCreate?: entities_imagesCreateOrConnectWithoutEntitiesInput | entities_imagesCreateOrConnectWithoutEntitiesInput[]
    upsert?: entities_imagesUpsertWithWhereUniqueWithoutEntitiesInput | entities_imagesUpsertWithWhereUniqueWithoutEntitiesInput[]
    createMany?: entities_imagesCreateManyEntitiesInputEnvelope
    set?: entities_imagesWhereUniqueInput | entities_imagesWhereUniqueInput[]
    disconnect?: entities_imagesWhereUniqueInput | entities_imagesWhereUniqueInput[]
    delete?: entities_imagesWhereUniqueInput | entities_imagesWhereUniqueInput[]
    connect?: entities_imagesWhereUniqueInput | entities_imagesWhereUniqueInput[]
    update?: entities_imagesUpdateWithWhereUniqueWithoutEntitiesInput | entities_imagesUpdateWithWhereUniqueWithoutEntitiesInput[]
    updateMany?: entities_imagesUpdateManyWithWhereWithoutEntitiesInput | entities_imagesUpdateManyWithWhereWithoutEntitiesInput[]
    deleteMany?: entities_imagesScalarWhereInput | entities_imagesScalarWhereInput[]
  }

  export type entities_sheetsUncheckedUpdateManyWithoutEntitiesNestedInput = {
    create?: XOR<entities_sheetsCreateWithoutEntitiesInput, entities_sheetsUncheckedCreateWithoutEntitiesInput> | entities_sheetsCreateWithoutEntitiesInput[] | entities_sheetsUncheckedCreateWithoutEntitiesInput[]
    connectOrCreate?: entities_sheetsCreateOrConnectWithoutEntitiesInput | entities_sheetsCreateOrConnectWithoutEntitiesInput[]
    upsert?: entities_sheetsUpsertWithWhereUniqueWithoutEntitiesInput | entities_sheetsUpsertWithWhereUniqueWithoutEntitiesInput[]
    createMany?: entities_sheetsCreateManyEntitiesInputEnvelope
    set?: entities_sheetsWhereUniqueInput | entities_sheetsWhereUniqueInput[]
    disconnect?: entities_sheetsWhereUniqueInput | entities_sheetsWhereUniqueInput[]
    delete?: entities_sheetsWhereUniqueInput | entities_sheetsWhereUniqueInput[]
    connect?: entities_sheetsWhereUniqueInput | entities_sheetsWhereUniqueInput[]
    update?: entities_sheetsUpdateWithWhereUniqueWithoutEntitiesInput | entities_sheetsUpdateWithWhereUniqueWithoutEntitiesInput[]
    updateMany?: entities_sheetsUpdateManyWithWhereWithoutEntitiesInput | entities_sheetsUpdateManyWithWhereWithoutEntitiesInput[]
    deleteMany?: entities_sheetsScalarWhereInput | entities_sheetsScalarWhereInput[]
  }

  export type entities_videosUncheckedUpdateManyWithoutEntitiesNestedInput = {
    create?: XOR<entities_videosCreateWithoutEntitiesInput, entities_videosUncheckedCreateWithoutEntitiesInput> | entities_videosCreateWithoutEntitiesInput[] | entities_videosUncheckedCreateWithoutEntitiesInput[]
    connectOrCreate?: entities_videosCreateOrConnectWithoutEntitiesInput | entities_videosCreateOrConnectWithoutEntitiesInput[]
    upsert?: entities_videosUpsertWithWhereUniqueWithoutEntitiesInput | entities_videosUpsertWithWhereUniqueWithoutEntitiesInput[]
    createMany?: entities_videosCreateManyEntitiesInputEnvelope
    set?: entities_videosWhereUniqueInput | entities_videosWhereUniqueInput[]
    disconnect?: entities_videosWhereUniqueInput | entities_videosWhereUniqueInput[]
    delete?: entities_videosWhereUniqueInput | entities_videosWhereUniqueInput[]
    connect?: entities_videosWhereUniqueInput | entities_videosWhereUniqueInput[]
    update?: entities_videosUpdateWithWhereUniqueWithoutEntitiesInput | entities_videosUpdateWithWhereUniqueWithoutEntitiesInput[]
    updateMany?: entities_videosUpdateManyWithWhereWithoutEntitiesInput | entities_videosUpdateManyWithWhereWithoutEntitiesInput[]
    deleteMany?: entities_videosScalarWhereInput | entities_videosScalarWhereInput[]
  }

  export type entitiesCreateNestedOneWithoutEntities_imagesInput = {
    create?: XOR<entitiesCreateWithoutEntities_imagesInput, entitiesUncheckedCreateWithoutEntities_imagesInput>
    connectOrCreate?: entitiesCreateOrConnectWithoutEntities_imagesInput
    connect?: entitiesWhereUniqueInput
  }

  export type imagesCreateNestedOneWithoutEntities_imagesInput = {
    create?: XOR<imagesCreateWithoutEntities_imagesInput, imagesUncheckedCreateWithoutEntities_imagesInput>
    connectOrCreate?: imagesCreateOrConnectWithoutEntities_imagesInput
    connect?: imagesWhereUniqueInput
  }

  export type entitiesUpdateOneRequiredWithoutEntities_imagesNestedInput = {
    create?: XOR<entitiesCreateWithoutEntities_imagesInput, entitiesUncheckedCreateWithoutEntities_imagesInput>
    connectOrCreate?: entitiesCreateOrConnectWithoutEntities_imagesInput
    upsert?: entitiesUpsertWithoutEntities_imagesInput
    connect?: entitiesWhereUniqueInput
    update?: XOR<XOR<entitiesUpdateToOneWithWhereWithoutEntities_imagesInput, entitiesUpdateWithoutEntities_imagesInput>, entitiesUncheckedUpdateWithoutEntities_imagesInput>
  }

  export type imagesUpdateOneRequiredWithoutEntities_imagesNestedInput = {
    create?: XOR<imagesCreateWithoutEntities_imagesInput, imagesUncheckedCreateWithoutEntities_imagesInput>
    connectOrCreate?: imagesCreateOrConnectWithoutEntities_imagesInput
    upsert?: imagesUpsertWithoutEntities_imagesInput
    connect?: imagesWhereUniqueInput
    update?: XOR<XOR<imagesUpdateToOneWithWhereWithoutEntities_imagesInput, imagesUpdateWithoutEntities_imagesInput>, imagesUncheckedUpdateWithoutEntities_imagesInput>
  }

  export type groupsCreateNestedOneWithoutEntities_referencesInput = {
    create?: XOR<groupsCreateWithoutEntities_referencesInput, groupsUncheckedCreateWithoutEntities_referencesInput>
    connectOrCreate?: groupsCreateOrConnectWithoutEntities_referencesInput
    connect?: groupsWhereUniqueInput
  }

  export type individualsCreateNestedOneWithoutEntities_referencesInput = {
    create?: XOR<individualsCreateWithoutEntities_referencesInput, individualsUncheckedCreateWithoutEntities_referencesInput>
    connectOrCreate?: individualsCreateOrConnectWithoutEntities_referencesInput
    connect?: individualsWhereUniqueInput
  }

  export type organizationsCreateNestedOneWithoutEntities_referencesInput = {
    create?: XOR<organizationsCreateWithoutEntities_referencesInput, organizationsUncheckedCreateWithoutEntities_referencesInput>
    connectOrCreate?: organizationsCreateOrConnectWithoutEntities_referencesInput
    connect?: organizationsWhereUniqueInput
  }

  export type groupsUpdateOneWithoutEntities_referencesNestedInput = {
    create?: XOR<groupsCreateWithoutEntities_referencesInput, groupsUncheckedCreateWithoutEntities_referencesInput>
    connectOrCreate?: groupsCreateOrConnectWithoutEntities_referencesInput
    upsert?: groupsUpsertWithoutEntities_referencesInput
    disconnect?: groupsWhereInput | boolean
    delete?: groupsWhereInput | boolean
    connect?: groupsWhereUniqueInput
    update?: XOR<XOR<groupsUpdateToOneWithWhereWithoutEntities_referencesInput, groupsUpdateWithoutEntities_referencesInput>, groupsUncheckedUpdateWithoutEntities_referencesInput>
  }

  export type individualsUpdateOneWithoutEntities_referencesNestedInput = {
    create?: XOR<individualsCreateWithoutEntities_referencesInput, individualsUncheckedCreateWithoutEntities_referencesInput>
    connectOrCreate?: individualsCreateOrConnectWithoutEntities_referencesInput
    upsert?: individualsUpsertWithoutEntities_referencesInput
    disconnect?: individualsWhereInput | boolean
    delete?: individualsWhereInput | boolean
    connect?: individualsWhereUniqueInput
    update?: XOR<XOR<individualsUpdateToOneWithWhereWithoutEntities_referencesInput, individualsUpdateWithoutEntities_referencesInput>, individualsUncheckedUpdateWithoutEntities_referencesInput>
  }

  export type organizationsUpdateOneWithoutEntities_referencesNestedInput = {
    create?: XOR<organizationsCreateWithoutEntities_referencesInput, organizationsUncheckedCreateWithoutEntities_referencesInput>
    connectOrCreate?: organizationsCreateOrConnectWithoutEntities_referencesInput
    upsert?: organizationsUpsertWithoutEntities_referencesInput
    disconnect?: organizationsWhereInput | boolean
    delete?: organizationsWhereInput | boolean
    connect?: organizationsWhereUniqueInput
    update?: XOR<XOR<organizationsUpdateToOneWithWhereWithoutEntities_referencesInput, organizationsUpdateWithoutEntities_referencesInput>, organizationsUncheckedUpdateWithoutEntities_referencesInput>
  }

  export type entitiesCreateNestedOneWithoutEntities_sheetsInput = {
    create?: XOR<entitiesCreateWithoutEntities_sheetsInput, entitiesUncheckedCreateWithoutEntities_sheetsInput>
    connectOrCreate?: entitiesCreateOrConnectWithoutEntities_sheetsInput
    connect?: entitiesWhereUniqueInput
  }

  export type sheetsCreateNestedOneWithoutEntities_sheetsInput = {
    create?: XOR<sheetsCreateWithoutEntities_sheetsInput, sheetsUncheckedCreateWithoutEntities_sheetsInput>
    connectOrCreate?: sheetsCreateOrConnectWithoutEntities_sheetsInput
    connect?: sheetsWhereUniqueInput
  }

  export type entitiesUpdateOneRequiredWithoutEntities_sheetsNestedInput = {
    create?: XOR<entitiesCreateWithoutEntities_sheetsInput, entitiesUncheckedCreateWithoutEntities_sheetsInput>
    connectOrCreate?: entitiesCreateOrConnectWithoutEntities_sheetsInput
    upsert?: entitiesUpsertWithoutEntities_sheetsInput
    connect?: entitiesWhereUniqueInput
    update?: XOR<XOR<entitiesUpdateToOneWithWhereWithoutEntities_sheetsInput, entitiesUpdateWithoutEntities_sheetsInput>, entitiesUncheckedUpdateWithoutEntities_sheetsInput>
  }

  export type sheetsUpdateOneRequiredWithoutEntities_sheetsNestedInput = {
    create?: XOR<sheetsCreateWithoutEntities_sheetsInput, sheetsUncheckedCreateWithoutEntities_sheetsInput>
    connectOrCreate?: sheetsCreateOrConnectWithoutEntities_sheetsInput
    upsert?: sheetsUpsertWithoutEntities_sheetsInput
    connect?: sheetsWhereUniqueInput
    update?: XOR<XOR<sheetsUpdateToOneWithWhereWithoutEntities_sheetsInput, sheetsUpdateWithoutEntities_sheetsInput>, sheetsUncheckedUpdateWithoutEntities_sheetsInput>
  }

  export type entitiesCreateNestedOneWithoutEntities_videosInput = {
    create?: XOR<entitiesCreateWithoutEntities_videosInput, entitiesUncheckedCreateWithoutEntities_videosInput>
    connectOrCreate?: entitiesCreateOrConnectWithoutEntities_videosInput
    connect?: entitiesWhereUniqueInput
  }

  export type videosCreateNestedOneWithoutEntities_videosInput = {
    create?: XOR<videosCreateWithoutEntities_videosInput, videosUncheckedCreateWithoutEntities_videosInput>
    connectOrCreate?: videosCreateOrConnectWithoutEntities_videosInput
    connect?: videosWhereUniqueInput
  }

  export type entitiesUpdateOneRequiredWithoutEntities_videosNestedInput = {
    create?: XOR<entitiesCreateWithoutEntities_videosInput, entitiesUncheckedCreateWithoutEntities_videosInput>
    connectOrCreate?: entitiesCreateOrConnectWithoutEntities_videosInput
    upsert?: entitiesUpsertWithoutEntities_videosInput
    connect?: entitiesWhereUniqueInput
    update?: XOR<XOR<entitiesUpdateToOneWithWhereWithoutEntities_videosInput, entitiesUpdateWithoutEntities_videosInput>, entitiesUncheckedUpdateWithoutEntities_videosInput>
  }

  export type videosUpdateOneRequiredWithoutEntities_videosNestedInput = {
    create?: XOR<videosCreateWithoutEntities_videosInput, videosUncheckedCreateWithoutEntities_videosInput>
    connectOrCreate?: videosCreateOrConnectWithoutEntities_videosInput
    upsert?: videosUpsertWithoutEntities_videosInput
    connect?: videosWhereUniqueInput
    update?: XOR<XOR<videosUpdateToOneWithWhereWithoutEntities_videosInput, videosUpdateWithoutEntities_videosInput>, videosUncheckedUpdateWithoutEntities_videosInput>
  }

  export type collectionsCreateNestedManyWithoutGroupsInput = {
    create?: XOR<collectionsCreateWithoutGroupsInput, collectionsUncheckedCreateWithoutGroupsInput> | collectionsCreateWithoutGroupsInput[] | collectionsUncheckedCreateWithoutGroupsInput[]
    connectOrCreate?: collectionsCreateOrConnectWithoutGroupsInput | collectionsCreateOrConnectWithoutGroupsInput[]
    createMany?: collectionsCreateManyGroupsInputEnvelope
    connect?: collectionsWhereUniqueInput | collectionsWhereUniqueInput[]
  }

  export type entitiesCreateNestedManyWithoutGroupsInput = {
    create?: XOR<entitiesCreateWithoutGroupsInput, entitiesUncheckedCreateWithoutGroupsInput> | entitiesCreateWithoutGroupsInput[] | entitiesUncheckedCreateWithoutGroupsInput[]
    connectOrCreate?: entitiesCreateOrConnectWithoutGroupsInput | entitiesCreateOrConnectWithoutGroupsInput[]
    createMany?: entitiesCreateManyGroupsInputEnvelope
    connect?: entitiesWhereUniqueInput | entitiesWhereUniqueInput[]
  }

  export type entities_referencesCreateNestedManyWithoutGroupsInput = {
    create?: XOR<entities_referencesCreateWithoutGroupsInput, entities_referencesUncheckedCreateWithoutGroupsInput> | entities_referencesCreateWithoutGroupsInput[] | entities_referencesUncheckedCreateWithoutGroupsInput[]
    connectOrCreate?: entities_referencesCreateOrConnectWithoutGroupsInput | entities_referencesCreateOrConnectWithoutGroupsInput[]
    createMany?: entities_referencesCreateManyGroupsInputEnvelope
    connect?: entities_referencesWhereUniqueInput | entities_referencesWhereUniqueInput[]
  }

  export type groups_membersCreateNestedManyWithoutGroupsInput = {
    create?: XOR<groups_membersCreateWithoutGroupsInput, groups_membersUncheckedCreateWithoutGroupsInput> | groups_membersCreateWithoutGroupsInput[] | groups_membersUncheckedCreateWithoutGroupsInput[]
    connectOrCreate?: groups_membersCreateOrConnectWithoutGroupsInput | groups_membersCreateOrConnectWithoutGroupsInput[]
    createMany?: groups_membersCreateManyGroupsInputEnvelope
    connect?: groups_membersWhereUniqueInput | groups_membersWhereUniqueInput[]
  }

  export type collectionsUncheckedCreateNestedManyWithoutGroupsInput = {
    create?: XOR<collectionsCreateWithoutGroupsInput, collectionsUncheckedCreateWithoutGroupsInput> | collectionsCreateWithoutGroupsInput[] | collectionsUncheckedCreateWithoutGroupsInput[]
    connectOrCreate?: collectionsCreateOrConnectWithoutGroupsInput | collectionsCreateOrConnectWithoutGroupsInput[]
    createMany?: collectionsCreateManyGroupsInputEnvelope
    connect?: collectionsWhereUniqueInput | collectionsWhereUniqueInput[]
  }

  export type entitiesUncheckedCreateNestedManyWithoutGroupsInput = {
    create?: XOR<entitiesCreateWithoutGroupsInput, entitiesUncheckedCreateWithoutGroupsInput> | entitiesCreateWithoutGroupsInput[] | entitiesUncheckedCreateWithoutGroupsInput[]
    connectOrCreate?: entitiesCreateOrConnectWithoutGroupsInput | entitiesCreateOrConnectWithoutGroupsInput[]
    createMany?: entitiesCreateManyGroupsInputEnvelope
    connect?: entitiesWhereUniqueInput | entitiesWhereUniqueInput[]
  }

  export type entities_referencesUncheckedCreateNestedManyWithoutGroupsInput = {
    create?: XOR<entities_referencesCreateWithoutGroupsInput, entities_referencesUncheckedCreateWithoutGroupsInput> | entities_referencesCreateWithoutGroupsInput[] | entities_referencesUncheckedCreateWithoutGroupsInput[]
    connectOrCreate?: entities_referencesCreateOrConnectWithoutGroupsInput | entities_referencesCreateOrConnectWithoutGroupsInput[]
    createMany?: entities_referencesCreateManyGroupsInputEnvelope
    connect?: entities_referencesWhereUniqueInput | entities_referencesWhereUniqueInput[]
  }

  export type groups_membersUncheckedCreateNestedManyWithoutGroupsInput = {
    create?: XOR<groups_membersCreateWithoutGroupsInput, groups_membersUncheckedCreateWithoutGroupsInput> | groups_membersCreateWithoutGroupsInput[] | groups_membersUncheckedCreateWithoutGroupsInput[]
    connectOrCreate?: groups_membersCreateOrConnectWithoutGroupsInput | groups_membersCreateOrConnectWithoutGroupsInput[]
    createMany?: groups_membersCreateManyGroupsInputEnvelope
    connect?: groups_membersWhereUniqueInput | groups_membersWhereUniqueInput[]
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type collectionsUpdateManyWithoutGroupsNestedInput = {
    create?: XOR<collectionsCreateWithoutGroupsInput, collectionsUncheckedCreateWithoutGroupsInput> | collectionsCreateWithoutGroupsInput[] | collectionsUncheckedCreateWithoutGroupsInput[]
    connectOrCreate?: collectionsCreateOrConnectWithoutGroupsInput | collectionsCreateOrConnectWithoutGroupsInput[]
    upsert?: collectionsUpsertWithWhereUniqueWithoutGroupsInput | collectionsUpsertWithWhereUniqueWithoutGroupsInput[]
    createMany?: collectionsCreateManyGroupsInputEnvelope
    set?: collectionsWhereUniqueInput | collectionsWhereUniqueInput[]
    disconnect?: collectionsWhereUniqueInput | collectionsWhereUniqueInput[]
    delete?: collectionsWhereUniqueInput | collectionsWhereUniqueInput[]
    connect?: collectionsWhereUniqueInput | collectionsWhereUniqueInput[]
    update?: collectionsUpdateWithWhereUniqueWithoutGroupsInput | collectionsUpdateWithWhereUniqueWithoutGroupsInput[]
    updateMany?: collectionsUpdateManyWithWhereWithoutGroupsInput | collectionsUpdateManyWithWhereWithoutGroupsInput[]
    deleteMany?: collectionsScalarWhereInput | collectionsScalarWhereInput[]
  }

  export type entitiesUpdateManyWithoutGroupsNestedInput = {
    create?: XOR<entitiesCreateWithoutGroupsInput, entitiesUncheckedCreateWithoutGroupsInput> | entitiesCreateWithoutGroupsInput[] | entitiesUncheckedCreateWithoutGroupsInput[]
    connectOrCreate?: entitiesCreateOrConnectWithoutGroupsInput | entitiesCreateOrConnectWithoutGroupsInput[]
    upsert?: entitiesUpsertWithWhereUniqueWithoutGroupsInput | entitiesUpsertWithWhereUniqueWithoutGroupsInput[]
    createMany?: entitiesCreateManyGroupsInputEnvelope
    set?: entitiesWhereUniqueInput | entitiesWhereUniqueInput[]
    disconnect?: entitiesWhereUniqueInput | entitiesWhereUniqueInput[]
    delete?: entitiesWhereUniqueInput | entitiesWhereUniqueInput[]
    connect?: entitiesWhereUniqueInput | entitiesWhereUniqueInput[]
    update?: entitiesUpdateWithWhereUniqueWithoutGroupsInput | entitiesUpdateWithWhereUniqueWithoutGroupsInput[]
    updateMany?: entitiesUpdateManyWithWhereWithoutGroupsInput | entitiesUpdateManyWithWhereWithoutGroupsInput[]
    deleteMany?: entitiesScalarWhereInput | entitiesScalarWhereInput[]
  }

  export type entities_referencesUpdateManyWithoutGroupsNestedInput = {
    create?: XOR<entities_referencesCreateWithoutGroupsInput, entities_referencesUncheckedCreateWithoutGroupsInput> | entities_referencesCreateWithoutGroupsInput[] | entities_referencesUncheckedCreateWithoutGroupsInput[]
    connectOrCreate?: entities_referencesCreateOrConnectWithoutGroupsInput | entities_referencesCreateOrConnectWithoutGroupsInput[]
    upsert?: entities_referencesUpsertWithWhereUniqueWithoutGroupsInput | entities_referencesUpsertWithWhereUniqueWithoutGroupsInput[]
    createMany?: entities_referencesCreateManyGroupsInputEnvelope
    set?: entities_referencesWhereUniqueInput | entities_referencesWhereUniqueInput[]
    disconnect?: entities_referencesWhereUniqueInput | entities_referencesWhereUniqueInput[]
    delete?: entities_referencesWhereUniqueInput | entities_referencesWhereUniqueInput[]
    connect?: entities_referencesWhereUniqueInput | entities_referencesWhereUniqueInput[]
    update?: entities_referencesUpdateWithWhereUniqueWithoutGroupsInput | entities_referencesUpdateWithWhereUniqueWithoutGroupsInput[]
    updateMany?: entities_referencesUpdateManyWithWhereWithoutGroupsInput | entities_referencesUpdateManyWithWhereWithoutGroupsInput[]
    deleteMany?: entities_referencesScalarWhereInput | entities_referencesScalarWhereInput[]
  }

  export type groups_membersUpdateManyWithoutGroupsNestedInput = {
    create?: XOR<groups_membersCreateWithoutGroupsInput, groups_membersUncheckedCreateWithoutGroupsInput> | groups_membersCreateWithoutGroupsInput[] | groups_membersUncheckedCreateWithoutGroupsInput[]
    connectOrCreate?: groups_membersCreateOrConnectWithoutGroupsInput | groups_membersCreateOrConnectWithoutGroupsInput[]
    upsert?: groups_membersUpsertWithWhereUniqueWithoutGroupsInput | groups_membersUpsertWithWhereUniqueWithoutGroupsInput[]
    createMany?: groups_membersCreateManyGroupsInputEnvelope
    set?: groups_membersWhereUniqueInput | groups_membersWhereUniqueInput[]
    disconnect?: groups_membersWhereUniqueInput | groups_membersWhereUniqueInput[]
    delete?: groups_membersWhereUniqueInput | groups_membersWhereUniqueInput[]
    connect?: groups_membersWhereUniqueInput | groups_membersWhereUniqueInput[]
    update?: groups_membersUpdateWithWhereUniqueWithoutGroupsInput | groups_membersUpdateWithWhereUniqueWithoutGroupsInput[]
    updateMany?: groups_membersUpdateManyWithWhereWithoutGroupsInput | groups_membersUpdateManyWithWhereWithoutGroupsInput[]
    deleteMany?: groups_membersScalarWhereInput | groups_membersScalarWhereInput[]
  }

  export type collectionsUncheckedUpdateManyWithoutGroupsNestedInput = {
    create?: XOR<collectionsCreateWithoutGroupsInput, collectionsUncheckedCreateWithoutGroupsInput> | collectionsCreateWithoutGroupsInput[] | collectionsUncheckedCreateWithoutGroupsInput[]
    connectOrCreate?: collectionsCreateOrConnectWithoutGroupsInput | collectionsCreateOrConnectWithoutGroupsInput[]
    upsert?: collectionsUpsertWithWhereUniqueWithoutGroupsInput | collectionsUpsertWithWhereUniqueWithoutGroupsInput[]
    createMany?: collectionsCreateManyGroupsInputEnvelope
    set?: collectionsWhereUniqueInput | collectionsWhereUniqueInput[]
    disconnect?: collectionsWhereUniqueInput | collectionsWhereUniqueInput[]
    delete?: collectionsWhereUniqueInput | collectionsWhereUniqueInput[]
    connect?: collectionsWhereUniqueInput | collectionsWhereUniqueInput[]
    update?: collectionsUpdateWithWhereUniqueWithoutGroupsInput | collectionsUpdateWithWhereUniqueWithoutGroupsInput[]
    updateMany?: collectionsUpdateManyWithWhereWithoutGroupsInput | collectionsUpdateManyWithWhereWithoutGroupsInput[]
    deleteMany?: collectionsScalarWhereInput | collectionsScalarWhereInput[]
  }

  export type entitiesUncheckedUpdateManyWithoutGroupsNestedInput = {
    create?: XOR<entitiesCreateWithoutGroupsInput, entitiesUncheckedCreateWithoutGroupsInput> | entitiesCreateWithoutGroupsInput[] | entitiesUncheckedCreateWithoutGroupsInput[]
    connectOrCreate?: entitiesCreateOrConnectWithoutGroupsInput | entitiesCreateOrConnectWithoutGroupsInput[]
    upsert?: entitiesUpsertWithWhereUniqueWithoutGroupsInput | entitiesUpsertWithWhereUniqueWithoutGroupsInput[]
    createMany?: entitiesCreateManyGroupsInputEnvelope
    set?: entitiesWhereUniqueInput | entitiesWhereUniqueInput[]
    disconnect?: entitiesWhereUniqueInput | entitiesWhereUniqueInput[]
    delete?: entitiesWhereUniqueInput | entitiesWhereUniqueInput[]
    connect?: entitiesWhereUniqueInput | entitiesWhereUniqueInput[]
    update?: entitiesUpdateWithWhereUniqueWithoutGroupsInput | entitiesUpdateWithWhereUniqueWithoutGroupsInput[]
    updateMany?: entitiesUpdateManyWithWhereWithoutGroupsInput | entitiesUpdateManyWithWhereWithoutGroupsInput[]
    deleteMany?: entitiesScalarWhereInput | entitiesScalarWhereInput[]
  }

  export type entities_referencesUncheckedUpdateManyWithoutGroupsNestedInput = {
    create?: XOR<entities_referencesCreateWithoutGroupsInput, entities_referencesUncheckedCreateWithoutGroupsInput> | entities_referencesCreateWithoutGroupsInput[] | entities_referencesUncheckedCreateWithoutGroupsInput[]
    connectOrCreate?: entities_referencesCreateOrConnectWithoutGroupsInput | entities_referencesCreateOrConnectWithoutGroupsInput[]
    upsert?: entities_referencesUpsertWithWhereUniqueWithoutGroupsInput | entities_referencesUpsertWithWhereUniqueWithoutGroupsInput[]
    createMany?: entities_referencesCreateManyGroupsInputEnvelope
    set?: entities_referencesWhereUniqueInput | entities_referencesWhereUniqueInput[]
    disconnect?: entities_referencesWhereUniqueInput | entities_referencesWhereUniqueInput[]
    delete?: entities_referencesWhereUniqueInput | entities_referencesWhereUniqueInput[]
    connect?: entities_referencesWhereUniqueInput | entities_referencesWhereUniqueInput[]
    update?: entities_referencesUpdateWithWhereUniqueWithoutGroupsInput | entities_referencesUpdateWithWhereUniqueWithoutGroupsInput[]
    updateMany?: entities_referencesUpdateManyWithWhereWithoutGroupsInput | entities_referencesUpdateManyWithWhereWithoutGroupsInput[]
    deleteMany?: entities_referencesScalarWhereInput | entities_referencesScalarWhereInput[]
  }

  export type groups_membersUncheckedUpdateManyWithoutGroupsNestedInput = {
    create?: XOR<groups_membersCreateWithoutGroupsInput, groups_membersUncheckedCreateWithoutGroupsInput> | groups_membersCreateWithoutGroupsInput[] | groups_membersUncheckedCreateWithoutGroupsInput[]
    connectOrCreate?: groups_membersCreateOrConnectWithoutGroupsInput | groups_membersCreateOrConnectWithoutGroupsInput[]
    upsert?: groups_membersUpsertWithWhereUniqueWithoutGroupsInput | groups_membersUpsertWithWhereUniqueWithoutGroupsInput[]
    createMany?: groups_membersCreateManyGroupsInputEnvelope
    set?: groups_membersWhereUniqueInput | groups_membersWhereUniqueInput[]
    disconnect?: groups_membersWhereUniqueInput | groups_membersWhereUniqueInput[]
    delete?: groups_membersWhereUniqueInput | groups_membersWhereUniqueInput[]
    connect?: groups_membersWhereUniqueInput | groups_membersWhereUniqueInput[]
    update?: groups_membersUpdateWithWhereUniqueWithoutGroupsInput | groups_membersUpdateWithWhereUniqueWithoutGroupsInput[]
    updateMany?: groups_membersUpdateManyWithWhereWithoutGroupsInput | groups_membersUpdateManyWithWhereWithoutGroupsInput[]
    deleteMany?: groups_membersScalarWhereInput | groups_membersScalarWhereInput[]
  }

  export type groupsCreateNestedOneWithoutGroups_membersInput = {
    create?: XOR<groupsCreateWithoutGroups_membersInput, groupsUncheckedCreateWithoutGroups_membersInput>
    connectOrCreate?: groupsCreateOrConnectWithoutGroups_membersInput
    connect?: groupsWhereUniqueInput
  }

  export type individualsCreateNestedOneWithoutGroups_membersInput = {
    create?: XOR<individualsCreateWithoutGroups_membersInput, individualsUncheckedCreateWithoutGroups_membersInput>
    connectOrCreate?: individualsCreateOrConnectWithoutGroups_membersInput
    connect?: individualsWhereUniqueInput
  }

  export type groupsUpdateOneRequiredWithoutGroups_membersNestedInput = {
    create?: XOR<groupsCreateWithoutGroups_membersInput, groupsUncheckedCreateWithoutGroups_membersInput>
    connectOrCreate?: groupsCreateOrConnectWithoutGroups_membersInput
    upsert?: groupsUpsertWithoutGroups_membersInput
    connect?: groupsWhereUniqueInput
    update?: XOR<XOR<groupsUpdateToOneWithWhereWithoutGroups_membersInput, groupsUpdateWithoutGroups_membersInput>, groupsUncheckedUpdateWithoutGroups_membersInput>
  }

  export type individualsUpdateOneRequiredWithoutGroups_membersNestedInput = {
    create?: XOR<individualsCreateWithoutGroups_membersInput, individualsUncheckedCreateWithoutGroups_membersInput>
    connectOrCreate?: individualsCreateOrConnectWithoutGroups_membersInput
    upsert?: individualsUpsertWithoutGroups_membersInput
    connect?: individualsWhereUniqueInput
    update?: XOR<XOR<individualsUpdateToOneWithWhereWithoutGroups_membersInput, individualsUpdateWithoutGroups_membersInput>, individualsUncheckedUpdateWithoutGroups_membersInput>
  }

  export type collections_imagesCreateNestedManyWithoutImagesInput = {
    create?: XOR<collections_imagesCreateWithoutImagesInput, collections_imagesUncheckedCreateWithoutImagesInput> | collections_imagesCreateWithoutImagesInput[] | collections_imagesUncheckedCreateWithoutImagesInput[]
    connectOrCreate?: collections_imagesCreateOrConnectWithoutImagesInput | collections_imagesCreateOrConnectWithoutImagesInput[]
    createMany?: collections_imagesCreateManyImagesInputEnvelope
    connect?: collections_imagesWhereUniqueInput | collections_imagesWhereUniqueInput[]
  }

  export type entities_imagesCreateNestedManyWithoutImagesInput = {
    create?: XOR<entities_imagesCreateWithoutImagesInput, entities_imagesUncheckedCreateWithoutImagesInput> | entities_imagesCreateWithoutImagesInput[] | entities_imagesUncheckedCreateWithoutImagesInput[]
    connectOrCreate?: entities_imagesCreateOrConnectWithoutImagesInput | entities_imagesCreateOrConnectWithoutImagesInput[]
    createMany?: entities_imagesCreateManyImagesInputEnvelope
    connect?: entities_imagesWhereUniqueInput | entities_imagesWhereUniqueInput[]
  }

  export type individualsCreateNestedOneWithoutImagesInput = {
    create?: XOR<individualsCreateWithoutImagesInput, individualsUncheckedCreateWithoutImagesInput>
    connectOrCreate?: individualsCreateOrConnectWithoutImagesInput
    connect?: individualsWhereUniqueInput
  }

  export type images_dataCreateNestedOneWithoutImagesInput = {
    create?: XOR<images_dataCreateWithoutImagesInput, images_dataUncheckedCreateWithoutImagesInput>
    connectOrCreate?: images_dataCreateOrConnectWithoutImagesInput
    connect?: images_dataWhereUniqueInput
  }

  export type collections_imagesUncheckedCreateNestedManyWithoutImagesInput = {
    create?: XOR<collections_imagesCreateWithoutImagesInput, collections_imagesUncheckedCreateWithoutImagesInput> | collections_imagesCreateWithoutImagesInput[] | collections_imagesUncheckedCreateWithoutImagesInput[]
    connectOrCreate?: collections_imagesCreateOrConnectWithoutImagesInput | collections_imagesCreateOrConnectWithoutImagesInput[]
    createMany?: collections_imagesCreateManyImagesInputEnvelope
    connect?: collections_imagesWhereUniqueInput | collections_imagesWhereUniqueInput[]
  }

  export type entities_imagesUncheckedCreateNestedManyWithoutImagesInput = {
    create?: XOR<entities_imagesCreateWithoutImagesInput, entities_imagesUncheckedCreateWithoutImagesInput> | entities_imagesCreateWithoutImagesInput[] | entities_imagesUncheckedCreateWithoutImagesInput[]
    connectOrCreate?: entities_imagesCreateOrConnectWithoutImagesInput | entities_imagesCreateOrConnectWithoutImagesInput[]
    createMany?: entities_imagesCreateManyImagesInputEnvelope
    connect?: entities_imagesWhereUniqueInput | entities_imagesWhereUniqueInput[]
  }

  export type collections_imagesUpdateManyWithoutImagesNestedInput = {
    create?: XOR<collections_imagesCreateWithoutImagesInput, collections_imagesUncheckedCreateWithoutImagesInput> | collections_imagesCreateWithoutImagesInput[] | collections_imagesUncheckedCreateWithoutImagesInput[]
    connectOrCreate?: collections_imagesCreateOrConnectWithoutImagesInput | collections_imagesCreateOrConnectWithoutImagesInput[]
    upsert?: collections_imagesUpsertWithWhereUniqueWithoutImagesInput | collections_imagesUpsertWithWhereUniqueWithoutImagesInput[]
    createMany?: collections_imagesCreateManyImagesInputEnvelope
    set?: collections_imagesWhereUniqueInput | collections_imagesWhereUniqueInput[]
    disconnect?: collections_imagesWhereUniqueInput | collections_imagesWhereUniqueInput[]
    delete?: collections_imagesWhereUniqueInput | collections_imagesWhereUniqueInput[]
    connect?: collections_imagesWhereUniqueInput | collections_imagesWhereUniqueInput[]
    update?: collections_imagesUpdateWithWhereUniqueWithoutImagesInput | collections_imagesUpdateWithWhereUniqueWithoutImagesInput[]
    updateMany?: collections_imagesUpdateManyWithWhereWithoutImagesInput | collections_imagesUpdateManyWithWhereWithoutImagesInput[]
    deleteMany?: collections_imagesScalarWhereInput | collections_imagesScalarWhereInput[]
  }

  export type entities_imagesUpdateManyWithoutImagesNestedInput = {
    create?: XOR<entities_imagesCreateWithoutImagesInput, entities_imagesUncheckedCreateWithoutImagesInput> | entities_imagesCreateWithoutImagesInput[] | entities_imagesUncheckedCreateWithoutImagesInput[]
    connectOrCreate?: entities_imagesCreateOrConnectWithoutImagesInput | entities_imagesCreateOrConnectWithoutImagesInput[]
    upsert?: entities_imagesUpsertWithWhereUniqueWithoutImagesInput | entities_imagesUpsertWithWhereUniqueWithoutImagesInput[]
    createMany?: entities_imagesCreateManyImagesInputEnvelope
    set?: entities_imagesWhereUniqueInput | entities_imagesWhereUniqueInput[]
    disconnect?: entities_imagesWhereUniqueInput | entities_imagesWhereUniqueInput[]
    delete?: entities_imagesWhereUniqueInput | entities_imagesWhereUniqueInput[]
    connect?: entities_imagesWhereUniqueInput | entities_imagesWhereUniqueInput[]
    update?: entities_imagesUpdateWithWhereUniqueWithoutImagesInput | entities_imagesUpdateWithWhereUniqueWithoutImagesInput[]
    updateMany?: entities_imagesUpdateManyWithWhereWithoutImagesInput | entities_imagesUpdateManyWithWhereWithoutImagesInput[]
    deleteMany?: entities_imagesScalarWhereInput | entities_imagesScalarWhereInput[]
  }

  export type individualsUpdateOneRequiredWithoutImagesNestedInput = {
    create?: XOR<individualsCreateWithoutImagesInput, individualsUncheckedCreateWithoutImagesInput>
    connectOrCreate?: individualsCreateOrConnectWithoutImagesInput
    upsert?: individualsUpsertWithoutImagesInput
    connect?: individualsWhereUniqueInput
    update?: XOR<XOR<individualsUpdateToOneWithWhereWithoutImagesInput, individualsUpdateWithoutImagesInput>, individualsUncheckedUpdateWithoutImagesInput>
  }

  export type images_dataUpdateOneRequiredWithoutImagesNestedInput = {
    create?: XOR<images_dataCreateWithoutImagesInput, images_dataUncheckedCreateWithoutImagesInput>
    connectOrCreate?: images_dataCreateOrConnectWithoutImagesInput
    upsert?: images_dataUpsertWithoutImagesInput
    connect?: images_dataWhereUniqueInput
    update?: XOR<XOR<images_dataUpdateToOneWithWhereWithoutImagesInput, images_dataUpdateWithoutImagesInput>, images_dataUncheckedUpdateWithoutImagesInput>
  }

  export type collections_imagesUncheckedUpdateManyWithoutImagesNestedInput = {
    create?: XOR<collections_imagesCreateWithoutImagesInput, collections_imagesUncheckedCreateWithoutImagesInput> | collections_imagesCreateWithoutImagesInput[] | collections_imagesUncheckedCreateWithoutImagesInput[]
    connectOrCreate?: collections_imagesCreateOrConnectWithoutImagesInput | collections_imagesCreateOrConnectWithoutImagesInput[]
    upsert?: collections_imagesUpsertWithWhereUniqueWithoutImagesInput | collections_imagesUpsertWithWhereUniqueWithoutImagesInput[]
    createMany?: collections_imagesCreateManyImagesInputEnvelope
    set?: collections_imagesWhereUniqueInput | collections_imagesWhereUniqueInput[]
    disconnect?: collections_imagesWhereUniqueInput | collections_imagesWhereUniqueInput[]
    delete?: collections_imagesWhereUniqueInput | collections_imagesWhereUniqueInput[]
    connect?: collections_imagesWhereUniqueInput | collections_imagesWhereUniqueInput[]
    update?: collections_imagesUpdateWithWhereUniqueWithoutImagesInput | collections_imagesUpdateWithWhereUniqueWithoutImagesInput[]
    updateMany?: collections_imagesUpdateManyWithWhereWithoutImagesInput | collections_imagesUpdateManyWithWhereWithoutImagesInput[]
    deleteMany?: collections_imagesScalarWhereInput | collections_imagesScalarWhereInput[]
  }

  export type entities_imagesUncheckedUpdateManyWithoutImagesNestedInput = {
    create?: XOR<entities_imagesCreateWithoutImagesInput, entities_imagesUncheckedCreateWithoutImagesInput> | entities_imagesCreateWithoutImagesInput[] | entities_imagesUncheckedCreateWithoutImagesInput[]
    connectOrCreate?: entities_imagesCreateOrConnectWithoutImagesInput | entities_imagesCreateOrConnectWithoutImagesInput[]
    upsert?: entities_imagesUpsertWithWhereUniqueWithoutImagesInput | entities_imagesUpsertWithWhereUniqueWithoutImagesInput[]
    createMany?: entities_imagesCreateManyImagesInputEnvelope
    set?: entities_imagesWhereUniqueInput | entities_imagesWhereUniqueInput[]
    disconnect?: entities_imagesWhereUniqueInput | entities_imagesWhereUniqueInput[]
    delete?: entities_imagesWhereUniqueInput | entities_imagesWhereUniqueInput[]
    connect?: entities_imagesWhereUniqueInput | entities_imagesWhereUniqueInput[]
    update?: entities_imagesUpdateWithWhereUniqueWithoutImagesInput | entities_imagesUpdateWithWhereUniqueWithoutImagesInput[]
    updateMany?: entities_imagesUpdateManyWithWhereWithoutImagesInput | entities_imagesUpdateManyWithWhereWithoutImagesInput[]
    deleteMany?: entities_imagesScalarWhereInput | entities_imagesScalarWhereInput[]
  }

  export type imagesCreateNestedManyWithoutImages_dataInput = {
    create?: XOR<imagesCreateWithoutImages_dataInput, imagesUncheckedCreateWithoutImages_dataInput> | imagesCreateWithoutImages_dataInput[] | imagesUncheckedCreateWithoutImages_dataInput[]
    connectOrCreate?: imagesCreateOrConnectWithoutImages_dataInput | imagesCreateOrConnectWithoutImages_dataInput[]
    createMany?: imagesCreateManyImages_dataInputEnvelope
    connect?: imagesWhereUniqueInput | imagesWhereUniqueInput[]
  }

  export type imagesUncheckedCreateNestedManyWithoutImages_dataInput = {
    create?: XOR<imagesCreateWithoutImages_dataInput, imagesUncheckedCreateWithoutImages_dataInput> | imagesCreateWithoutImages_dataInput[] | imagesUncheckedCreateWithoutImages_dataInput[]
    connectOrCreate?: imagesCreateOrConnectWithoutImages_dataInput | imagesCreateOrConnectWithoutImages_dataInput[]
    createMany?: imagesCreateManyImages_dataInputEnvelope
    connect?: imagesWhereUniqueInput | imagesWhereUniqueInput[]
  }

  export type BytesFieldUpdateOperationsInput = {
    set?: Buffer
  }

  export type imagesUpdateManyWithoutImages_dataNestedInput = {
    create?: XOR<imagesCreateWithoutImages_dataInput, imagesUncheckedCreateWithoutImages_dataInput> | imagesCreateWithoutImages_dataInput[] | imagesUncheckedCreateWithoutImages_dataInput[]
    connectOrCreate?: imagesCreateOrConnectWithoutImages_dataInput | imagesCreateOrConnectWithoutImages_dataInput[]
    upsert?: imagesUpsertWithWhereUniqueWithoutImages_dataInput | imagesUpsertWithWhereUniqueWithoutImages_dataInput[]
    createMany?: imagesCreateManyImages_dataInputEnvelope
    set?: imagesWhereUniqueInput | imagesWhereUniqueInput[]
    disconnect?: imagesWhereUniqueInput | imagesWhereUniqueInput[]
    delete?: imagesWhereUniqueInput | imagesWhereUniqueInput[]
    connect?: imagesWhereUniqueInput | imagesWhereUniqueInput[]
    update?: imagesUpdateWithWhereUniqueWithoutImages_dataInput | imagesUpdateWithWhereUniqueWithoutImages_dataInput[]
    updateMany?: imagesUpdateManyWithWhereWithoutImages_dataInput | imagesUpdateManyWithWhereWithoutImages_dataInput[]
    deleteMany?: imagesScalarWhereInput | imagesScalarWhereInput[]
  }

  export type imagesUncheckedUpdateManyWithoutImages_dataNestedInput = {
    create?: XOR<imagesCreateWithoutImages_dataInput, imagesUncheckedCreateWithoutImages_dataInput> | imagesCreateWithoutImages_dataInput[] | imagesUncheckedCreateWithoutImages_dataInput[]
    connectOrCreate?: imagesCreateOrConnectWithoutImages_dataInput | imagesCreateOrConnectWithoutImages_dataInput[]
    upsert?: imagesUpsertWithWhereUniqueWithoutImages_dataInput | imagesUpsertWithWhereUniqueWithoutImages_dataInput[]
    createMany?: imagesCreateManyImages_dataInputEnvelope
    set?: imagesWhereUniqueInput | imagesWhereUniqueInput[]
    disconnect?: imagesWhereUniqueInput | imagesWhereUniqueInput[]
    delete?: imagesWhereUniqueInput | imagesWhereUniqueInput[]
    connect?: imagesWhereUniqueInput | imagesWhereUniqueInput[]
    update?: imagesUpdateWithWhereUniqueWithoutImages_dataInput | imagesUpdateWithWhereUniqueWithoutImages_dataInput[]
    updateMany?: imagesUpdateManyWithWhereWithoutImages_dataInput | imagesUpdateManyWithWhereWithoutImages_dataInput[]
    deleteMany?: imagesScalarWhereInput | imagesScalarWhereInput[]
  }

  export type collectionsCreateNestedManyWithoutIndividualsInput = {
    create?: XOR<collectionsCreateWithoutIndividualsInput, collectionsUncheckedCreateWithoutIndividualsInput> | collectionsCreateWithoutIndividualsInput[] | collectionsUncheckedCreateWithoutIndividualsInput[]
    connectOrCreate?: collectionsCreateOrConnectWithoutIndividualsInput | collectionsCreateOrConnectWithoutIndividualsInput[]
    createMany?: collectionsCreateManyIndividualsInputEnvelope
    connect?: collectionsWhereUniqueInput | collectionsWhereUniqueInput[]
  }

  export type entitiesCreateNestedManyWithoutIndividualsInput = {
    create?: XOR<entitiesCreateWithoutIndividualsInput, entitiesUncheckedCreateWithoutIndividualsInput> | entitiesCreateWithoutIndividualsInput[] | entitiesUncheckedCreateWithoutIndividualsInput[]
    connectOrCreate?: entitiesCreateOrConnectWithoutIndividualsInput | entitiesCreateOrConnectWithoutIndividualsInput[]
    createMany?: entitiesCreateManyIndividualsInputEnvelope
    connect?: entitiesWhereUniqueInput | entitiesWhereUniqueInput[]
  }

  export type entities_referencesCreateNestedManyWithoutIndividualsInput = {
    create?: XOR<entities_referencesCreateWithoutIndividualsInput, entities_referencesUncheckedCreateWithoutIndividualsInput> | entities_referencesCreateWithoutIndividualsInput[] | entities_referencesUncheckedCreateWithoutIndividualsInput[]
    connectOrCreate?: entities_referencesCreateOrConnectWithoutIndividualsInput | entities_referencesCreateOrConnectWithoutIndividualsInput[]
    createMany?: entities_referencesCreateManyIndividualsInputEnvelope
    connect?: entities_referencesWhereUniqueInput | entities_referencesWhereUniqueInput[]
  }

  export type groups_membersCreateNestedManyWithoutIndividualsInput = {
    create?: XOR<groups_membersCreateWithoutIndividualsInput, groups_membersUncheckedCreateWithoutIndividualsInput> | groups_membersCreateWithoutIndividualsInput[] | groups_membersUncheckedCreateWithoutIndividualsInput[]
    connectOrCreate?: groups_membersCreateOrConnectWithoutIndividualsInput | groups_membersCreateOrConnectWithoutIndividualsInput[]
    createMany?: groups_membersCreateManyIndividualsInputEnvelope
    connect?: groups_membersWhereUniqueInput | groups_membersWhereUniqueInput[]
  }

  export type imagesCreateNestedManyWithoutIndividualsInput = {
    create?: XOR<imagesCreateWithoutIndividualsInput, imagesUncheckedCreateWithoutIndividualsInput> | imagesCreateWithoutIndividualsInput[] | imagesUncheckedCreateWithoutIndividualsInput[]
    connectOrCreate?: imagesCreateOrConnectWithoutIndividualsInput | imagesCreateOrConnectWithoutIndividualsInput[]
    createMany?: imagesCreateManyIndividualsInputEnvelope
    connect?: imagesWhereUniqueInput | imagesWhereUniqueInput[]
  }

  export type organizations_membersCreateNestedManyWithoutIndividualsInput = {
    create?: XOR<organizations_membersCreateWithoutIndividualsInput, organizations_membersUncheckedCreateWithoutIndividualsInput> | organizations_membersCreateWithoutIndividualsInput[] | organizations_membersUncheckedCreateWithoutIndividualsInput[]
    connectOrCreate?: organizations_membersCreateOrConnectWithoutIndividualsInput | organizations_membersCreateOrConnectWithoutIndividualsInput[]
    createMany?: organizations_membersCreateManyIndividualsInputEnvelope
    connect?: organizations_membersWhereUniqueInput | organizations_membersWhereUniqueInput[]
  }

  export type sheetsCreateNestedManyWithoutIndividualsInput = {
    create?: XOR<sheetsCreateWithoutIndividualsInput, sheetsUncheckedCreateWithoutIndividualsInput> | sheetsCreateWithoutIndividualsInput[] | sheetsUncheckedCreateWithoutIndividualsInput[]
    connectOrCreate?: sheetsCreateOrConnectWithoutIndividualsInput | sheetsCreateOrConnectWithoutIndividualsInput[]
    createMany?: sheetsCreateManyIndividualsInputEnvelope
    connect?: sheetsWhereUniqueInput | sheetsWhereUniqueInput[]
  }

  export type videosCreateNestedManyWithoutIndividualsInput = {
    create?: XOR<videosCreateWithoutIndividualsInput, videosUncheckedCreateWithoutIndividualsInput> | videosCreateWithoutIndividualsInput[] | videosUncheckedCreateWithoutIndividualsInput[]
    connectOrCreate?: videosCreateOrConnectWithoutIndividualsInput | videosCreateOrConnectWithoutIndividualsInput[]
    createMany?: videosCreateManyIndividualsInputEnvelope
    connect?: videosWhereUniqueInput | videosWhereUniqueInput[]
  }

  export type collectionsUncheckedCreateNestedManyWithoutIndividualsInput = {
    create?: XOR<collectionsCreateWithoutIndividualsInput, collectionsUncheckedCreateWithoutIndividualsInput> | collectionsCreateWithoutIndividualsInput[] | collectionsUncheckedCreateWithoutIndividualsInput[]
    connectOrCreate?: collectionsCreateOrConnectWithoutIndividualsInput | collectionsCreateOrConnectWithoutIndividualsInput[]
    createMany?: collectionsCreateManyIndividualsInputEnvelope
    connect?: collectionsWhereUniqueInput | collectionsWhereUniqueInput[]
  }

  export type entitiesUncheckedCreateNestedManyWithoutIndividualsInput = {
    create?: XOR<entitiesCreateWithoutIndividualsInput, entitiesUncheckedCreateWithoutIndividualsInput> | entitiesCreateWithoutIndividualsInput[] | entitiesUncheckedCreateWithoutIndividualsInput[]
    connectOrCreate?: entitiesCreateOrConnectWithoutIndividualsInput | entitiesCreateOrConnectWithoutIndividualsInput[]
    createMany?: entitiesCreateManyIndividualsInputEnvelope
    connect?: entitiesWhereUniqueInput | entitiesWhereUniqueInput[]
  }

  export type entities_referencesUncheckedCreateNestedManyWithoutIndividualsInput = {
    create?: XOR<entities_referencesCreateWithoutIndividualsInput, entities_referencesUncheckedCreateWithoutIndividualsInput> | entities_referencesCreateWithoutIndividualsInput[] | entities_referencesUncheckedCreateWithoutIndividualsInput[]
    connectOrCreate?: entities_referencesCreateOrConnectWithoutIndividualsInput | entities_referencesCreateOrConnectWithoutIndividualsInput[]
    createMany?: entities_referencesCreateManyIndividualsInputEnvelope
    connect?: entities_referencesWhereUniqueInput | entities_referencesWhereUniqueInput[]
  }

  export type groups_membersUncheckedCreateNestedManyWithoutIndividualsInput = {
    create?: XOR<groups_membersCreateWithoutIndividualsInput, groups_membersUncheckedCreateWithoutIndividualsInput> | groups_membersCreateWithoutIndividualsInput[] | groups_membersUncheckedCreateWithoutIndividualsInput[]
    connectOrCreate?: groups_membersCreateOrConnectWithoutIndividualsInput | groups_membersCreateOrConnectWithoutIndividualsInput[]
    createMany?: groups_membersCreateManyIndividualsInputEnvelope
    connect?: groups_membersWhereUniqueInput | groups_membersWhereUniqueInput[]
  }

  export type imagesUncheckedCreateNestedManyWithoutIndividualsInput = {
    create?: XOR<imagesCreateWithoutIndividualsInput, imagesUncheckedCreateWithoutIndividualsInput> | imagesCreateWithoutIndividualsInput[] | imagesUncheckedCreateWithoutIndividualsInput[]
    connectOrCreate?: imagesCreateOrConnectWithoutIndividualsInput | imagesCreateOrConnectWithoutIndividualsInput[]
    createMany?: imagesCreateManyIndividualsInputEnvelope
    connect?: imagesWhereUniqueInput | imagesWhereUniqueInput[]
  }

  export type organizations_membersUncheckedCreateNestedManyWithoutIndividualsInput = {
    create?: XOR<organizations_membersCreateWithoutIndividualsInput, organizations_membersUncheckedCreateWithoutIndividualsInput> | organizations_membersCreateWithoutIndividualsInput[] | organizations_membersUncheckedCreateWithoutIndividualsInput[]
    connectOrCreate?: organizations_membersCreateOrConnectWithoutIndividualsInput | organizations_membersCreateOrConnectWithoutIndividualsInput[]
    createMany?: organizations_membersCreateManyIndividualsInputEnvelope
    connect?: organizations_membersWhereUniqueInput | organizations_membersWhereUniqueInput[]
  }

  export type sheetsUncheckedCreateNestedManyWithoutIndividualsInput = {
    create?: XOR<sheetsCreateWithoutIndividualsInput, sheetsUncheckedCreateWithoutIndividualsInput> | sheetsCreateWithoutIndividualsInput[] | sheetsUncheckedCreateWithoutIndividualsInput[]
    connectOrCreate?: sheetsCreateOrConnectWithoutIndividualsInput | sheetsCreateOrConnectWithoutIndividualsInput[]
    createMany?: sheetsCreateManyIndividualsInputEnvelope
    connect?: sheetsWhereUniqueInput | sheetsWhereUniqueInput[]
  }

  export type videosUncheckedCreateNestedManyWithoutIndividualsInput = {
    create?: XOR<videosCreateWithoutIndividualsInput, videosUncheckedCreateWithoutIndividualsInput> | videosCreateWithoutIndividualsInput[] | videosUncheckedCreateWithoutIndividualsInput[]
    connectOrCreate?: videosCreateOrConnectWithoutIndividualsInput | videosCreateOrConnectWithoutIndividualsInput[]
    createMany?: videosCreateManyIndividualsInputEnvelope
    connect?: videosWhereUniqueInput | videosWhereUniqueInput[]
  }

  export type collectionsUpdateManyWithoutIndividualsNestedInput = {
    create?: XOR<collectionsCreateWithoutIndividualsInput, collectionsUncheckedCreateWithoutIndividualsInput> | collectionsCreateWithoutIndividualsInput[] | collectionsUncheckedCreateWithoutIndividualsInput[]
    connectOrCreate?: collectionsCreateOrConnectWithoutIndividualsInput | collectionsCreateOrConnectWithoutIndividualsInput[]
    upsert?: collectionsUpsertWithWhereUniqueWithoutIndividualsInput | collectionsUpsertWithWhereUniqueWithoutIndividualsInput[]
    createMany?: collectionsCreateManyIndividualsInputEnvelope
    set?: collectionsWhereUniqueInput | collectionsWhereUniqueInput[]
    disconnect?: collectionsWhereUniqueInput | collectionsWhereUniqueInput[]
    delete?: collectionsWhereUniqueInput | collectionsWhereUniqueInput[]
    connect?: collectionsWhereUniqueInput | collectionsWhereUniqueInput[]
    update?: collectionsUpdateWithWhereUniqueWithoutIndividualsInput | collectionsUpdateWithWhereUniqueWithoutIndividualsInput[]
    updateMany?: collectionsUpdateManyWithWhereWithoutIndividualsInput | collectionsUpdateManyWithWhereWithoutIndividualsInput[]
    deleteMany?: collectionsScalarWhereInput | collectionsScalarWhereInput[]
  }

  export type entitiesUpdateManyWithoutIndividualsNestedInput = {
    create?: XOR<entitiesCreateWithoutIndividualsInput, entitiesUncheckedCreateWithoutIndividualsInput> | entitiesCreateWithoutIndividualsInput[] | entitiesUncheckedCreateWithoutIndividualsInput[]
    connectOrCreate?: entitiesCreateOrConnectWithoutIndividualsInput | entitiesCreateOrConnectWithoutIndividualsInput[]
    upsert?: entitiesUpsertWithWhereUniqueWithoutIndividualsInput | entitiesUpsertWithWhereUniqueWithoutIndividualsInput[]
    createMany?: entitiesCreateManyIndividualsInputEnvelope
    set?: entitiesWhereUniqueInput | entitiesWhereUniqueInput[]
    disconnect?: entitiesWhereUniqueInput | entitiesWhereUniqueInput[]
    delete?: entitiesWhereUniqueInput | entitiesWhereUniqueInput[]
    connect?: entitiesWhereUniqueInput | entitiesWhereUniqueInput[]
    update?: entitiesUpdateWithWhereUniqueWithoutIndividualsInput | entitiesUpdateWithWhereUniqueWithoutIndividualsInput[]
    updateMany?: entitiesUpdateManyWithWhereWithoutIndividualsInput | entitiesUpdateManyWithWhereWithoutIndividualsInput[]
    deleteMany?: entitiesScalarWhereInput | entitiesScalarWhereInput[]
  }

  export type entities_referencesUpdateManyWithoutIndividualsNestedInput = {
    create?: XOR<entities_referencesCreateWithoutIndividualsInput, entities_referencesUncheckedCreateWithoutIndividualsInput> | entities_referencesCreateWithoutIndividualsInput[] | entities_referencesUncheckedCreateWithoutIndividualsInput[]
    connectOrCreate?: entities_referencesCreateOrConnectWithoutIndividualsInput | entities_referencesCreateOrConnectWithoutIndividualsInput[]
    upsert?: entities_referencesUpsertWithWhereUniqueWithoutIndividualsInput | entities_referencesUpsertWithWhereUniqueWithoutIndividualsInput[]
    createMany?: entities_referencesCreateManyIndividualsInputEnvelope
    set?: entities_referencesWhereUniqueInput | entities_referencesWhereUniqueInput[]
    disconnect?: entities_referencesWhereUniqueInput | entities_referencesWhereUniqueInput[]
    delete?: entities_referencesWhereUniqueInput | entities_referencesWhereUniqueInput[]
    connect?: entities_referencesWhereUniqueInput | entities_referencesWhereUniqueInput[]
    update?: entities_referencesUpdateWithWhereUniqueWithoutIndividualsInput | entities_referencesUpdateWithWhereUniqueWithoutIndividualsInput[]
    updateMany?: entities_referencesUpdateManyWithWhereWithoutIndividualsInput | entities_referencesUpdateManyWithWhereWithoutIndividualsInput[]
    deleteMany?: entities_referencesScalarWhereInput | entities_referencesScalarWhereInput[]
  }

  export type groups_membersUpdateManyWithoutIndividualsNestedInput = {
    create?: XOR<groups_membersCreateWithoutIndividualsInput, groups_membersUncheckedCreateWithoutIndividualsInput> | groups_membersCreateWithoutIndividualsInput[] | groups_membersUncheckedCreateWithoutIndividualsInput[]
    connectOrCreate?: groups_membersCreateOrConnectWithoutIndividualsInput | groups_membersCreateOrConnectWithoutIndividualsInput[]
    upsert?: groups_membersUpsertWithWhereUniqueWithoutIndividualsInput | groups_membersUpsertWithWhereUniqueWithoutIndividualsInput[]
    createMany?: groups_membersCreateManyIndividualsInputEnvelope
    set?: groups_membersWhereUniqueInput | groups_membersWhereUniqueInput[]
    disconnect?: groups_membersWhereUniqueInput | groups_membersWhereUniqueInput[]
    delete?: groups_membersWhereUniqueInput | groups_membersWhereUniqueInput[]
    connect?: groups_membersWhereUniqueInput | groups_membersWhereUniqueInput[]
    update?: groups_membersUpdateWithWhereUniqueWithoutIndividualsInput | groups_membersUpdateWithWhereUniqueWithoutIndividualsInput[]
    updateMany?: groups_membersUpdateManyWithWhereWithoutIndividualsInput | groups_membersUpdateManyWithWhereWithoutIndividualsInput[]
    deleteMany?: groups_membersScalarWhereInput | groups_membersScalarWhereInput[]
  }

  export type imagesUpdateManyWithoutIndividualsNestedInput = {
    create?: XOR<imagesCreateWithoutIndividualsInput, imagesUncheckedCreateWithoutIndividualsInput> | imagesCreateWithoutIndividualsInput[] | imagesUncheckedCreateWithoutIndividualsInput[]
    connectOrCreate?: imagesCreateOrConnectWithoutIndividualsInput | imagesCreateOrConnectWithoutIndividualsInput[]
    upsert?: imagesUpsertWithWhereUniqueWithoutIndividualsInput | imagesUpsertWithWhereUniqueWithoutIndividualsInput[]
    createMany?: imagesCreateManyIndividualsInputEnvelope
    set?: imagesWhereUniqueInput | imagesWhereUniqueInput[]
    disconnect?: imagesWhereUniqueInput | imagesWhereUniqueInput[]
    delete?: imagesWhereUniqueInput | imagesWhereUniqueInput[]
    connect?: imagesWhereUniqueInput | imagesWhereUniqueInput[]
    update?: imagesUpdateWithWhereUniqueWithoutIndividualsInput | imagesUpdateWithWhereUniqueWithoutIndividualsInput[]
    updateMany?: imagesUpdateManyWithWhereWithoutIndividualsInput | imagesUpdateManyWithWhereWithoutIndividualsInput[]
    deleteMany?: imagesScalarWhereInput | imagesScalarWhereInput[]
  }

  export type organizations_membersUpdateManyWithoutIndividualsNestedInput = {
    create?: XOR<organizations_membersCreateWithoutIndividualsInput, organizations_membersUncheckedCreateWithoutIndividualsInput> | organizations_membersCreateWithoutIndividualsInput[] | organizations_membersUncheckedCreateWithoutIndividualsInput[]
    connectOrCreate?: organizations_membersCreateOrConnectWithoutIndividualsInput | organizations_membersCreateOrConnectWithoutIndividualsInput[]
    upsert?: organizations_membersUpsertWithWhereUniqueWithoutIndividualsInput | organizations_membersUpsertWithWhereUniqueWithoutIndividualsInput[]
    createMany?: organizations_membersCreateManyIndividualsInputEnvelope
    set?: organizations_membersWhereUniqueInput | organizations_membersWhereUniqueInput[]
    disconnect?: organizations_membersWhereUniqueInput | organizations_membersWhereUniqueInput[]
    delete?: organizations_membersWhereUniqueInput | organizations_membersWhereUniqueInput[]
    connect?: organizations_membersWhereUniqueInput | organizations_membersWhereUniqueInput[]
    update?: organizations_membersUpdateWithWhereUniqueWithoutIndividualsInput | organizations_membersUpdateWithWhereUniqueWithoutIndividualsInput[]
    updateMany?: organizations_membersUpdateManyWithWhereWithoutIndividualsInput | organizations_membersUpdateManyWithWhereWithoutIndividualsInput[]
    deleteMany?: organizations_membersScalarWhereInput | organizations_membersScalarWhereInput[]
  }

  export type sheetsUpdateManyWithoutIndividualsNestedInput = {
    create?: XOR<sheetsCreateWithoutIndividualsInput, sheetsUncheckedCreateWithoutIndividualsInput> | sheetsCreateWithoutIndividualsInput[] | sheetsUncheckedCreateWithoutIndividualsInput[]
    connectOrCreate?: sheetsCreateOrConnectWithoutIndividualsInput | sheetsCreateOrConnectWithoutIndividualsInput[]
    upsert?: sheetsUpsertWithWhereUniqueWithoutIndividualsInput | sheetsUpsertWithWhereUniqueWithoutIndividualsInput[]
    createMany?: sheetsCreateManyIndividualsInputEnvelope
    set?: sheetsWhereUniqueInput | sheetsWhereUniqueInput[]
    disconnect?: sheetsWhereUniqueInput | sheetsWhereUniqueInput[]
    delete?: sheetsWhereUniqueInput | sheetsWhereUniqueInput[]
    connect?: sheetsWhereUniqueInput | sheetsWhereUniqueInput[]
    update?: sheetsUpdateWithWhereUniqueWithoutIndividualsInput | sheetsUpdateWithWhereUniqueWithoutIndividualsInput[]
    updateMany?: sheetsUpdateManyWithWhereWithoutIndividualsInput | sheetsUpdateManyWithWhereWithoutIndividualsInput[]
    deleteMany?: sheetsScalarWhereInput | sheetsScalarWhereInput[]
  }

  export type videosUpdateManyWithoutIndividualsNestedInput = {
    create?: XOR<videosCreateWithoutIndividualsInput, videosUncheckedCreateWithoutIndividualsInput> | videosCreateWithoutIndividualsInput[] | videosUncheckedCreateWithoutIndividualsInput[]
    connectOrCreate?: videosCreateOrConnectWithoutIndividualsInput | videosCreateOrConnectWithoutIndividualsInput[]
    upsert?: videosUpsertWithWhereUniqueWithoutIndividualsInput | videosUpsertWithWhereUniqueWithoutIndividualsInput[]
    createMany?: videosCreateManyIndividualsInputEnvelope
    set?: videosWhereUniqueInput | videosWhereUniqueInput[]
    disconnect?: videosWhereUniqueInput | videosWhereUniqueInput[]
    delete?: videosWhereUniqueInput | videosWhereUniqueInput[]
    connect?: videosWhereUniqueInput | videosWhereUniqueInput[]
    update?: videosUpdateWithWhereUniqueWithoutIndividualsInput | videosUpdateWithWhereUniqueWithoutIndividualsInput[]
    updateMany?: videosUpdateManyWithWhereWithoutIndividualsInput | videosUpdateManyWithWhereWithoutIndividualsInput[]
    deleteMany?: videosScalarWhereInput | videosScalarWhereInput[]
  }

  export type collectionsUncheckedUpdateManyWithoutIndividualsNestedInput = {
    create?: XOR<collectionsCreateWithoutIndividualsInput, collectionsUncheckedCreateWithoutIndividualsInput> | collectionsCreateWithoutIndividualsInput[] | collectionsUncheckedCreateWithoutIndividualsInput[]
    connectOrCreate?: collectionsCreateOrConnectWithoutIndividualsInput | collectionsCreateOrConnectWithoutIndividualsInput[]
    upsert?: collectionsUpsertWithWhereUniqueWithoutIndividualsInput | collectionsUpsertWithWhereUniqueWithoutIndividualsInput[]
    createMany?: collectionsCreateManyIndividualsInputEnvelope
    set?: collectionsWhereUniqueInput | collectionsWhereUniqueInput[]
    disconnect?: collectionsWhereUniqueInput | collectionsWhereUniqueInput[]
    delete?: collectionsWhereUniqueInput | collectionsWhereUniqueInput[]
    connect?: collectionsWhereUniqueInput | collectionsWhereUniqueInput[]
    update?: collectionsUpdateWithWhereUniqueWithoutIndividualsInput | collectionsUpdateWithWhereUniqueWithoutIndividualsInput[]
    updateMany?: collectionsUpdateManyWithWhereWithoutIndividualsInput | collectionsUpdateManyWithWhereWithoutIndividualsInput[]
    deleteMany?: collectionsScalarWhereInput | collectionsScalarWhereInput[]
  }

  export type entitiesUncheckedUpdateManyWithoutIndividualsNestedInput = {
    create?: XOR<entitiesCreateWithoutIndividualsInput, entitiesUncheckedCreateWithoutIndividualsInput> | entitiesCreateWithoutIndividualsInput[] | entitiesUncheckedCreateWithoutIndividualsInput[]
    connectOrCreate?: entitiesCreateOrConnectWithoutIndividualsInput | entitiesCreateOrConnectWithoutIndividualsInput[]
    upsert?: entitiesUpsertWithWhereUniqueWithoutIndividualsInput | entitiesUpsertWithWhereUniqueWithoutIndividualsInput[]
    createMany?: entitiesCreateManyIndividualsInputEnvelope
    set?: entitiesWhereUniqueInput | entitiesWhereUniqueInput[]
    disconnect?: entitiesWhereUniqueInput | entitiesWhereUniqueInput[]
    delete?: entitiesWhereUniqueInput | entitiesWhereUniqueInput[]
    connect?: entitiesWhereUniqueInput | entitiesWhereUniqueInput[]
    update?: entitiesUpdateWithWhereUniqueWithoutIndividualsInput | entitiesUpdateWithWhereUniqueWithoutIndividualsInput[]
    updateMany?: entitiesUpdateManyWithWhereWithoutIndividualsInput | entitiesUpdateManyWithWhereWithoutIndividualsInput[]
    deleteMany?: entitiesScalarWhereInput | entitiesScalarWhereInput[]
  }

  export type entities_referencesUncheckedUpdateManyWithoutIndividualsNestedInput = {
    create?: XOR<entities_referencesCreateWithoutIndividualsInput, entities_referencesUncheckedCreateWithoutIndividualsInput> | entities_referencesCreateWithoutIndividualsInput[] | entities_referencesUncheckedCreateWithoutIndividualsInput[]
    connectOrCreate?: entities_referencesCreateOrConnectWithoutIndividualsInput | entities_referencesCreateOrConnectWithoutIndividualsInput[]
    upsert?: entities_referencesUpsertWithWhereUniqueWithoutIndividualsInput | entities_referencesUpsertWithWhereUniqueWithoutIndividualsInput[]
    createMany?: entities_referencesCreateManyIndividualsInputEnvelope
    set?: entities_referencesWhereUniqueInput | entities_referencesWhereUniqueInput[]
    disconnect?: entities_referencesWhereUniqueInput | entities_referencesWhereUniqueInput[]
    delete?: entities_referencesWhereUniqueInput | entities_referencesWhereUniqueInput[]
    connect?: entities_referencesWhereUniqueInput | entities_referencesWhereUniqueInput[]
    update?: entities_referencesUpdateWithWhereUniqueWithoutIndividualsInput | entities_referencesUpdateWithWhereUniqueWithoutIndividualsInput[]
    updateMany?: entities_referencesUpdateManyWithWhereWithoutIndividualsInput | entities_referencesUpdateManyWithWhereWithoutIndividualsInput[]
    deleteMany?: entities_referencesScalarWhereInput | entities_referencesScalarWhereInput[]
  }

  export type groups_membersUncheckedUpdateManyWithoutIndividualsNestedInput = {
    create?: XOR<groups_membersCreateWithoutIndividualsInput, groups_membersUncheckedCreateWithoutIndividualsInput> | groups_membersCreateWithoutIndividualsInput[] | groups_membersUncheckedCreateWithoutIndividualsInput[]
    connectOrCreate?: groups_membersCreateOrConnectWithoutIndividualsInput | groups_membersCreateOrConnectWithoutIndividualsInput[]
    upsert?: groups_membersUpsertWithWhereUniqueWithoutIndividualsInput | groups_membersUpsertWithWhereUniqueWithoutIndividualsInput[]
    createMany?: groups_membersCreateManyIndividualsInputEnvelope
    set?: groups_membersWhereUniqueInput | groups_membersWhereUniqueInput[]
    disconnect?: groups_membersWhereUniqueInput | groups_membersWhereUniqueInput[]
    delete?: groups_membersWhereUniqueInput | groups_membersWhereUniqueInput[]
    connect?: groups_membersWhereUniqueInput | groups_membersWhereUniqueInput[]
    update?: groups_membersUpdateWithWhereUniqueWithoutIndividualsInput | groups_membersUpdateWithWhereUniqueWithoutIndividualsInput[]
    updateMany?: groups_membersUpdateManyWithWhereWithoutIndividualsInput | groups_membersUpdateManyWithWhereWithoutIndividualsInput[]
    deleteMany?: groups_membersScalarWhereInput | groups_membersScalarWhereInput[]
  }

  export type imagesUncheckedUpdateManyWithoutIndividualsNestedInput = {
    create?: XOR<imagesCreateWithoutIndividualsInput, imagesUncheckedCreateWithoutIndividualsInput> | imagesCreateWithoutIndividualsInput[] | imagesUncheckedCreateWithoutIndividualsInput[]
    connectOrCreate?: imagesCreateOrConnectWithoutIndividualsInput | imagesCreateOrConnectWithoutIndividualsInput[]
    upsert?: imagesUpsertWithWhereUniqueWithoutIndividualsInput | imagesUpsertWithWhereUniqueWithoutIndividualsInput[]
    createMany?: imagesCreateManyIndividualsInputEnvelope
    set?: imagesWhereUniqueInput | imagesWhereUniqueInput[]
    disconnect?: imagesWhereUniqueInput | imagesWhereUniqueInput[]
    delete?: imagesWhereUniqueInput | imagesWhereUniqueInput[]
    connect?: imagesWhereUniqueInput | imagesWhereUniqueInput[]
    update?: imagesUpdateWithWhereUniqueWithoutIndividualsInput | imagesUpdateWithWhereUniqueWithoutIndividualsInput[]
    updateMany?: imagesUpdateManyWithWhereWithoutIndividualsInput | imagesUpdateManyWithWhereWithoutIndividualsInput[]
    deleteMany?: imagesScalarWhereInput | imagesScalarWhereInput[]
  }

  export type organizations_membersUncheckedUpdateManyWithoutIndividualsNestedInput = {
    create?: XOR<organizations_membersCreateWithoutIndividualsInput, organizations_membersUncheckedCreateWithoutIndividualsInput> | organizations_membersCreateWithoutIndividualsInput[] | organizations_membersUncheckedCreateWithoutIndividualsInput[]
    connectOrCreate?: organizations_membersCreateOrConnectWithoutIndividualsInput | organizations_membersCreateOrConnectWithoutIndividualsInput[]
    upsert?: organizations_membersUpsertWithWhereUniqueWithoutIndividualsInput | organizations_membersUpsertWithWhereUniqueWithoutIndividualsInput[]
    createMany?: organizations_membersCreateManyIndividualsInputEnvelope
    set?: organizations_membersWhereUniqueInput | organizations_membersWhereUniqueInput[]
    disconnect?: organizations_membersWhereUniqueInput | organizations_membersWhereUniqueInput[]
    delete?: organizations_membersWhereUniqueInput | organizations_membersWhereUniqueInput[]
    connect?: organizations_membersWhereUniqueInput | organizations_membersWhereUniqueInput[]
    update?: organizations_membersUpdateWithWhereUniqueWithoutIndividualsInput | organizations_membersUpdateWithWhereUniqueWithoutIndividualsInput[]
    updateMany?: organizations_membersUpdateManyWithWhereWithoutIndividualsInput | organizations_membersUpdateManyWithWhereWithoutIndividualsInput[]
    deleteMany?: organizations_membersScalarWhereInput | organizations_membersScalarWhereInput[]
  }

  export type sheetsUncheckedUpdateManyWithoutIndividualsNestedInput = {
    create?: XOR<sheetsCreateWithoutIndividualsInput, sheetsUncheckedCreateWithoutIndividualsInput> | sheetsCreateWithoutIndividualsInput[] | sheetsUncheckedCreateWithoutIndividualsInput[]
    connectOrCreate?: sheetsCreateOrConnectWithoutIndividualsInput | sheetsCreateOrConnectWithoutIndividualsInput[]
    upsert?: sheetsUpsertWithWhereUniqueWithoutIndividualsInput | sheetsUpsertWithWhereUniqueWithoutIndividualsInput[]
    createMany?: sheetsCreateManyIndividualsInputEnvelope
    set?: sheetsWhereUniqueInput | sheetsWhereUniqueInput[]
    disconnect?: sheetsWhereUniqueInput | sheetsWhereUniqueInput[]
    delete?: sheetsWhereUniqueInput | sheetsWhereUniqueInput[]
    connect?: sheetsWhereUniqueInput | sheetsWhereUniqueInput[]
    update?: sheetsUpdateWithWhereUniqueWithoutIndividualsInput | sheetsUpdateWithWhereUniqueWithoutIndividualsInput[]
    updateMany?: sheetsUpdateManyWithWhereWithoutIndividualsInput | sheetsUpdateManyWithWhereWithoutIndividualsInput[]
    deleteMany?: sheetsScalarWhereInput | sheetsScalarWhereInput[]
  }

  export type videosUncheckedUpdateManyWithoutIndividualsNestedInput = {
    create?: XOR<videosCreateWithoutIndividualsInput, videosUncheckedCreateWithoutIndividualsInput> | videosCreateWithoutIndividualsInput[] | videosUncheckedCreateWithoutIndividualsInput[]
    connectOrCreate?: videosCreateOrConnectWithoutIndividualsInput | videosCreateOrConnectWithoutIndividualsInput[]
    upsert?: videosUpsertWithWhereUniqueWithoutIndividualsInput | videosUpsertWithWhereUniqueWithoutIndividualsInput[]
    createMany?: videosCreateManyIndividualsInputEnvelope
    set?: videosWhereUniqueInput | videosWhereUniqueInput[]
    disconnect?: videosWhereUniqueInput | videosWhereUniqueInput[]
    delete?: videosWhereUniqueInput | videosWhereUniqueInput[]
    connect?: videosWhereUniqueInput | videosWhereUniqueInput[]
    update?: videosUpdateWithWhereUniqueWithoutIndividualsInput | videosUpdateWithWhereUniqueWithoutIndividualsInput[]
    updateMany?: videosUpdateManyWithWhereWithoutIndividualsInput | videosUpdateManyWithWhereWithoutIndividualsInput[]
    deleteMany?: videosScalarWhereInput | videosScalarWhereInput[]
  }

  export type collectionsCreateNestedManyWithoutOrganizationsInput = {
    create?: XOR<collectionsCreateWithoutOrganizationsInput, collectionsUncheckedCreateWithoutOrganizationsInput> | collectionsCreateWithoutOrganizationsInput[] | collectionsUncheckedCreateWithoutOrganizationsInput[]
    connectOrCreate?: collectionsCreateOrConnectWithoutOrganizationsInput | collectionsCreateOrConnectWithoutOrganizationsInput[]
    createMany?: collectionsCreateManyOrganizationsInputEnvelope
    connect?: collectionsWhereUniqueInput | collectionsWhereUniqueInput[]
  }

  export type entitiesCreateNestedManyWithoutOrganizationsInput = {
    create?: XOR<entitiesCreateWithoutOrganizationsInput, entitiesUncheckedCreateWithoutOrganizationsInput> | entitiesCreateWithoutOrganizationsInput[] | entitiesUncheckedCreateWithoutOrganizationsInput[]
    connectOrCreate?: entitiesCreateOrConnectWithoutOrganizationsInput | entitiesCreateOrConnectWithoutOrganizationsInput[]
    createMany?: entitiesCreateManyOrganizationsInputEnvelope
    connect?: entitiesWhereUniqueInput | entitiesWhereUniqueInput[]
  }

  export type entities_referencesCreateNestedManyWithoutOrganizationsInput = {
    create?: XOR<entities_referencesCreateWithoutOrganizationsInput, entities_referencesUncheckedCreateWithoutOrganizationsInput> | entities_referencesCreateWithoutOrganizationsInput[] | entities_referencesUncheckedCreateWithoutOrganizationsInput[]
    connectOrCreate?: entities_referencesCreateOrConnectWithoutOrganizationsInput | entities_referencesCreateOrConnectWithoutOrganizationsInput[]
    createMany?: entities_referencesCreateManyOrganizationsInputEnvelope
    connect?: entities_referencesWhereUniqueInput | entities_referencesWhereUniqueInput[]
  }

  export type organizations_membersCreateNestedManyWithoutOrganizationsInput = {
    create?: XOR<organizations_membersCreateWithoutOrganizationsInput, organizations_membersUncheckedCreateWithoutOrganizationsInput> | organizations_membersCreateWithoutOrganizationsInput[] | organizations_membersUncheckedCreateWithoutOrganizationsInput[]
    connectOrCreate?: organizations_membersCreateOrConnectWithoutOrganizationsInput | organizations_membersCreateOrConnectWithoutOrganizationsInput[]
    createMany?: organizations_membersCreateManyOrganizationsInputEnvelope
    connect?: organizations_membersWhereUniqueInput | organizations_membersWhereUniqueInput[]
  }

  export type collectionsUncheckedCreateNestedManyWithoutOrganizationsInput = {
    create?: XOR<collectionsCreateWithoutOrganizationsInput, collectionsUncheckedCreateWithoutOrganizationsInput> | collectionsCreateWithoutOrganizationsInput[] | collectionsUncheckedCreateWithoutOrganizationsInput[]
    connectOrCreate?: collectionsCreateOrConnectWithoutOrganizationsInput | collectionsCreateOrConnectWithoutOrganizationsInput[]
    createMany?: collectionsCreateManyOrganizationsInputEnvelope
    connect?: collectionsWhereUniqueInput | collectionsWhereUniqueInput[]
  }

  export type entitiesUncheckedCreateNestedManyWithoutOrganizationsInput = {
    create?: XOR<entitiesCreateWithoutOrganizationsInput, entitiesUncheckedCreateWithoutOrganizationsInput> | entitiesCreateWithoutOrganizationsInput[] | entitiesUncheckedCreateWithoutOrganizationsInput[]
    connectOrCreate?: entitiesCreateOrConnectWithoutOrganizationsInput | entitiesCreateOrConnectWithoutOrganizationsInput[]
    createMany?: entitiesCreateManyOrganizationsInputEnvelope
    connect?: entitiesWhereUniqueInput | entitiesWhereUniqueInput[]
  }

  export type entities_referencesUncheckedCreateNestedManyWithoutOrganizationsInput = {
    create?: XOR<entities_referencesCreateWithoutOrganizationsInput, entities_referencesUncheckedCreateWithoutOrganizationsInput> | entities_referencesCreateWithoutOrganizationsInput[] | entities_referencesUncheckedCreateWithoutOrganizationsInput[]
    connectOrCreate?: entities_referencesCreateOrConnectWithoutOrganizationsInput | entities_referencesCreateOrConnectWithoutOrganizationsInput[]
    createMany?: entities_referencesCreateManyOrganizationsInputEnvelope
    connect?: entities_referencesWhereUniqueInput | entities_referencesWhereUniqueInput[]
  }

  export type organizations_membersUncheckedCreateNestedManyWithoutOrganizationsInput = {
    create?: XOR<organizations_membersCreateWithoutOrganizationsInput, organizations_membersUncheckedCreateWithoutOrganizationsInput> | organizations_membersCreateWithoutOrganizationsInput[] | organizations_membersUncheckedCreateWithoutOrganizationsInput[]
    connectOrCreate?: organizations_membersCreateOrConnectWithoutOrganizationsInput | organizations_membersCreateOrConnectWithoutOrganizationsInput[]
    createMany?: organizations_membersCreateManyOrganizationsInputEnvelope
    connect?: organizations_membersWhereUniqueInput | organizations_membersWhereUniqueInput[]
  }

  export type collectionsUpdateManyWithoutOrganizationsNestedInput = {
    create?: XOR<collectionsCreateWithoutOrganizationsInput, collectionsUncheckedCreateWithoutOrganizationsInput> | collectionsCreateWithoutOrganizationsInput[] | collectionsUncheckedCreateWithoutOrganizationsInput[]
    connectOrCreate?: collectionsCreateOrConnectWithoutOrganizationsInput | collectionsCreateOrConnectWithoutOrganizationsInput[]
    upsert?: collectionsUpsertWithWhereUniqueWithoutOrganizationsInput | collectionsUpsertWithWhereUniqueWithoutOrganizationsInput[]
    createMany?: collectionsCreateManyOrganizationsInputEnvelope
    set?: collectionsWhereUniqueInput | collectionsWhereUniqueInput[]
    disconnect?: collectionsWhereUniqueInput | collectionsWhereUniqueInput[]
    delete?: collectionsWhereUniqueInput | collectionsWhereUniqueInput[]
    connect?: collectionsWhereUniqueInput | collectionsWhereUniqueInput[]
    update?: collectionsUpdateWithWhereUniqueWithoutOrganizationsInput | collectionsUpdateWithWhereUniqueWithoutOrganizationsInput[]
    updateMany?: collectionsUpdateManyWithWhereWithoutOrganizationsInput | collectionsUpdateManyWithWhereWithoutOrganizationsInput[]
    deleteMany?: collectionsScalarWhereInput | collectionsScalarWhereInput[]
  }

  export type entitiesUpdateManyWithoutOrganizationsNestedInput = {
    create?: XOR<entitiesCreateWithoutOrganizationsInput, entitiesUncheckedCreateWithoutOrganizationsInput> | entitiesCreateWithoutOrganizationsInput[] | entitiesUncheckedCreateWithoutOrganizationsInput[]
    connectOrCreate?: entitiesCreateOrConnectWithoutOrganizationsInput | entitiesCreateOrConnectWithoutOrganizationsInput[]
    upsert?: entitiesUpsertWithWhereUniqueWithoutOrganizationsInput | entitiesUpsertWithWhereUniqueWithoutOrganizationsInput[]
    createMany?: entitiesCreateManyOrganizationsInputEnvelope
    set?: entitiesWhereUniqueInput | entitiesWhereUniqueInput[]
    disconnect?: entitiesWhereUniqueInput | entitiesWhereUniqueInput[]
    delete?: entitiesWhereUniqueInput | entitiesWhereUniqueInput[]
    connect?: entitiesWhereUniqueInput | entitiesWhereUniqueInput[]
    update?: entitiesUpdateWithWhereUniqueWithoutOrganizationsInput | entitiesUpdateWithWhereUniqueWithoutOrganizationsInput[]
    updateMany?: entitiesUpdateManyWithWhereWithoutOrganizationsInput | entitiesUpdateManyWithWhereWithoutOrganizationsInput[]
    deleteMany?: entitiesScalarWhereInput | entitiesScalarWhereInput[]
  }

  export type entities_referencesUpdateManyWithoutOrganizationsNestedInput = {
    create?: XOR<entities_referencesCreateWithoutOrganizationsInput, entities_referencesUncheckedCreateWithoutOrganizationsInput> | entities_referencesCreateWithoutOrganizationsInput[] | entities_referencesUncheckedCreateWithoutOrganizationsInput[]
    connectOrCreate?: entities_referencesCreateOrConnectWithoutOrganizationsInput | entities_referencesCreateOrConnectWithoutOrganizationsInput[]
    upsert?: entities_referencesUpsertWithWhereUniqueWithoutOrganizationsInput | entities_referencesUpsertWithWhereUniqueWithoutOrganizationsInput[]
    createMany?: entities_referencesCreateManyOrganizationsInputEnvelope
    set?: entities_referencesWhereUniqueInput | entities_referencesWhereUniqueInput[]
    disconnect?: entities_referencesWhereUniqueInput | entities_referencesWhereUniqueInput[]
    delete?: entities_referencesWhereUniqueInput | entities_referencesWhereUniqueInput[]
    connect?: entities_referencesWhereUniqueInput | entities_referencesWhereUniqueInput[]
    update?: entities_referencesUpdateWithWhereUniqueWithoutOrganizationsInput | entities_referencesUpdateWithWhereUniqueWithoutOrganizationsInput[]
    updateMany?: entities_referencesUpdateManyWithWhereWithoutOrganizationsInput | entities_referencesUpdateManyWithWhereWithoutOrganizationsInput[]
    deleteMany?: entities_referencesScalarWhereInput | entities_referencesScalarWhereInput[]
  }

  export type organizations_membersUpdateManyWithoutOrganizationsNestedInput = {
    create?: XOR<organizations_membersCreateWithoutOrganizationsInput, organizations_membersUncheckedCreateWithoutOrganizationsInput> | organizations_membersCreateWithoutOrganizationsInput[] | organizations_membersUncheckedCreateWithoutOrganizationsInput[]
    connectOrCreate?: organizations_membersCreateOrConnectWithoutOrganizationsInput | organizations_membersCreateOrConnectWithoutOrganizationsInput[]
    upsert?: organizations_membersUpsertWithWhereUniqueWithoutOrganizationsInput | organizations_membersUpsertWithWhereUniqueWithoutOrganizationsInput[]
    createMany?: organizations_membersCreateManyOrganizationsInputEnvelope
    set?: organizations_membersWhereUniqueInput | organizations_membersWhereUniqueInput[]
    disconnect?: organizations_membersWhereUniqueInput | organizations_membersWhereUniqueInput[]
    delete?: organizations_membersWhereUniqueInput | organizations_membersWhereUniqueInput[]
    connect?: organizations_membersWhereUniqueInput | organizations_membersWhereUniqueInput[]
    update?: organizations_membersUpdateWithWhereUniqueWithoutOrganizationsInput | organizations_membersUpdateWithWhereUniqueWithoutOrganizationsInput[]
    updateMany?: organizations_membersUpdateManyWithWhereWithoutOrganizationsInput | organizations_membersUpdateManyWithWhereWithoutOrganizationsInput[]
    deleteMany?: organizations_membersScalarWhereInput | organizations_membersScalarWhereInput[]
  }

  export type collectionsUncheckedUpdateManyWithoutOrganizationsNestedInput = {
    create?: XOR<collectionsCreateWithoutOrganizationsInput, collectionsUncheckedCreateWithoutOrganizationsInput> | collectionsCreateWithoutOrganizationsInput[] | collectionsUncheckedCreateWithoutOrganizationsInput[]
    connectOrCreate?: collectionsCreateOrConnectWithoutOrganizationsInput | collectionsCreateOrConnectWithoutOrganizationsInput[]
    upsert?: collectionsUpsertWithWhereUniqueWithoutOrganizationsInput | collectionsUpsertWithWhereUniqueWithoutOrganizationsInput[]
    createMany?: collectionsCreateManyOrganizationsInputEnvelope
    set?: collectionsWhereUniqueInput | collectionsWhereUniqueInput[]
    disconnect?: collectionsWhereUniqueInput | collectionsWhereUniqueInput[]
    delete?: collectionsWhereUniqueInput | collectionsWhereUniqueInput[]
    connect?: collectionsWhereUniqueInput | collectionsWhereUniqueInput[]
    update?: collectionsUpdateWithWhereUniqueWithoutOrganizationsInput | collectionsUpdateWithWhereUniqueWithoutOrganizationsInput[]
    updateMany?: collectionsUpdateManyWithWhereWithoutOrganizationsInput | collectionsUpdateManyWithWhereWithoutOrganizationsInput[]
    deleteMany?: collectionsScalarWhereInput | collectionsScalarWhereInput[]
  }

  export type entitiesUncheckedUpdateManyWithoutOrganizationsNestedInput = {
    create?: XOR<entitiesCreateWithoutOrganizationsInput, entitiesUncheckedCreateWithoutOrganizationsInput> | entitiesCreateWithoutOrganizationsInput[] | entitiesUncheckedCreateWithoutOrganizationsInput[]
    connectOrCreate?: entitiesCreateOrConnectWithoutOrganizationsInput | entitiesCreateOrConnectWithoutOrganizationsInput[]
    upsert?: entitiesUpsertWithWhereUniqueWithoutOrganizationsInput | entitiesUpsertWithWhereUniqueWithoutOrganizationsInput[]
    createMany?: entitiesCreateManyOrganizationsInputEnvelope
    set?: entitiesWhereUniqueInput | entitiesWhereUniqueInput[]
    disconnect?: entitiesWhereUniqueInput | entitiesWhereUniqueInput[]
    delete?: entitiesWhereUniqueInput | entitiesWhereUniqueInput[]
    connect?: entitiesWhereUniqueInput | entitiesWhereUniqueInput[]
    update?: entitiesUpdateWithWhereUniqueWithoutOrganizationsInput | entitiesUpdateWithWhereUniqueWithoutOrganizationsInput[]
    updateMany?: entitiesUpdateManyWithWhereWithoutOrganizationsInput | entitiesUpdateManyWithWhereWithoutOrganizationsInput[]
    deleteMany?: entitiesScalarWhereInput | entitiesScalarWhereInput[]
  }

  export type entities_referencesUncheckedUpdateManyWithoutOrganizationsNestedInput = {
    create?: XOR<entities_referencesCreateWithoutOrganizationsInput, entities_referencesUncheckedCreateWithoutOrganizationsInput> | entities_referencesCreateWithoutOrganizationsInput[] | entities_referencesUncheckedCreateWithoutOrganizationsInput[]
    connectOrCreate?: entities_referencesCreateOrConnectWithoutOrganizationsInput | entities_referencesCreateOrConnectWithoutOrganizationsInput[]
    upsert?: entities_referencesUpsertWithWhereUniqueWithoutOrganizationsInput | entities_referencesUpsertWithWhereUniqueWithoutOrganizationsInput[]
    createMany?: entities_referencesCreateManyOrganizationsInputEnvelope
    set?: entities_referencesWhereUniqueInput | entities_referencesWhereUniqueInput[]
    disconnect?: entities_referencesWhereUniqueInput | entities_referencesWhereUniqueInput[]
    delete?: entities_referencesWhereUniqueInput | entities_referencesWhereUniqueInput[]
    connect?: entities_referencesWhereUniqueInput | entities_referencesWhereUniqueInput[]
    update?: entities_referencesUpdateWithWhereUniqueWithoutOrganizationsInput | entities_referencesUpdateWithWhereUniqueWithoutOrganizationsInput[]
    updateMany?: entities_referencesUpdateManyWithWhereWithoutOrganizationsInput | entities_referencesUpdateManyWithWhereWithoutOrganizationsInput[]
    deleteMany?: entities_referencesScalarWhereInput | entities_referencesScalarWhereInput[]
  }

  export type organizations_membersUncheckedUpdateManyWithoutOrganizationsNestedInput = {
    create?: XOR<organizations_membersCreateWithoutOrganizationsInput, organizations_membersUncheckedCreateWithoutOrganizationsInput> | organizations_membersCreateWithoutOrganizationsInput[] | organizations_membersUncheckedCreateWithoutOrganizationsInput[]
    connectOrCreate?: organizations_membersCreateOrConnectWithoutOrganizationsInput | organizations_membersCreateOrConnectWithoutOrganizationsInput[]
    upsert?: organizations_membersUpsertWithWhereUniqueWithoutOrganizationsInput | organizations_membersUpsertWithWhereUniqueWithoutOrganizationsInput[]
    createMany?: organizations_membersCreateManyOrganizationsInputEnvelope
    set?: organizations_membersWhereUniqueInput | organizations_membersWhereUniqueInput[]
    disconnect?: organizations_membersWhereUniqueInput | organizations_membersWhereUniqueInput[]
    delete?: organizations_membersWhereUniqueInput | organizations_membersWhereUniqueInput[]
    connect?: organizations_membersWhereUniqueInput | organizations_membersWhereUniqueInput[]
    update?: organizations_membersUpdateWithWhereUniqueWithoutOrganizationsInput | organizations_membersUpdateWithWhereUniqueWithoutOrganizationsInput[]
    updateMany?: organizations_membersUpdateManyWithWhereWithoutOrganizationsInput | organizations_membersUpdateManyWithWhereWithoutOrganizationsInput[]
    deleteMany?: organizations_membersScalarWhereInput | organizations_membersScalarWhereInput[]
  }

  export type individualsCreateNestedOneWithoutOrganizations_membersInput = {
    create?: XOR<individualsCreateWithoutOrganizations_membersInput, individualsUncheckedCreateWithoutOrganizations_membersInput>
    connectOrCreate?: individualsCreateOrConnectWithoutOrganizations_membersInput
    connect?: individualsWhereUniqueInput
  }

  export type organizationsCreateNestedOneWithoutOrganizations_membersInput = {
    create?: XOR<organizationsCreateWithoutOrganizations_membersInput, organizationsUncheckedCreateWithoutOrganizations_membersInput>
    connectOrCreate?: organizationsCreateOrConnectWithoutOrganizations_membersInput
    connect?: organizationsWhereUniqueInput
  }

  export type individualsUpdateOneRequiredWithoutOrganizations_membersNestedInput = {
    create?: XOR<individualsCreateWithoutOrganizations_membersInput, individualsUncheckedCreateWithoutOrganizations_membersInput>
    connectOrCreate?: individualsCreateOrConnectWithoutOrganizations_membersInput
    upsert?: individualsUpsertWithoutOrganizations_membersInput
    connect?: individualsWhereUniqueInput
    update?: XOR<XOR<individualsUpdateToOneWithWhereWithoutOrganizations_membersInput, individualsUpdateWithoutOrganizations_membersInput>, individualsUncheckedUpdateWithoutOrganizations_membersInput>
  }

  export type organizationsUpdateOneRequiredWithoutOrganizations_membersNestedInput = {
    create?: XOR<organizationsCreateWithoutOrganizations_membersInput, organizationsUncheckedCreateWithoutOrganizations_membersInput>
    connectOrCreate?: organizationsCreateOrConnectWithoutOrganizations_membersInput
    upsert?: organizationsUpsertWithoutOrganizations_membersInput
    connect?: organizationsWhereUniqueInput
    update?: XOR<XOR<organizationsUpdateToOneWithWhereWithoutOrganizations_membersInput, organizationsUpdateWithoutOrganizations_membersInput>, organizationsUncheckedUpdateWithoutOrganizations_membersInput>
  }

  export type collections_sheetsCreateNestedManyWithoutSheetsInput = {
    create?: XOR<collections_sheetsCreateWithoutSheetsInput, collections_sheetsUncheckedCreateWithoutSheetsInput> | collections_sheetsCreateWithoutSheetsInput[] | collections_sheetsUncheckedCreateWithoutSheetsInput[]
    connectOrCreate?: collections_sheetsCreateOrConnectWithoutSheetsInput | collections_sheetsCreateOrConnectWithoutSheetsInput[]
    createMany?: collections_sheetsCreateManySheetsInputEnvelope
    connect?: collections_sheetsWhereUniqueInput | collections_sheetsWhereUniqueInput[]
  }

  export type entities_sheetsCreateNestedManyWithoutSheetsInput = {
    create?: XOR<entities_sheetsCreateWithoutSheetsInput, entities_sheetsUncheckedCreateWithoutSheetsInput> | entities_sheetsCreateWithoutSheetsInput[] | entities_sheetsUncheckedCreateWithoutSheetsInput[]
    connectOrCreate?: entities_sheetsCreateOrConnectWithoutSheetsInput | entities_sheetsCreateOrConnectWithoutSheetsInput[]
    createMany?: entities_sheetsCreateManySheetsInputEnvelope
    connect?: entities_sheetsWhereUniqueInput | entities_sheetsWhereUniqueInput[]
  }

  export type individualsCreateNestedOneWithoutSheetsInput = {
    create?: XOR<individualsCreateWithoutSheetsInput, individualsUncheckedCreateWithoutSheetsInput>
    connectOrCreate?: individualsCreateOrConnectWithoutSheetsInput
    connect?: individualsWhereUniqueInput
  }

  export type collections_sheetsUncheckedCreateNestedManyWithoutSheetsInput = {
    create?: XOR<collections_sheetsCreateWithoutSheetsInput, collections_sheetsUncheckedCreateWithoutSheetsInput> | collections_sheetsCreateWithoutSheetsInput[] | collections_sheetsUncheckedCreateWithoutSheetsInput[]
    connectOrCreate?: collections_sheetsCreateOrConnectWithoutSheetsInput | collections_sheetsCreateOrConnectWithoutSheetsInput[]
    createMany?: collections_sheetsCreateManySheetsInputEnvelope
    connect?: collections_sheetsWhereUniqueInput | collections_sheetsWhereUniqueInput[]
  }

  export type entities_sheetsUncheckedCreateNestedManyWithoutSheetsInput = {
    create?: XOR<entities_sheetsCreateWithoutSheetsInput, entities_sheetsUncheckedCreateWithoutSheetsInput> | entities_sheetsCreateWithoutSheetsInput[] | entities_sheetsUncheckedCreateWithoutSheetsInput[]
    connectOrCreate?: entities_sheetsCreateOrConnectWithoutSheetsInput | entities_sheetsCreateOrConnectWithoutSheetsInput[]
    createMany?: entities_sheetsCreateManySheetsInputEnvelope
    connect?: entities_sheetsWhereUniqueInput | entities_sheetsWhereUniqueInput[]
  }

  export type collections_sheetsUpdateManyWithoutSheetsNestedInput = {
    create?: XOR<collections_sheetsCreateWithoutSheetsInput, collections_sheetsUncheckedCreateWithoutSheetsInput> | collections_sheetsCreateWithoutSheetsInput[] | collections_sheetsUncheckedCreateWithoutSheetsInput[]
    connectOrCreate?: collections_sheetsCreateOrConnectWithoutSheetsInput | collections_sheetsCreateOrConnectWithoutSheetsInput[]
    upsert?: collections_sheetsUpsertWithWhereUniqueWithoutSheetsInput | collections_sheetsUpsertWithWhereUniqueWithoutSheetsInput[]
    createMany?: collections_sheetsCreateManySheetsInputEnvelope
    set?: collections_sheetsWhereUniqueInput | collections_sheetsWhereUniqueInput[]
    disconnect?: collections_sheetsWhereUniqueInput | collections_sheetsWhereUniqueInput[]
    delete?: collections_sheetsWhereUniqueInput | collections_sheetsWhereUniqueInput[]
    connect?: collections_sheetsWhereUniqueInput | collections_sheetsWhereUniqueInput[]
    update?: collections_sheetsUpdateWithWhereUniqueWithoutSheetsInput | collections_sheetsUpdateWithWhereUniqueWithoutSheetsInput[]
    updateMany?: collections_sheetsUpdateManyWithWhereWithoutSheetsInput | collections_sheetsUpdateManyWithWhereWithoutSheetsInput[]
    deleteMany?: collections_sheetsScalarWhereInput | collections_sheetsScalarWhereInput[]
  }

  export type entities_sheetsUpdateManyWithoutSheetsNestedInput = {
    create?: XOR<entities_sheetsCreateWithoutSheetsInput, entities_sheetsUncheckedCreateWithoutSheetsInput> | entities_sheetsCreateWithoutSheetsInput[] | entities_sheetsUncheckedCreateWithoutSheetsInput[]
    connectOrCreate?: entities_sheetsCreateOrConnectWithoutSheetsInput | entities_sheetsCreateOrConnectWithoutSheetsInput[]
    upsert?: entities_sheetsUpsertWithWhereUniqueWithoutSheetsInput | entities_sheetsUpsertWithWhereUniqueWithoutSheetsInput[]
    createMany?: entities_sheetsCreateManySheetsInputEnvelope
    set?: entities_sheetsWhereUniqueInput | entities_sheetsWhereUniqueInput[]
    disconnect?: entities_sheetsWhereUniqueInput | entities_sheetsWhereUniqueInput[]
    delete?: entities_sheetsWhereUniqueInput | entities_sheetsWhereUniqueInput[]
    connect?: entities_sheetsWhereUniqueInput | entities_sheetsWhereUniqueInput[]
    update?: entities_sheetsUpdateWithWhereUniqueWithoutSheetsInput | entities_sheetsUpdateWithWhereUniqueWithoutSheetsInput[]
    updateMany?: entities_sheetsUpdateManyWithWhereWithoutSheetsInput | entities_sheetsUpdateManyWithWhereWithoutSheetsInput[]
    deleteMany?: entities_sheetsScalarWhereInput | entities_sheetsScalarWhereInput[]
  }

  export type individualsUpdateOneRequiredWithoutSheetsNestedInput = {
    create?: XOR<individualsCreateWithoutSheetsInput, individualsUncheckedCreateWithoutSheetsInput>
    connectOrCreate?: individualsCreateOrConnectWithoutSheetsInput
    upsert?: individualsUpsertWithoutSheetsInput
    connect?: individualsWhereUniqueInput
    update?: XOR<XOR<individualsUpdateToOneWithWhereWithoutSheetsInput, individualsUpdateWithoutSheetsInput>, individualsUncheckedUpdateWithoutSheetsInput>
  }

  export type collections_sheetsUncheckedUpdateManyWithoutSheetsNestedInput = {
    create?: XOR<collections_sheetsCreateWithoutSheetsInput, collections_sheetsUncheckedCreateWithoutSheetsInput> | collections_sheetsCreateWithoutSheetsInput[] | collections_sheetsUncheckedCreateWithoutSheetsInput[]
    connectOrCreate?: collections_sheetsCreateOrConnectWithoutSheetsInput | collections_sheetsCreateOrConnectWithoutSheetsInput[]
    upsert?: collections_sheetsUpsertWithWhereUniqueWithoutSheetsInput | collections_sheetsUpsertWithWhereUniqueWithoutSheetsInput[]
    createMany?: collections_sheetsCreateManySheetsInputEnvelope
    set?: collections_sheetsWhereUniqueInput | collections_sheetsWhereUniqueInput[]
    disconnect?: collections_sheetsWhereUniqueInput | collections_sheetsWhereUniqueInput[]
    delete?: collections_sheetsWhereUniqueInput | collections_sheetsWhereUniqueInput[]
    connect?: collections_sheetsWhereUniqueInput | collections_sheetsWhereUniqueInput[]
    update?: collections_sheetsUpdateWithWhereUniqueWithoutSheetsInput | collections_sheetsUpdateWithWhereUniqueWithoutSheetsInput[]
    updateMany?: collections_sheetsUpdateManyWithWhereWithoutSheetsInput | collections_sheetsUpdateManyWithWhereWithoutSheetsInput[]
    deleteMany?: collections_sheetsScalarWhereInput | collections_sheetsScalarWhereInput[]
  }

  export type entities_sheetsUncheckedUpdateManyWithoutSheetsNestedInput = {
    create?: XOR<entities_sheetsCreateWithoutSheetsInput, entities_sheetsUncheckedCreateWithoutSheetsInput> | entities_sheetsCreateWithoutSheetsInput[] | entities_sheetsUncheckedCreateWithoutSheetsInput[]
    connectOrCreate?: entities_sheetsCreateOrConnectWithoutSheetsInput | entities_sheetsCreateOrConnectWithoutSheetsInput[]
    upsert?: entities_sheetsUpsertWithWhereUniqueWithoutSheetsInput | entities_sheetsUpsertWithWhereUniqueWithoutSheetsInput[]
    createMany?: entities_sheetsCreateManySheetsInputEnvelope
    set?: entities_sheetsWhereUniqueInput | entities_sheetsWhereUniqueInput[]
    disconnect?: entities_sheetsWhereUniqueInput | entities_sheetsWhereUniqueInput[]
    delete?: entities_sheetsWhereUniqueInput | entities_sheetsWhereUniqueInput[]
    connect?: entities_sheetsWhereUniqueInput | entities_sheetsWhereUniqueInput[]
    update?: entities_sheetsUpdateWithWhereUniqueWithoutSheetsInput | entities_sheetsUpdateWithWhereUniqueWithoutSheetsInput[]
    updateMany?: entities_sheetsUpdateManyWithWhereWithoutSheetsInput | entities_sheetsUpdateManyWithWhereWithoutSheetsInput[]
    deleteMany?: entities_sheetsScalarWhereInput | entities_sheetsScalarWhereInput[]
  }

  export type collections_videosCreateNestedManyWithoutVideosInput = {
    create?: XOR<collections_videosCreateWithoutVideosInput, collections_videosUncheckedCreateWithoutVideosInput> | collections_videosCreateWithoutVideosInput[] | collections_videosUncheckedCreateWithoutVideosInput[]
    connectOrCreate?: collections_videosCreateOrConnectWithoutVideosInput | collections_videosCreateOrConnectWithoutVideosInput[]
    createMany?: collections_videosCreateManyVideosInputEnvelope
    connect?: collections_videosWhereUniqueInput | collections_videosWhereUniqueInput[]
  }

  export type entities_videosCreateNestedManyWithoutVideosInput = {
    create?: XOR<entities_videosCreateWithoutVideosInput, entities_videosUncheckedCreateWithoutVideosInput> | entities_videosCreateWithoutVideosInput[] | entities_videosUncheckedCreateWithoutVideosInput[]
    connectOrCreate?: entities_videosCreateOrConnectWithoutVideosInput | entities_videosCreateOrConnectWithoutVideosInput[]
    createMany?: entities_videosCreateManyVideosInputEnvelope
    connect?: entities_videosWhereUniqueInput | entities_videosWhereUniqueInput[]
  }

  export type individualsCreateNestedOneWithoutVideosInput = {
    create?: XOR<individualsCreateWithoutVideosInput, individualsUncheckedCreateWithoutVideosInput>
    connectOrCreate?: individualsCreateOrConnectWithoutVideosInput
    connect?: individualsWhereUniqueInput
  }

  export type videos_dataCreateNestedOneWithoutVideosInput = {
    create?: XOR<videos_dataCreateWithoutVideosInput, videos_dataUncheckedCreateWithoutVideosInput>
    connectOrCreate?: videos_dataCreateOrConnectWithoutVideosInput
    connect?: videos_dataWhereUniqueInput
  }

  export type collections_videosUncheckedCreateNestedManyWithoutVideosInput = {
    create?: XOR<collections_videosCreateWithoutVideosInput, collections_videosUncheckedCreateWithoutVideosInput> | collections_videosCreateWithoutVideosInput[] | collections_videosUncheckedCreateWithoutVideosInput[]
    connectOrCreate?: collections_videosCreateOrConnectWithoutVideosInput | collections_videosCreateOrConnectWithoutVideosInput[]
    createMany?: collections_videosCreateManyVideosInputEnvelope
    connect?: collections_videosWhereUniqueInput | collections_videosWhereUniqueInput[]
  }

  export type entities_videosUncheckedCreateNestedManyWithoutVideosInput = {
    create?: XOR<entities_videosCreateWithoutVideosInput, entities_videosUncheckedCreateWithoutVideosInput> | entities_videosCreateWithoutVideosInput[] | entities_videosUncheckedCreateWithoutVideosInput[]
    connectOrCreate?: entities_videosCreateOrConnectWithoutVideosInput | entities_videosCreateOrConnectWithoutVideosInput[]
    createMany?: entities_videosCreateManyVideosInputEnvelope
    connect?: entities_videosWhereUniqueInput | entities_videosWhereUniqueInput[]
  }

  export type collections_videosUpdateManyWithoutVideosNestedInput = {
    create?: XOR<collections_videosCreateWithoutVideosInput, collections_videosUncheckedCreateWithoutVideosInput> | collections_videosCreateWithoutVideosInput[] | collections_videosUncheckedCreateWithoutVideosInput[]
    connectOrCreate?: collections_videosCreateOrConnectWithoutVideosInput | collections_videosCreateOrConnectWithoutVideosInput[]
    upsert?: collections_videosUpsertWithWhereUniqueWithoutVideosInput | collections_videosUpsertWithWhereUniqueWithoutVideosInput[]
    createMany?: collections_videosCreateManyVideosInputEnvelope
    set?: collections_videosWhereUniqueInput | collections_videosWhereUniqueInput[]
    disconnect?: collections_videosWhereUniqueInput | collections_videosWhereUniqueInput[]
    delete?: collections_videosWhereUniqueInput | collections_videosWhereUniqueInput[]
    connect?: collections_videosWhereUniqueInput | collections_videosWhereUniqueInput[]
    update?: collections_videosUpdateWithWhereUniqueWithoutVideosInput | collections_videosUpdateWithWhereUniqueWithoutVideosInput[]
    updateMany?: collections_videosUpdateManyWithWhereWithoutVideosInput | collections_videosUpdateManyWithWhereWithoutVideosInput[]
    deleteMany?: collections_videosScalarWhereInput | collections_videosScalarWhereInput[]
  }

  export type entities_videosUpdateManyWithoutVideosNestedInput = {
    create?: XOR<entities_videosCreateWithoutVideosInput, entities_videosUncheckedCreateWithoutVideosInput> | entities_videosCreateWithoutVideosInput[] | entities_videosUncheckedCreateWithoutVideosInput[]
    connectOrCreate?: entities_videosCreateOrConnectWithoutVideosInput | entities_videosCreateOrConnectWithoutVideosInput[]
    upsert?: entities_videosUpsertWithWhereUniqueWithoutVideosInput | entities_videosUpsertWithWhereUniqueWithoutVideosInput[]
    createMany?: entities_videosCreateManyVideosInputEnvelope
    set?: entities_videosWhereUniqueInput | entities_videosWhereUniqueInput[]
    disconnect?: entities_videosWhereUniqueInput | entities_videosWhereUniqueInput[]
    delete?: entities_videosWhereUniqueInput | entities_videosWhereUniqueInput[]
    connect?: entities_videosWhereUniqueInput | entities_videosWhereUniqueInput[]
    update?: entities_videosUpdateWithWhereUniqueWithoutVideosInput | entities_videosUpdateWithWhereUniqueWithoutVideosInput[]
    updateMany?: entities_videosUpdateManyWithWhereWithoutVideosInput | entities_videosUpdateManyWithWhereWithoutVideosInput[]
    deleteMany?: entities_videosScalarWhereInput | entities_videosScalarWhereInput[]
  }

  export type individualsUpdateOneRequiredWithoutVideosNestedInput = {
    create?: XOR<individualsCreateWithoutVideosInput, individualsUncheckedCreateWithoutVideosInput>
    connectOrCreate?: individualsCreateOrConnectWithoutVideosInput
    upsert?: individualsUpsertWithoutVideosInput
    connect?: individualsWhereUniqueInput
    update?: XOR<XOR<individualsUpdateToOneWithWhereWithoutVideosInput, individualsUpdateWithoutVideosInput>, individualsUncheckedUpdateWithoutVideosInput>
  }

  export type videos_dataUpdateOneRequiredWithoutVideosNestedInput = {
    create?: XOR<videos_dataCreateWithoutVideosInput, videos_dataUncheckedCreateWithoutVideosInput>
    connectOrCreate?: videos_dataCreateOrConnectWithoutVideosInput
    upsert?: videos_dataUpsertWithoutVideosInput
    connect?: videos_dataWhereUniqueInput
    update?: XOR<XOR<videos_dataUpdateToOneWithWhereWithoutVideosInput, videos_dataUpdateWithoutVideosInput>, videos_dataUncheckedUpdateWithoutVideosInput>
  }

  export type collections_videosUncheckedUpdateManyWithoutVideosNestedInput = {
    create?: XOR<collections_videosCreateWithoutVideosInput, collections_videosUncheckedCreateWithoutVideosInput> | collections_videosCreateWithoutVideosInput[] | collections_videosUncheckedCreateWithoutVideosInput[]
    connectOrCreate?: collections_videosCreateOrConnectWithoutVideosInput | collections_videosCreateOrConnectWithoutVideosInput[]
    upsert?: collections_videosUpsertWithWhereUniqueWithoutVideosInput | collections_videosUpsertWithWhereUniqueWithoutVideosInput[]
    createMany?: collections_videosCreateManyVideosInputEnvelope
    set?: collections_videosWhereUniqueInput | collections_videosWhereUniqueInput[]
    disconnect?: collections_videosWhereUniqueInput | collections_videosWhereUniqueInput[]
    delete?: collections_videosWhereUniqueInput | collections_videosWhereUniqueInput[]
    connect?: collections_videosWhereUniqueInput | collections_videosWhereUniqueInput[]
    update?: collections_videosUpdateWithWhereUniqueWithoutVideosInput | collections_videosUpdateWithWhereUniqueWithoutVideosInput[]
    updateMany?: collections_videosUpdateManyWithWhereWithoutVideosInput | collections_videosUpdateManyWithWhereWithoutVideosInput[]
    deleteMany?: collections_videosScalarWhereInput | collections_videosScalarWhereInput[]
  }

  export type entities_videosUncheckedUpdateManyWithoutVideosNestedInput = {
    create?: XOR<entities_videosCreateWithoutVideosInput, entities_videosUncheckedCreateWithoutVideosInput> | entities_videosCreateWithoutVideosInput[] | entities_videosUncheckedCreateWithoutVideosInput[]
    connectOrCreate?: entities_videosCreateOrConnectWithoutVideosInput | entities_videosCreateOrConnectWithoutVideosInput[]
    upsert?: entities_videosUpsertWithWhereUniqueWithoutVideosInput | entities_videosUpsertWithWhereUniqueWithoutVideosInput[]
    createMany?: entities_videosCreateManyVideosInputEnvelope
    set?: entities_videosWhereUniqueInput | entities_videosWhereUniqueInput[]
    disconnect?: entities_videosWhereUniqueInput | entities_videosWhereUniqueInput[]
    delete?: entities_videosWhereUniqueInput | entities_videosWhereUniqueInput[]
    connect?: entities_videosWhereUniqueInput | entities_videosWhereUniqueInput[]
    update?: entities_videosUpdateWithWhereUniqueWithoutVideosInput | entities_videosUpdateWithWhereUniqueWithoutVideosInput[]
    updateMany?: entities_videosUpdateManyWithWhereWithoutVideosInput | entities_videosUpdateManyWithWhereWithoutVideosInput[]
    deleteMany?: entities_videosScalarWhereInput | entities_videosScalarWhereInput[]
  }

  export type videosCreateNestedManyWithoutVideos_dataInput = {
    create?: XOR<videosCreateWithoutVideos_dataInput, videosUncheckedCreateWithoutVideos_dataInput> | videosCreateWithoutVideos_dataInput[] | videosUncheckedCreateWithoutVideos_dataInput[]
    connectOrCreate?: videosCreateOrConnectWithoutVideos_dataInput | videosCreateOrConnectWithoutVideos_dataInput[]
    createMany?: videosCreateManyVideos_dataInputEnvelope
    connect?: videosWhereUniqueInput | videosWhereUniqueInput[]
  }

  export type videosUncheckedCreateNestedManyWithoutVideos_dataInput = {
    create?: XOR<videosCreateWithoutVideos_dataInput, videosUncheckedCreateWithoutVideos_dataInput> | videosCreateWithoutVideos_dataInput[] | videosUncheckedCreateWithoutVideos_dataInput[]
    connectOrCreate?: videosCreateOrConnectWithoutVideos_dataInput | videosCreateOrConnectWithoutVideos_dataInput[]
    createMany?: videosCreateManyVideos_dataInputEnvelope
    connect?: videosWhereUniqueInput | videosWhereUniqueInput[]
  }

  export type videosUpdateManyWithoutVideos_dataNestedInput = {
    create?: XOR<videosCreateWithoutVideos_dataInput, videosUncheckedCreateWithoutVideos_dataInput> | videosCreateWithoutVideos_dataInput[] | videosUncheckedCreateWithoutVideos_dataInput[]
    connectOrCreate?: videosCreateOrConnectWithoutVideos_dataInput | videosCreateOrConnectWithoutVideos_dataInput[]
    upsert?: videosUpsertWithWhereUniqueWithoutVideos_dataInput | videosUpsertWithWhereUniqueWithoutVideos_dataInput[]
    createMany?: videosCreateManyVideos_dataInputEnvelope
    set?: videosWhereUniqueInput | videosWhereUniqueInput[]
    disconnect?: videosWhereUniqueInput | videosWhereUniqueInput[]
    delete?: videosWhereUniqueInput | videosWhereUniqueInput[]
    connect?: videosWhereUniqueInput | videosWhereUniqueInput[]
    update?: videosUpdateWithWhereUniqueWithoutVideos_dataInput | videosUpdateWithWhereUniqueWithoutVideos_dataInput[]
    updateMany?: videosUpdateManyWithWhereWithoutVideos_dataInput | videosUpdateManyWithWhereWithoutVideos_dataInput[]
    deleteMany?: videosScalarWhereInput | videosScalarWhereInput[]
  }

  export type videosUncheckedUpdateManyWithoutVideos_dataNestedInput = {
    create?: XOR<videosCreateWithoutVideos_dataInput, videosUncheckedCreateWithoutVideos_dataInput> | videosCreateWithoutVideos_dataInput[] | videosUncheckedCreateWithoutVideos_dataInput[]
    connectOrCreate?: videosCreateOrConnectWithoutVideos_dataInput | videosCreateOrConnectWithoutVideos_dataInput[]
    upsert?: videosUpsertWithWhereUniqueWithoutVideos_dataInput | videosUpsertWithWhereUniqueWithoutVideos_dataInput[]
    createMany?: videosCreateManyVideos_dataInputEnvelope
    set?: videosWhereUniqueInput | videosWhereUniqueInput[]
    disconnect?: videosWhereUniqueInput | videosWhereUniqueInput[]
    delete?: videosWhereUniqueInput | videosWhereUniqueInput[]
    connect?: videosWhereUniqueInput | videosWhereUniqueInput[]
    update?: videosUpdateWithWhereUniqueWithoutVideos_dataInput | videosUpdateWithWhereUniqueWithoutVideos_dataInput[]
    updateMany?: videosUpdateManyWithWhereWithoutVideos_dataInput | videosUpdateManyWithWhereWithoutVideos_dataInput[]
    deleteMany?: videosScalarWhereInput | videosScalarWhereInput[]
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedBytesFilter<$PrismaModel = never> = {
    equals?: Buffer | BytesFieldRefInput<$PrismaModel>
    in?: Buffer[]
    notIn?: Buffer[]
    not?: NestedBytesFilter<$PrismaModel> | Buffer
  }

  export type NestedBytesWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Buffer | BytesFieldRefInput<$PrismaModel>
    in?: Buffer[]
    notIn?: Buffer[]
    not?: NestedBytesWithAggregatesFilter<$PrismaModel> | Buffer
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBytesFilter<$PrismaModel>
    _max?: NestedBytesFilter<$PrismaModel>
  }

  export type individualsCreateWithoutCollectionsInput = {
    individual_userName: string
    individual_name: string
    individual_currentIssue?: string | null
    individual_roles?: string | null
    individual_description?: string | null
    entities?: entitiesCreateNestedManyWithoutIndividualsInput
    entities_references?: entities_referencesCreateNestedManyWithoutIndividualsInput
    groups_members?: groups_membersCreateNestedManyWithoutIndividualsInput
    images?: imagesCreateNestedManyWithoutIndividualsInput
    organizations_members?: organizations_membersCreateNestedManyWithoutIndividualsInput
    sheets?: sheetsCreateNestedManyWithoutIndividualsInput
    videos?: videosCreateNestedManyWithoutIndividualsInput
  }

  export type individualsUncheckedCreateWithoutCollectionsInput = {
    individual_id?: number
    individual_userName: string
    individual_name: string
    individual_currentIssue?: string | null
    individual_roles?: string | null
    individual_description?: string | null
    entities?: entitiesUncheckedCreateNestedManyWithoutIndividualsInput
    entities_references?: entities_referencesUncheckedCreateNestedManyWithoutIndividualsInput
    groups_members?: groups_membersUncheckedCreateNestedManyWithoutIndividualsInput
    images?: imagesUncheckedCreateNestedManyWithoutIndividualsInput
    organizations_members?: organizations_membersUncheckedCreateNestedManyWithoutIndividualsInput
    sheets?: sheetsUncheckedCreateNestedManyWithoutIndividualsInput
    videos?: videosUncheckedCreateNestedManyWithoutIndividualsInput
  }

  export type individualsCreateOrConnectWithoutCollectionsInput = {
    where: individualsWhereUniqueInput
    create: XOR<individualsCreateWithoutCollectionsInput, individualsUncheckedCreateWithoutCollectionsInput>
  }

  export type organizationsCreateWithoutCollectionsInput = {
    organization_handle: string
    organization_name: string
    organization_currentIssue?: string | null
    organization_stances?: string | null
    organization_description?: string | null
    entities?: entitiesCreateNestedManyWithoutOrganizationsInput
    entities_references?: entities_referencesCreateNestedManyWithoutOrganizationsInput
    organizations_members?: organizations_membersCreateNestedManyWithoutOrganizationsInput
  }

  export type organizationsUncheckedCreateWithoutCollectionsInput = {
    organization_id?: number
    organization_handle: string
    organization_name: string
    organization_currentIssue?: string | null
    organization_stances?: string | null
    organization_description?: string | null
    entities?: entitiesUncheckedCreateNestedManyWithoutOrganizationsInput
    entities_references?: entities_referencesUncheckedCreateNestedManyWithoutOrganizationsInput
    organizations_members?: organizations_membersUncheckedCreateNestedManyWithoutOrganizationsInput
  }

  export type organizationsCreateOrConnectWithoutCollectionsInput = {
    where: organizationsWhereUniqueInput
    create: XOR<organizationsCreateWithoutCollectionsInput, organizationsUncheckedCreateWithoutCollectionsInput>
  }

  export type groupsCreateWithoutCollectionsInput = {
    group_handle: string
    group_name: string
    group_currentIssue?: string | null
    group_stances?: string | null
    group_description?: string | null
    entities?: entitiesCreateNestedManyWithoutGroupsInput
    entities_references?: entities_referencesCreateNestedManyWithoutGroupsInput
    groups_members?: groups_membersCreateNestedManyWithoutGroupsInput
  }

  export type groupsUncheckedCreateWithoutCollectionsInput = {
    group_id?: number
    group_handle: string
    group_name: string
    group_currentIssue?: string | null
    group_stances?: string | null
    group_description?: string | null
    entities?: entitiesUncheckedCreateNestedManyWithoutGroupsInput
    entities_references?: entities_referencesUncheckedCreateNestedManyWithoutGroupsInput
    groups_members?: groups_membersUncheckedCreateNestedManyWithoutGroupsInput
  }

  export type groupsCreateOrConnectWithoutCollectionsInput = {
    where: groupsWhereUniqueInput
    create: XOR<groupsCreateWithoutCollectionsInput, groupsUncheckedCreateWithoutCollectionsInput>
  }

  export type collections_imagesCreateWithoutCollectionsInput = {
    date_added: Date | string
    pinned: boolean
    date_pinned?: Date | string | null
    images: imagesCreateNestedOneWithoutCollections_imagesInput
  }

  export type collections_imagesUncheckedCreateWithoutCollectionsInput = {
    collections_images_id?: number
    image_id: number
    date_added: Date | string
    pinned: boolean
    date_pinned?: Date | string | null
  }

  export type collections_imagesCreateOrConnectWithoutCollectionsInput = {
    where: collections_imagesWhereUniqueInput
    create: XOR<collections_imagesCreateWithoutCollectionsInput, collections_imagesUncheckedCreateWithoutCollectionsInput>
  }

  export type collections_imagesCreateManyCollectionsInputEnvelope = {
    data: collections_imagesCreateManyCollectionsInput | collections_imagesCreateManyCollectionsInput[]
    skipDuplicates?: boolean
  }

  export type collections_sheetsCreateWithoutCollectionsInput = {
    date_added: Date | string
    pinned: boolean
    date_pinned?: Date | string | null
    sheets: sheetsCreateNestedOneWithoutCollections_sheetsInput
  }

  export type collections_sheetsUncheckedCreateWithoutCollectionsInput = {
    collections_sheets_id?: number
    sheet_id: number
    date_added: Date | string
    pinned: boolean
    date_pinned?: Date | string | null
  }

  export type collections_sheetsCreateOrConnectWithoutCollectionsInput = {
    where: collections_sheetsWhereUniqueInput
    create: XOR<collections_sheetsCreateWithoutCollectionsInput, collections_sheetsUncheckedCreateWithoutCollectionsInput>
  }

  export type collections_sheetsCreateManyCollectionsInputEnvelope = {
    data: collections_sheetsCreateManyCollectionsInput | collections_sheetsCreateManyCollectionsInput[]
    skipDuplicates?: boolean
  }

  export type collections_videosCreateWithoutCollectionsInput = {
    date_added: Date | string
    pinned: boolean
    date_pinned?: Date | string | null
    videos: videosCreateNestedOneWithoutCollections_videosInput
  }

  export type collections_videosUncheckedCreateWithoutCollectionsInput = {
    collections_videos_id?: number
    video_id: number
    date_added: Date | string
    pinned: boolean
    date_pinned?: Date | string | null
  }

  export type collections_videosCreateOrConnectWithoutCollectionsInput = {
    where: collections_videosWhereUniqueInput
    create: XOR<collections_videosCreateWithoutCollectionsInput, collections_videosUncheckedCreateWithoutCollectionsInput>
  }

  export type collections_videosCreateManyCollectionsInputEnvelope = {
    data: collections_videosCreateManyCollectionsInput | collections_videosCreateManyCollectionsInput[]
    skipDuplicates?: boolean
  }

  export type individualsUpsertWithoutCollectionsInput = {
    update: XOR<individualsUpdateWithoutCollectionsInput, individualsUncheckedUpdateWithoutCollectionsInput>
    create: XOR<individualsCreateWithoutCollectionsInput, individualsUncheckedCreateWithoutCollectionsInput>
    where?: individualsWhereInput
  }

  export type individualsUpdateToOneWithWhereWithoutCollectionsInput = {
    where?: individualsWhereInput
    data: XOR<individualsUpdateWithoutCollectionsInput, individualsUncheckedUpdateWithoutCollectionsInput>
  }

  export type individualsUpdateWithoutCollectionsInput = {
    individual_userName?: StringFieldUpdateOperationsInput | string
    individual_name?: StringFieldUpdateOperationsInput | string
    individual_currentIssue?: NullableStringFieldUpdateOperationsInput | string | null
    individual_roles?: NullableStringFieldUpdateOperationsInput | string | null
    individual_description?: NullableStringFieldUpdateOperationsInput | string | null
    entities?: entitiesUpdateManyWithoutIndividualsNestedInput
    entities_references?: entities_referencesUpdateManyWithoutIndividualsNestedInput
    groups_members?: groups_membersUpdateManyWithoutIndividualsNestedInput
    images?: imagesUpdateManyWithoutIndividualsNestedInput
    organizations_members?: organizations_membersUpdateManyWithoutIndividualsNestedInput
    sheets?: sheetsUpdateManyWithoutIndividualsNestedInput
    videos?: videosUpdateManyWithoutIndividualsNestedInput
  }

  export type individualsUncheckedUpdateWithoutCollectionsInput = {
    individual_id?: IntFieldUpdateOperationsInput | number
    individual_userName?: StringFieldUpdateOperationsInput | string
    individual_name?: StringFieldUpdateOperationsInput | string
    individual_currentIssue?: NullableStringFieldUpdateOperationsInput | string | null
    individual_roles?: NullableStringFieldUpdateOperationsInput | string | null
    individual_description?: NullableStringFieldUpdateOperationsInput | string | null
    entities?: entitiesUncheckedUpdateManyWithoutIndividualsNestedInput
    entities_references?: entities_referencesUncheckedUpdateManyWithoutIndividualsNestedInput
    groups_members?: groups_membersUncheckedUpdateManyWithoutIndividualsNestedInput
    images?: imagesUncheckedUpdateManyWithoutIndividualsNestedInput
    organizations_members?: organizations_membersUncheckedUpdateManyWithoutIndividualsNestedInput
    sheets?: sheetsUncheckedUpdateManyWithoutIndividualsNestedInput
    videos?: videosUncheckedUpdateManyWithoutIndividualsNestedInput
  }

  export type organizationsUpsertWithoutCollectionsInput = {
    update: XOR<organizationsUpdateWithoutCollectionsInput, organizationsUncheckedUpdateWithoutCollectionsInput>
    create: XOR<organizationsCreateWithoutCollectionsInput, organizationsUncheckedCreateWithoutCollectionsInput>
    where?: organizationsWhereInput
  }

  export type organizationsUpdateToOneWithWhereWithoutCollectionsInput = {
    where?: organizationsWhereInput
    data: XOR<organizationsUpdateWithoutCollectionsInput, organizationsUncheckedUpdateWithoutCollectionsInput>
  }

  export type organizationsUpdateWithoutCollectionsInput = {
    organization_handle?: StringFieldUpdateOperationsInput | string
    organization_name?: StringFieldUpdateOperationsInput | string
    organization_currentIssue?: NullableStringFieldUpdateOperationsInput | string | null
    organization_stances?: NullableStringFieldUpdateOperationsInput | string | null
    organization_description?: NullableStringFieldUpdateOperationsInput | string | null
    entities?: entitiesUpdateManyWithoutOrganizationsNestedInput
    entities_references?: entities_referencesUpdateManyWithoutOrganizationsNestedInput
    organizations_members?: organizations_membersUpdateManyWithoutOrganizationsNestedInput
  }

  export type organizationsUncheckedUpdateWithoutCollectionsInput = {
    organization_id?: IntFieldUpdateOperationsInput | number
    organization_handle?: StringFieldUpdateOperationsInput | string
    organization_name?: StringFieldUpdateOperationsInput | string
    organization_currentIssue?: NullableStringFieldUpdateOperationsInput | string | null
    organization_stances?: NullableStringFieldUpdateOperationsInput | string | null
    organization_description?: NullableStringFieldUpdateOperationsInput | string | null
    entities?: entitiesUncheckedUpdateManyWithoutOrganizationsNestedInput
    entities_references?: entities_referencesUncheckedUpdateManyWithoutOrganizationsNestedInput
    organizations_members?: organizations_membersUncheckedUpdateManyWithoutOrganizationsNestedInput
  }

  export type groupsUpsertWithoutCollectionsInput = {
    update: XOR<groupsUpdateWithoutCollectionsInput, groupsUncheckedUpdateWithoutCollectionsInput>
    create: XOR<groupsCreateWithoutCollectionsInput, groupsUncheckedCreateWithoutCollectionsInput>
    where?: groupsWhereInput
  }

  export type groupsUpdateToOneWithWhereWithoutCollectionsInput = {
    where?: groupsWhereInput
    data: XOR<groupsUpdateWithoutCollectionsInput, groupsUncheckedUpdateWithoutCollectionsInput>
  }

  export type groupsUpdateWithoutCollectionsInput = {
    group_handle?: StringFieldUpdateOperationsInput | string
    group_name?: StringFieldUpdateOperationsInput | string
    group_currentIssue?: NullableStringFieldUpdateOperationsInput | string | null
    group_stances?: NullableStringFieldUpdateOperationsInput | string | null
    group_description?: NullableStringFieldUpdateOperationsInput | string | null
    entities?: entitiesUpdateManyWithoutGroupsNestedInput
    entities_references?: entities_referencesUpdateManyWithoutGroupsNestedInput
    groups_members?: groups_membersUpdateManyWithoutGroupsNestedInput
  }

  export type groupsUncheckedUpdateWithoutCollectionsInput = {
    group_id?: IntFieldUpdateOperationsInput | number
    group_handle?: StringFieldUpdateOperationsInput | string
    group_name?: StringFieldUpdateOperationsInput | string
    group_currentIssue?: NullableStringFieldUpdateOperationsInput | string | null
    group_stances?: NullableStringFieldUpdateOperationsInput | string | null
    group_description?: NullableStringFieldUpdateOperationsInput | string | null
    entities?: entitiesUncheckedUpdateManyWithoutGroupsNestedInput
    entities_references?: entities_referencesUncheckedUpdateManyWithoutGroupsNestedInput
    groups_members?: groups_membersUncheckedUpdateManyWithoutGroupsNestedInput
  }

  export type collections_imagesUpsertWithWhereUniqueWithoutCollectionsInput = {
    where: collections_imagesWhereUniqueInput
    update: XOR<collections_imagesUpdateWithoutCollectionsInput, collections_imagesUncheckedUpdateWithoutCollectionsInput>
    create: XOR<collections_imagesCreateWithoutCollectionsInput, collections_imagesUncheckedCreateWithoutCollectionsInput>
  }

  export type collections_imagesUpdateWithWhereUniqueWithoutCollectionsInput = {
    where: collections_imagesWhereUniqueInput
    data: XOR<collections_imagesUpdateWithoutCollectionsInput, collections_imagesUncheckedUpdateWithoutCollectionsInput>
  }

  export type collections_imagesUpdateManyWithWhereWithoutCollectionsInput = {
    where: collections_imagesScalarWhereInput
    data: XOR<collections_imagesUpdateManyMutationInput, collections_imagesUncheckedUpdateManyWithoutCollectionsInput>
  }

  export type collections_imagesScalarWhereInput = {
    AND?: collections_imagesScalarWhereInput | collections_imagesScalarWhereInput[]
    OR?: collections_imagesScalarWhereInput[]
    NOT?: collections_imagesScalarWhereInput | collections_imagesScalarWhereInput[]
    collections_images_id?: IntFilter<"collections_images"> | number
    collection_id?: IntFilter<"collections_images"> | number
    image_id?: IntFilter<"collections_images"> | number
    date_added?: DateTimeFilter<"collections_images"> | Date | string
    pinned?: BoolFilter<"collections_images"> | boolean
    date_pinned?: DateTimeNullableFilter<"collections_images"> | Date | string | null
  }

  export type collections_sheetsUpsertWithWhereUniqueWithoutCollectionsInput = {
    where: collections_sheetsWhereUniqueInput
    update: XOR<collections_sheetsUpdateWithoutCollectionsInput, collections_sheetsUncheckedUpdateWithoutCollectionsInput>
    create: XOR<collections_sheetsCreateWithoutCollectionsInput, collections_sheetsUncheckedCreateWithoutCollectionsInput>
  }

  export type collections_sheetsUpdateWithWhereUniqueWithoutCollectionsInput = {
    where: collections_sheetsWhereUniqueInput
    data: XOR<collections_sheetsUpdateWithoutCollectionsInput, collections_sheetsUncheckedUpdateWithoutCollectionsInput>
  }

  export type collections_sheetsUpdateManyWithWhereWithoutCollectionsInput = {
    where: collections_sheetsScalarWhereInput
    data: XOR<collections_sheetsUpdateManyMutationInput, collections_sheetsUncheckedUpdateManyWithoutCollectionsInput>
  }

  export type collections_sheetsScalarWhereInput = {
    AND?: collections_sheetsScalarWhereInput | collections_sheetsScalarWhereInput[]
    OR?: collections_sheetsScalarWhereInput[]
    NOT?: collections_sheetsScalarWhereInput | collections_sheetsScalarWhereInput[]
    collections_sheets_id?: IntFilter<"collections_sheets"> | number
    collection_id?: IntFilter<"collections_sheets"> | number
    sheet_id?: IntFilter<"collections_sheets"> | number
    date_added?: DateTimeFilter<"collections_sheets"> | Date | string
    pinned?: BoolFilter<"collections_sheets"> | boolean
    date_pinned?: DateTimeNullableFilter<"collections_sheets"> | Date | string | null
  }

  export type collections_videosUpsertWithWhereUniqueWithoutCollectionsInput = {
    where: collections_videosWhereUniqueInput
    update: XOR<collections_videosUpdateWithoutCollectionsInput, collections_videosUncheckedUpdateWithoutCollectionsInput>
    create: XOR<collections_videosCreateWithoutCollectionsInput, collections_videosUncheckedCreateWithoutCollectionsInput>
  }

  export type collections_videosUpdateWithWhereUniqueWithoutCollectionsInput = {
    where: collections_videosWhereUniqueInput
    data: XOR<collections_videosUpdateWithoutCollectionsInput, collections_videosUncheckedUpdateWithoutCollectionsInput>
  }

  export type collections_videosUpdateManyWithWhereWithoutCollectionsInput = {
    where: collections_videosScalarWhereInput
    data: XOR<collections_videosUpdateManyMutationInput, collections_videosUncheckedUpdateManyWithoutCollectionsInput>
  }

  export type collections_videosScalarWhereInput = {
    AND?: collections_videosScalarWhereInput | collections_videosScalarWhereInput[]
    OR?: collections_videosScalarWhereInput[]
    NOT?: collections_videosScalarWhereInput | collections_videosScalarWhereInput[]
    collections_videos_id?: IntFilter<"collections_videos"> | number
    collection_id?: IntFilter<"collections_videos"> | number
    video_id?: IntFilter<"collections_videos"> | number
    date_added?: DateTimeFilter<"collections_videos"> | Date | string
    pinned?: BoolFilter<"collections_videos"> | boolean
    date_pinned?: DateTimeNullableFilter<"collections_videos"> | Date | string | null
  }

  export type collectionsCreateWithoutCollections_imagesInput = {
    collection_name: string
    individuals?: individualsCreateNestedOneWithoutCollectionsInput
    organizations?: organizationsCreateNestedOneWithoutCollectionsInput
    groups?: groupsCreateNestedOneWithoutCollectionsInput
    collections_sheets?: collections_sheetsCreateNestedManyWithoutCollectionsInput
    collections_videos?: collections_videosCreateNestedManyWithoutCollectionsInput
  }

  export type collectionsUncheckedCreateWithoutCollections_imagesInput = {
    collection_id?: number
    collection_name: string
    individual_id?: number | null
    group_id?: number | null
    organization_id?: number | null
    collections_sheets?: collections_sheetsUncheckedCreateNestedManyWithoutCollectionsInput
    collections_videos?: collections_videosUncheckedCreateNestedManyWithoutCollectionsInput
  }

  export type collectionsCreateOrConnectWithoutCollections_imagesInput = {
    where: collectionsWhereUniqueInput
    create: XOR<collectionsCreateWithoutCollections_imagesInput, collectionsUncheckedCreateWithoutCollections_imagesInput>
  }

  export type imagesCreateWithoutCollections_imagesInput = {
    image_title: string
    image_description: string
    image_filename: string
    entities_images?: entities_imagesCreateNestedManyWithoutImagesInput
    individuals: individualsCreateNestedOneWithoutImagesInput
    images_data: images_dataCreateNestedOneWithoutImagesInput
  }

  export type imagesUncheckedCreateWithoutCollections_imagesInput = {
    image_id?: number
    image_creator_id: number
    image_title: string
    image_description: string
    image_filename: string
    image_data_id: number
    entities_images?: entities_imagesUncheckedCreateNestedManyWithoutImagesInput
  }

  export type imagesCreateOrConnectWithoutCollections_imagesInput = {
    where: imagesWhereUniqueInput
    create: XOR<imagesCreateWithoutCollections_imagesInput, imagesUncheckedCreateWithoutCollections_imagesInput>
  }

  export type collectionsUpsertWithoutCollections_imagesInput = {
    update: XOR<collectionsUpdateWithoutCollections_imagesInput, collectionsUncheckedUpdateWithoutCollections_imagesInput>
    create: XOR<collectionsCreateWithoutCollections_imagesInput, collectionsUncheckedCreateWithoutCollections_imagesInput>
    where?: collectionsWhereInput
  }

  export type collectionsUpdateToOneWithWhereWithoutCollections_imagesInput = {
    where?: collectionsWhereInput
    data: XOR<collectionsUpdateWithoutCollections_imagesInput, collectionsUncheckedUpdateWithoutCollections_imagesInput>
  }

  export type collectionsUpdateWithoutCollections_imagesInput = {
    collection_name?: StringFieldUpdateOperationsInput | string
    individuals?: individualsUpdateOneWithoutCollectionsNestedInput
    organizations?: organizationsUpdateOneWithoutCollectionsNestedInput
    groups?: groupsUpdateOneWithoutCollectionsNestedInput
    collections_sheets?: collections_sheetsUpdateManyWithoutCollectionsNestedInput
    collections_videos?: collections_videosUpdateManyWithoutCollectionsNestedInput
  }

  export type collectionsUncheckedUpdateWithoutCollections_imagesInput = {
    collection_id?: IntFieldUpdateOperationsInput | number
    collection_name?: StringFieldUpdateOperationsInput | string
    individual_id?: NullableIntFieldUpdateOperationsInput | number | null
    group_id?: NullableIntFieldUpdateOperationsInput | number | null
    organization_id?: NullableIntFieldUpdateOperationsInput | number | null
    collections_sheets?: collections_sheetsUncheckedUpdateManyWithoutCollectionsNestedInput
    collections_videos?: collections_videosUncheckedUpdateManyWithoutCollectionsNestedInput
  }

  export type imagesUpsertWithoutCollections_imagesInput = {
    update: XOR<imagesUpdateWithoutCollections_imagesInput, imagesUncheckedUpdateWithoutCollections_imagesInput>
    create: XOR<imagesCreateWithoutCollections_imagesInput, imagesUncheckedCreateWithoutCollections_imagesInput>
    where?: imagesWhereInput
  }

  export type imagesUpdateToOneWithWhereWithoutCollections_imagesInput = {
    where?: imagesWhereInput
    data: XOR<imagesUpdateWithoutCollections_imagesInput, imagesUncheckedUpdateWithoutCollections_imagesInput>
  }

  export type imagesUpdateWithoutCollections_imagesInput = {
    image_title?: StringFieldUpdateOperationsInput | string
    image_description?: StringFieldUpdateOperationsInput | string
    image_filename?: StringFieldUpdateOperationsInput | string
    entities_images?: entities_imagesUpdateManyWithoutImagesNestedInput
    individuals?: individualsUpdateOneRequiredWithoutImagesNestedInput
    images_data?: images_dataUpdateOneRequiredWithoutImagesNestedInput
  }

  export type imagesUncheckedUpdateWithoutCollections_imagesInput = {
    image_id?: IntFieldUpdateOperationsInput | number
    image_creator_id?: IntFieldUpdateOperationsInput | number
    image_title?: StringFieldUpdateOperationsInput | string
    image_description?: StringFieldUpdateOperationsInput | string
    image_filename?: StringFieldUpdateOperationsInput | string
    image_data_id?: IntFieldUpdateOperationsInput | number
    entities_images?: entities_imagesUncheckedUpdateManyWithoutImagesNestedInput
  }

  export type collectionsCreateWithoutCollections_sheetsInput = {
    collection_name: string
    individuals?: individualsCreateNestedOneWithoutCollectionsInput
    organizations?: organizationsCreateNestedOneWithoutCollectionsInput
    groups?: groupsCreateNestedOneWithoutCollectionsInput
    collections_images?: collections_imagesCreateNestedManyWithoutCollectionsInput
    collections_videos?: collections_videosCreateNestedManyWithoutCollectionsInput
  }

  export type collectionsUncheckedCreateWithoutCollections_sheetsInput = {
    collection_id?: number
    collection_name: string
    individual_id?: number | null
    group_id?: number | null
    organization_id?: number | null
    collections_images?: collections_imagesUncheckedCreateNestedManyWithoutCollectionsInput
    collections_videos?: collections_videosUncheckedCreateNestedManyWithoutCollectionsInput
  }

  export type collectionsCreateOrConnectWithoutCollections_sheetsInput = {
    where: collectionsWhereUniqueInput
    create: XOR<collectionsCreateWithoutCollections_sheetsInput, collectionsUncheckedCreateWithoutCollections_sheetsInput>
  }

  export type sheetsCreateWithoutCollections_sheetsInput = {
    sheet_title: string
    sheet_subject: string
    sheet_filename?: string | null
    sheet_data: Buffer
    entities_sheets?: entities_sheetsCreateNestedManyWithoutSheetsInput
    individuals: individualsCreateNestedOneWithoutSheetsInput
  }

  export type sheetsUncheckedCreateWithoutCollections_sheetsInput = {
    sheet_id?: number
    sheet_author_id: number
    sheet_title: string
    sheet_subject: string
    sheet_filename?: string | null
    sheet_data: Buffer
    entities_sheets?: entities_sheetsUncheckedCreateNestedManyWithoutSheetsInput
  }

  export type sheetsCreateOrConnectWithoutCollections_sheetsInput = {
    where: sheetsWhereUniqueInput
    create: XOR<sheetsCreateWithoutCollections_sheetsInput, sheetsUncheckedCreateWithoutCollections_sheetsInput>
  }

  export type collectionsUpsertWithoutCollections_sheetsInput = {
    update: XOR<collectionsUpdateWithoutCollections_sheetsInput, collectionsUncheckedUpdateWithoutCollections_sheetsInput>
    create: XOR<collectionsCreateWithoutCollections_sheetsInput, collectionsUncheckedCreateWithoutCollections_sheetsInput>
    where?: collectionsWhereInput
  }

  export type collectionsUpdateToOneWithWhereWithoutCollections_sheetsInput = {
    where?: collectionsWhereInput
    data: XOR<collectionsUpdateWithoutCollections_sheetsInput, collectionsUncheckedUpdateWithoutCollections_sheetsInput>
  }

  export type collectionsUpdateWithoutCollections_sheetsInput = {
    collection_name?: StringFieldUpdateOperationsInput | string
    individuals?: individualsUpdateOneWithoutCollectionsNestedInput
    organizations?: organizationsUpdateOneWithoutCollectionsNestedInput
    groups?: groupsUpdateOneWithoutCollectionsNestedInput
    collections_images?: collections_imagesUpdateManyWithoutCollectionsNestedInput
    collections_videos?: collections_videosUpdateManyWithoutCollectionsNestedInput
  }

  export type collectionsUncheckedUpdateWithoutCollections_sheetsInput = {
    collection_id?: IntFieldUpdateOperationsInput | number
    collection_name?: StringFieldUpdateOperationsInput | string
    individual_id?: NullableIntFieldUpdateOperationsInput | number | null
    group_id?: NullableIntFieldUpdateOperationsInput | number | null
    organization_id?: NullableIntFieldUpdateOperationsInput | number | null
    collections_images?: collections_imagesUncheckedUpdateManyWithoutCollectionsNestedInput
    collections_videos?: collections_videosUncheckedUpdateManyWithoutCollectionsNestedInput
  }

  export type sheetsUpsertWithoutCollections_sheetsInput = {
    update: XOR<sheetsUpdateWithoutCollections_sheetsInput, sheetsUncheckedUpdateWithoutCollections_sheetsInput>
    create: XOR<sheetsCreateWithoutCollections_sheetsInput, sheetsUncheckedCreateWithoutCollections_sheetsInput>
    where?: sheetsWhereInput
  }

  export type sheetsUpdateToOneWithWhereWithoutCollections_sheetsInput = {
    where?: sheetsWhereInput
    data: XOR<sheetsUpdateWithoutCollections_sheetsInput, sheetsUncheckedUpdateWithoutCollections_sheetsInput>
  }

  export type sheetsUpdateWithoutCollections_sheetsInput = {
    sheet_title?: StringFieldUpdateOperationsInput | string
    sheet_subject?: StringFieldUpdateOperationsInput | string
    sheet_filename?: NullableStringFieldUpdateOperationsInput | string | null
    sheet_data?: BytesFieldUpdateOperationsInput | Buffer
    entities_sheets?: entities_sheetsUpdateManyWithoutSheetsNestedInput
    individuals?: individualsUpdateOneRequiredWithoutSheetsNestedInput
  }

  export type sheetsUncheckedUpdateWithoutCollections_sheetsInput = {
    sheet_id?: IntFieldUpdateOperationsInput | number
    sheet_author_id?: IntFieldUpdateOperationsInput | number
    sheet_title?: StringFieldUpdateOperationsInput | string
    sheet_subject?: StringFieldUpdateOperationsInput | string
    sheet_filename?: NullableStringFieldUpdateOperationsInput | string | null
    sheet_data?: BytesFieldUpdateOperationsInput | Buffer
    entities_sheets?: entities_sheetsUncheckedUpdateManyWithoutSheetsNestedInput
  }

  export type collectionsCreateWithoutCollections_videosInput = {
    collection_name: string
    individuals?: individualsCreateNestedOneWithoutCollectionsInput
    organizations?: organizationsCreateNestedOneWithoutCollectionsInput
    groups?: groupsCreateNestedOneWithoutCollectionsInput
    collections_images?: collections_imagesCreateNestedManyWithoutCollectionsInput
    collections_sheets?: collections_sheetsCreateNestedManyWithoutCollectionsInput
  }

  export type collectionsUncheckedCreateWithoutCollections_videosInput = {
    collection_id?: number
    collection_name: string
    individual_id?: number | null
    group_id?: number | null
    organization_id?: number | null
    collections_images?: collections_imagesUncheckedCreateNestedManyWithoutCollectionsInput
    collections_sheets?: collections_sheetsUncheckedCreateNestedManyWithoutCollectionsInput
  }

  export type collectionsCreateOrConnectWithoutCollections_videosInput = {
    where: collectionsWhereUniqueInput
    create: XOR<collectionsCreateWithoutCollections_videosInput, collectionsUncheckedCreateWithoutCollections_videosInput>
  }

  export type videosCreateWithoutCollections_videosInput = {
    video_title: string
    video_description: string
    video_filename: string
    entities_videos?: entities_videosCreateNestedManyWithoutVideosInput
    individuals: individualsCreateNestedOneWithoutVideosInput
    videos_data: videos_dataCreateNestedOneWithoutVideosInput
  }

  export type videosUncheckedCreateWithoutCollections_videosInput = {
    video_id?: number
    video_creator_id: number
    video_title: string
    video_description: string
    video_filename: string
    video_data_id: number
    entities_videos?: entities_videosUncheckedCreateNestedManyWithoutVideosInput
  }

  export type videosCreateOrConnectWithoutCollections_videosInput = {
    where: videosWhereUniqueInput
    create: XOR<videosCreateWithoutCollections_videosInput, videosUncheckedCreateWithoutCollections_videosInput>
  }

  export type collectionsUpsertWithoutCollections_videosInput = {
    update: XOR<collectionsUpdateWithoutCollections_videosInput, collectionsUncheckedUpdateWithoutCollections_videosInput>
    create: XOR<collectionsCreateWithoutCollections_videosInput, collectionsUncheckedCreateWithoutCollections_videosInput>
    where?: collectionsWhereInput
  }

  export type collectionsUpdateToOneWithWhereWithoutCollections_videosInput = {
    where?: collectionsWhereInput
    data: XOR<collectionsUpdateWithoutCollections_videosInput, collectionsUncheckedUpdateWithoutCollections_videosInput>
  }

  export type collectionsUpdateWithoutCollections_videosInput = {
    collection_name?: StringFieldUpdateOperationsInput | string
    individuals?: individualsUpdateOneWithoutCollectionsNestedInput
    organizations?: organizationsUpdateOneWithoutCollectionsNestedInput
    groups?: groupsUpdateOneWithoutCollectionsNestedInput
    collections_images?: collections_imagesUpdateManyWithoutCollectionsNestedInput
    collections_sheets?: collections_sheetsUpdateManyWithoutCollectionsNestedInput
  }

  export type collectionsUncheckedUpdateWithoutCollections_videosInput = {
    collection_id?: IntFieldUpdateOperationsInput | number
    collection_name?: StringFieldUpdateOperationsInput | string
    individual_id?: NullableIntFieldUpdateOperationsInput | number | null
    group_id?: NullableIntFieldUpdateOperationsInput | number | null
    organization_id?: NullableIntFieldUpdateOperationsInput | number | null
    collections_images?: collections_imagesUncheckedUpdateManyWithoutCollectionsNestedInput
    collections_sheets?: collections_sheetsUncheckedUpdateManyWithoutCollectionsNestedInput
  }

  export type videosUpsertWithoutCollections_videosInput = {
    update: XOR<videosUpdateWithoutCollections_videosInput, videosUncheckedUpdateWithoutCollections_videosInput>
    create: XOR<videosCreateWithoutCollections_videosInput, videosUncheckedCreateWithoutCollections_videosInput>
    where?: videosWhereInput
  }

  export type videosUpdateToOneWithWhereWithoutCollections_videosInput = {
    where?: videosWhereInput
    data: XOR<videosUpdateWithoutCollections_videosInput, videosUncheckedUpdateWithoutCollections_videosInput>
  }

  export type videosUpdateWithoutCollections_videosInput = {
    video_title?: StringFieldUpdateOperationsInput | string
    video_description?: StringFieldUpdateOperationsInput | string
    video_filename?: StringFieldUpdateOperationsInput | string
    entities_videos?: entities_videosUpdateManyWithoutVideosNestedInput
    individuals?: individualsUpdateOneRequiredWithoutVideosNestedInput
    videos_data?: videos_dataUpdateOneRequiredWithoutVideosNestedInput
  }

  export type videosUncheckedUpdateWithoutCollections_videosInput = {
    video_id?: IntFieldUpdateOperationsInput | number
    video_creator_id?: IntFieldUpdateOperationsInput | number
    video_title?: StringFieldUpdateOperationsInput | string
    video_description?: StringFieldUpdateOperationsInput | string
    video_filename?: StringFieldUpdateOperationsInput | string
    video_data_id?: IntFieldUpdateOperationsInput | number
    entities_videos?: entities_videosUncheckedUpdateManyWithoutVideosNestedInput
  }

  export type groupsCreateWithoutEntitiesInput = {
    group_handle: string
    group_name: string
    group_currentIssue?: string | null
    group_stances?: string | null
    group_description?: string | null
    collections?: collectionsCreateNestedManyWithoutGroupsInput
    entities_references?: entities_referencesCreateNestedManyWithoutGroupsInput
    groups_members?: groups_membersCreateNestedManyWithoutGroupsInput
  }

  export type groupsUncheckedCreateWithoutEntitiesInput = {
    group_id?: number
    group_handle: string
    group_name: string
    group_currentIssue?: string | null
    group_stances?: string | null
    group_description?: string | null
    collections?: collectionsUncheckedCreateNestedManyWithoutGroupsInput
    entities_references?: entities_referencesUncheckedCreateNestedManyWithoutGroupsInput
    groups_members?: groups_membersUncheckedCreateNestedManyWithoutGroupsInput
  }

  export type groupsCreateOrConnectWithoutEntitiesInput = {
    where: groupsWhereUniqueInput
    create: XOR<groupsCreateWithoutEntitiesInput, groupsUncheckedCreateWithoutEntitiesInput>
  }

  export type individualsCreateWithoutEntitiesInput = {
    individual_userName: string
    individual_name: string
    individual_currentIssue?: string | null
    individual_roles?: string | null
    individual_description?: string | null
    collections?: collectionsCreateNestedManyWithoutIndividualsInput
    entities_references?: entities_referencesCreateNestedManyWithoutIndividualsInput
    groups_members?: groups_membersCreateNestedManyWithoutIndividualsInput
    images?: imagesCreateNestedManyWithoutIndividualsInput
    organizations_members?: organizations_membersCreateNestedManyWithoutIndividualsInput
    sheets?: sheetsCreateNestedManyWithoutIndividualsInput
    videos?: videosCreateNestedManyWithoutIndividualsInput
  }

  export type individualsUncheckedCreateWithoutEntitiesInput = {
    individual_id?: number
    individual_userName: string
    individual_name: string
    individual_currentIssue?: string | null
    individual_roles?: string | null
    individual_description?: string | null
    collections?: collectionsUncheckedCreateNestedManyWithoutIndividualsInput
    entities_references?: entities_referencesUncheckedCreateNestedManyWithoutIndividualsInput
    groups_members?: groups_membersUncheckedCreateNestedManyWithoutIndividualsInput
    images?: imagesUncheckedCreateNestedManyWithoutIndividualsInput
    organizations_members?: organizations_membersUncheckedCreateNestedManyWithoutIndividualsInput
    sheets?: sheetsUncheckedCreateNestedManyWithoutIndividualsInput
    videos?: videosUncheckedCreateNestedManyWithoutIndividualsInput
  }

  export type individualsCreateOrConnectWithoutEntitiesInput = {
    where: individualsWhereUniqueInput
    create: XOR<individualsCreateWithoutEntitiesInput, individualsUncheckedCreateWithoutEntitiesInput>
  }

  export type organizationsCreateWithoutEntitiesInput = {
    organization_handle: string
    organization_name: string
    organization_currentIssue?: string | null
    organization_stances?: string | null
    organization_description?: string | null
    collections?: collectionsCreateNestedManyWithoutOrganizationsInput
    entities_references?: entities_referencesCreateNestedManyWithoutOrganizationsInput
    organizations_members?: organizations_membersCreateNestedManyWithoutOrganizationsInput
  }

  export type organizationsUncheckedCreateWithoutEntitiesInput = {
    organization_id?: number
    organization_handle: string
    organization_name: string
    organization_currentIssue?: string | null
    organization_stances?: string | null
    organization_description?: string | null
    collections?: collectionsUncheckedCreateNestedManyWithoutOrganizationsInput
    entities_references?: entities_referencesUncheckedCreateNestedManyWithoutOrganizationsInput
    organizations_members?: organizations_membersUncheckedCreateNestedManyWithoutOrganizationsInput
  }

  export type organizationsCreateOrConnectWithoutEntitiesInput = {
    where: organizationsWhereUniqueInput
    create: XOR<organizationsCreateWithoutEntitiesInput, organizationsUncheckedCreateWithoutEntitiesInput>
  }

  export type entities_imagesCreateWithoutEntitiesInput = {
    date_added: Date | string
    pinned: boolean
    date_pinned?: Date | string | null
    images: imagesCreateNestedOneWithoutEntities_imagesInput
  }

  export type entities_imagesUncheckedCreateWithoutEntitiesInput = {
    entities_images_id?: number
    image_id: number
    date_added: Date | string
    pinned: boolean
    date_pinned?: Date | string | null
  }

  export type entities_imagesCreateOrConnectWithoutEntitiesInput = {
    where: entities_imagesWhereUniqueInput
    create: XOR<entities_imagesCreateWithoutEntitiesInput, entities_imagesUncheckedCreateWithoutEntitiesInput>
  }

  export type entities_imagesCreateManyEntitiesInputEnvelope = {
    data: entities_imagesCreateManyEntitiesInput | entities_imagesCreateManyEntitiesInput[]
    skipDuplicates?: boolean
  }

  export type entities_sheetsCreateWithoutEntitiesInput = {
    date_added: Date | string
    pinned: boolean
    date_pinned?: Date | string | null
    sheets: sheetsCreateNestedOneWithoutEntities_sheetsInput
  }

  export type entities_sheetsUncheckedCreateWithoutEntitiesInput = {
    entities_sheets_id?: number
    sheet_id: number
    date_added: Date | string
    pinned: boolean
    date_pinned?: Date | string | null
  }

  export type entities_sheetsCreateOrConnectWithoutEntitiesInput = {
    where: entities_sheetsWhereUniqueInput
    create: XOR<entities_sheetsCreateWithoutEntitiesInput, entities_sheetsUncheckedCreateWithoutEntitiesInput>
  }

  export type entities_sheetsCreateManyEntitiesInputEnvelope = {
    data: entities_sheetsCreateManyEntitiesInput | entities_sheetsCreateManyEntitiesInput[]
    skipDuplicates?: boolean
  }

  export type entities_videosCreateWithoutEntitiesInput = {
    date_added: Date | string
    pinned: boolean
    date_pinned?: Date | string | null
    videos: videosCreateNestedOneWithoutEntities_videosInput
  }

  export type entities_videosUncheckedCreateWithoutEntitiesInput = {
    entities_videos_id?: number
    video_id: number
    date_added: Date | string
    pinned: boolean
    date_pinned?: Date | string | null
  }

  export type entities_videosCreateOrConnectWithoutEntitiesInput = {
    where: entities_videosWhereUniqueInput
    create: XOR<entities_videosCreateWithoutEntitiesInput, entities_videosUncheckedCreateWithoutEntitiesInput>
  }

  export type entities_videosCreateManyEntitiesInputEnvelope = {
    data: entities_videosCreateManyEntitiesInput | entities_videosCreateManyEntitiesInput[]
    skipDuplicates?: boolean
  }

  export type groupsUpsertWithoutEntitiesInput = {
    update: XOR<groupsUpdateWithoutEntitiesInput, groupsUncheckedUpdateWithoutEntitiesInput>
    create: XOR<groupsCreateWithoutEntitiesInput, groupsUncheckedCreateWithoutEntitiesInput>
    where?: groupsWhereInput
  }

  export type groupsUpdateToOneWithWhereWithoutEntitiesInput = {
    where?: groupsWhereInput
    data: XOR<groupsUpdateWithoutEntitiesInput, groupsUncheckedUpdateWithoutEntitiesInput>
  }

  export type groupsUpdateWithoutEntitiesInput = {
    group_handle?: StringFieldUpdateOperationsInput | string
    group_name?: StringFieldUpdateOperationsInput | string
    group_currentIssue?: NullableStringFieldUpdateOperationsInput | string | null
    group_stances?: NullableStringFieldUpdateOperationsInput | string | null
    group_description?: NullableStringFieldUpdateOperationsInput | string | null
    collections?: collectionsUpdateManyWithoutGroupsNestedInput
    entities_references?: entities_referencesUpdateManyWithoutGroupsNestedInput
    groups_members?: groups_membersUpdateManyWithoutGroupsNestedInput
  }

  export type groupsUncheckedUpdateWithoutEntitiesInput = {
    group_id?: IntFieldUpdateOperationsInput | number
    group_handle?: StringFieldUpdateOperationsInput | string
    group_name?: StringFieldUpdateOperationsInput | string
    group_currentIssue?: NullableStringFieldUpdateOperationsInput | string | null
    group_stances?: NullableStringFieldUpdateOperationsInput | string | null
    group_description?: NullableStringFieldUpdateOperationsInput | string | null
    collections?: collectionsUncheckedUpdateManyWithoutGroupsNestedInput
    entities_references?: entities_referencesUncheckedUpdateManyWithoutGroupsNestedInput
    groups_members?: groups_membersUncheckedUpdateManyWithoutGroupsNestedInput
  }

  export type individualsUpsertWithoutEntitiesInput = {
    update: XOR<individualsUpdateWithoutEntitiesInput, individualsUncheckedUpdateWithoutEntitiesInput>
    create: XOR<individualsCreateWithoutEntitiesInput, individualsUncheckedCreateWithoutEntitiesInput>
    where?: individualsWhereInput
  }

  export type individualsUpdateToOneWithWhereWithoutEntitiesInput = {
    where?: individualsWhereInput
    data: XOR<individualsUpdateWithoutEntitiesInput, individualsUncheckedUpdateWithoutEntitiesInput>
  }

  export type individualsUpdateWithoutEntitiesInput = {
    individual_userName?: StringFieldUpdateOperationsInput | string
    individual_name?: StringFieldUpdateOperationsInput | string
    individual_currentIssue?: NullableStringFieldUpdateOperationsInput | string | null
    individual_roles?: NullableStringFieldUpdateOperationsInput | string | null
    individual_description?: NullableStringFieldUpdateOperationsInput | string | null
    collections?: collectionsUpdateManyWithoutIndividualsNestedInput
    entities_references?: entities_referencesUpdateManyWithoutIndividualsNestedInput
    groups_members?: groups_membersUpdateManyWithoutIndividualsNestedInput
    images?: imagesUpdateManyWithoutIndividualsNestedInput
    organizations_members?: organizations_membersUpdateManyWithoutIndividualsNestedInput
    sheets?: sheetsUpdateManyWithoutIndividualsNestedInput
    videos?: videosUpdateManyWithoutIndividualsNestedInput
  }

  export type individualsUncheckedUpdateWithoutEntitiesInput = {
    individual_id?: IntFieldUpdateOperationsInput | number
    individual_userName?: StringFieldUpdateOperationsInput | string
    individual_name?: StringFieldUpdateOperationsInput | string
    individual_currentIssue?: NullableStringFieldUpdateOperationsInput | string | null
    individual_roles?: NullableStringFieldUpdateOperationsInput | string | null
    individual_description?: NullableStringFieldUpdateOperationsInput | string | null
    collections?: collectionsUncheckedUpdateManyWithoutIndividualsNestedInput
    entities_references?: entities_referencesUncheckedUpdateManyWithoutIndividualsNestedInput
    groups_members?: groups_membersUncheckedUpdateManyWithoutIndividualsNestedInput
    images?: imagesUncheckedUpdateManyWithoutIndividualsNestedInput
    organizations_members?: organizations_membersUncheckedUpdateManyWithoutIndividualsNestedInput
    sheets?: sheetsUncheckedUpdateManyWithoutIndividualsNestedInput
    videos?: videosUncheckedUpdateManyWithoutIndividualsNestedInput
  }

  export type organizationsUpsertWithoutEntitiesInput = {
    update: XOR<organizationsUpdateWithoutEntitiesInput, organizationsUncheckedUpdateWithoutEntitiesInput>
    create: XOR<organizationsCreateWithoutEntitiesInput, organizationsUncheckedCreateWithoutEntitiesInput>
    where?: organizationsWhereInput
  }

  export type organizationsUpdateToOneWithWhereWithoutEntitiesInput = {
    where?: organizationsWhereInput
    data: XOR<organizationsUpdateWithoutEntitiesInput, organizationsUncheckedUpdateWithoutEntitiesInput>
  }

  export type organizationsUpdateWithoutEntitiesInput = {
    organization_handle?: StringFieldUpdateOperationsInput | string
    organization_name?: StringFieldUpdateOperationsInput | string
    organization_currentIssue?: NullableStringFieldUpdateOperationsInput | string | null
    organization_stances?: NullableStringFieldUpdateOperationsInput | string | null
    organization_description?: NullableStringFieldUpdateOperationsInput | string | null
    collections?: collectionsUpdateManyWithoutOrganizationsNestedInput
    entities_references?: entities_referencesUpdateManyWithoutOrganizationsNestedInput
    organizations_members?: organizations_membersUpdateManyWithoutOrganizationsNestedInput
  }

  export type organizationsUncheckedUpdateWithoutEntitiesInput = {
    organization_id?: IntFieldUpdateOperationsInput | number
    organization_handle?: StringFieldUpdateOperationsInput | string
    organization_name?: StringFieldUpdateOperationsInput | string
    organization_currentIssue?: NullableStringFieldUpdateOperationsInput | string | null
    organization_stances?: NullableStringFieldUpdateOperationsInput | string | null
    organization_description?: NullableStringFieldUpdateOperationsInput | string | null
    collections?: collectionsUncheckedUpdateManyWithoutOrganizationsNestedInput
    entities_references?: entities_referencesUncheckedUpdateManyWithoutOrganizationsNestedInput
    organizations_members?: organizations_membersUncheckedUpdateManyWithoutOrganizationsNestedInput
  }

  export type entities_imagesUpsertWithWhereUniqueWithoutEntitiesInput = {
    where: entities_imagesWhereUniqueInput
    update: XOR<entities_imagesUpdateWithoutEntitiesInput, entities_imagesUncheckedUpdateWithoutEntitiesInput>
    create: XOR<entities_imagesCreateWithoutEntitiesInput, entities_imagesUncheckedCreateWithoutEntitiesInput>
  }

  export type entities_imagesUpdateWithWhereUniqueWithoutEntitiesInput = {
    where: entities_imagesWhereUniqueInput
    data: XOR<entities_imagesUpdateWithoutEntitiesInput, entities_imagesUncheckedUpdateWithoutEntitiesInput>
  }

  export type entities_imagesUpdateManyWithWhereWithoutEntitiesInput = {
    where: entities_imagesScalarWhereInput
    data: XOR<entities_imagesUpdateManyMutationInput, entities_imagesUncheckedUpdateManyWithoutEntitiesInput>
  }

  export type entities_imagesScalarWhereInput = {
    AND?: entities_imagesScalarWhereInput | entities_imagesScalarWhereInput[]
    OR?: entities_imagesScalarWhereInput[]
    NOT?: entities_imagesScalarWhereInput | entities_imagesScalarWhereInput[]
    entities_images_id?: IntFilter<"entities_images"> | number
    entity_id?: IntFilter<"entities_images"> | number
    image_id?: IntFilter<"entities_images"> | number
    date_added?: DateTimeFilter<"entities_images"> | Date | string
    pinned?: BoolFilter<"entities_images"> | boolean
    date_pinned?: DateTimeNullableFilter<"entities_images"> | Date | string | null
  }

  export type entities_sheetsUpsertWithWhereUniqueWithoutEntitiesInput = {
    where: entities_sheetsWhereUniqueInput
    update: XOR<entities_sheetsUpdateWithoutEntitiesInput, entities_sheetsUncheckedUpdateWithoutEntitiesInput>
    create: XOR<entities_sheetsCreateWithoutEntitiesInput, entities_sheetsUncheckedCreateWithoutEntitiesInput>
  }

  export type entities_sheetsUpdateWithWhereUniqueWithoutEntitiesInput = {
    where: entities_sheetsWhereUniqueInput
    data: XOR<entities_sheetsUpdateWithoutEntitiesInput, entities_sheetsUncheckedUpdateWithoutEntitiesInput>
  }

  export type entities_sheetsUpdateManyWithWhereWithoutEntitiesInput = {
    where: entities_sheetsScalarWhereInput
    data: XOR<entities_sheetsUpdateManyMutationInput, entities_sheetsUncheckedUpdateManyWithoutEntitiesInput>
  }

  export type entities_sheetsScalarWhereInput = {
    AND?: entities_sheetsScalarWhereInput | entities_sheetsScalarWhereInput[]
    OR?: entities_sheetsScalarWhereInput[]
    NOT?: entities_sheetsScalarWhereInput | entities_sheetsScalarWhereInput[]
    entities_sheets_id?: IntFilter<"entities_sheets"> | number
    entity_id?: IntFilter<"entities_sheets"> | number
    sheet_id?: IntFilter<"entities_sheets"> | number
    date_added?: DateTimeFilter<"entities_sheets"> | Date | string
    pinned?: BoolFilter<"entities_sheets"> | boolean
    date_pinned?: DateTimeNullableFilter<"entities_sheets"> | Date | string | null
  }

  export type entities_videosUpsertWithWhereUniqueWithoutEntitiesInput = {
    where: entities_videosWhereUniqueInput
    update: XOR<entities_videosUpdateWithoutEntitiesInput, entities_videosUncheckedUpdateWithoutEntitiesInput>
    create: XOR<entities_videosCreateWithoutEntitiesInput, entities_videosUncheckedCreateWithoutEntitiesInput>
  }

  export type entities_videosUpdateWithWhereUniqueWithoutEntitiesInput = {
    where: entities_videosWhereUniqueInput
    data: XOR<entities_videosUpdateWithoutEntitiesInput, entities_videosUncheckedUpdateWithoutEntitiesInput>
  }

  export type entities_videosUpdateManyWithWhereWithoutEntitiesInput = {
    where: entities_videosScalarWhereInput
    data: XOR<entities_videosUpdateManyMutationInput, entities_videosUncheckedUpdateManyWithoutEntitiesInput>
  }

  export type entities_videosScalarWhereInput = {
    AND?: entities_videosScalarWhereInput | entities_videosScalarWhereInput[]
    OR?: entities_videosScalarWhereInput[]
    NOT?: entities_videosScalarWhereInput | entities_videosScalarWhereInput[]
    entities_videos_id?: IntFilter<"entities_videos"> | number
    entity_id?: IntFilter<"entities_videos"> | number
    video_id?: IntFilter<"entities_videos"> | number
    date_added?: DateTimeFilter<"entities_videos"> | Date | string
    pinned?: BoolFilter<"entities_videos"> | boolean
    date_pinned?: DateTimeNullableFilter<"entities_videos"> | Date | string | null
  }

  export type entitiesCreateWithoutEntities_imagesInput = {
    groups?: groupsCreateNestedOneWithoutEntitiesInput
    individuals?: individualsCreateNestedOneWithoutEntitiesInput
    organizations?: organizationsCreateNestedOneWithoutEntitiesInput
    entities_sheets?: entities_sheetsCreateNestedManyWithoutEntitiesInput
    entities_videos?: entities_videosCreateNestedManyWithoutEntitiesInput
  }

  export type entitiesUncheckedCreateWithoutEntities_imagesInput = {
    entity_id?: number
    individual_id?: number | null
    group_id?: number | null
    organization_id?: number | null
    entities_sheets?: entities_sheetsUncheckedCreateNestedManyWithoutEntitiesInput
    entities_videos?: entities_videosUncheckedCreateNestedManyWithoutEntitiesInput
  }

  export type entitiesCreateOrConnectWithoutEntities_imagesInput = {
    where: entitiesWhereUniqueInput
    create: XOR<entitiesCreateWithoutEntities_imagesInput, entitiesUncheckedCreateWithoutEntities_imagesInput>
  }

  export type imagesCreateWithoutEntities_imagesInput = {
    image_title: string
    image_description: string
    image_filename: string
    collections_images?: collections_imagesCreateNestedManyWithoutImagesInput
    individuals: individualsCreateNestedOneWithoutImagesInput
    images_data: images_dataCreateNestedOneWithoutImagesInput
  }

  export type imagesUncheckedCreateWithoutEntities_imagesInput = {
    image_id?: number
    image_creator_id: number
    image_title: string
    image_description: string
    image_filename: string
    image_data_id: number
    collections_images?: collections_imagesUncheckedCreateNestedManyWithoutImagesInput
  }

  export type imagesCreateOrConnectWithoutEntities_imagesInput = {
    where: imagesWhereUniqueInput
    create: XOR<imagesCreateWithoutEntities_imagesInput, imagesUncheckedCreateWithoutEntities_imagesInput>
  }

  export type entitiesUpsertWithoutEntities_imagesInput = {
    update: XOR<entitiesUpdateWithoutEntities_imagesInput, entitiesUncheckedUpdateWithoutEntities_imagesInput>
    create: XOR<entitiesCreateWithoutEntities_imagesInput, entitiesUncheckedCreateWithoutEntities_imagesInput>
    where?: entitiesWhereInput
  }

  export type entitiesUpdateToOneWithWhereWithoutEntities_imagesInput = {
    where?: entitiesWhereInput
    data: XOR<entitiesUpdateWithoutEntities_imagesInput, entitiesUncheckedUpdateWithoutEntities_imagesInput>
  }

  export type entitiesUpdateWithoutEntities_imagesInput = {
    groups?: groupsUpdateOneWithoutEntitiesNestedInput
    individuals?: individualsUpdateOneWithoutEntitiesNestedInput
    organizations?: organizationsUpdateOneWithoutEntitiesNestedInput
    entities_sheets?: entities_sheetsUpdateManyWithoutEntitiesNestedInput
    entities_videos?: entities_videosUpdateManyWithoutEntitiesNestedInput
  }

  export type entitiesUncheckedUpdateWithoutEntities_imagesInput = {
    entity_id?: IntFieldUpdateOperationsInput | number
    individual_id?: NullableIntFieldUpdateOperationsInput | number | null
    group_id?: NullableIntFieldUpdateOperationsInput | number | null
    organization_id?: NullableIntFieldUpdateOperationsInput | number | null
    entities_sheets?: entities_sheetsUncheckedUpdateManyWithoutEntitiesNestedInput
    entities_videos?: entities_videosUncheckedUpdateManyWithoutEntitiesNestedInput
  }

  export type imagesUpsertWithoutEntities_imagesInput = {
    update: XOR<imagesUpdateWithoutEntities_imagesInput, imagesUncheckedUpdateWithoutEntities_imagesInput>
    create: XOR<imagesCreateWithoutEntities_imagesInput, imagesUncheckedCreateWithoutEntities_imagesInput>
    where?: imagesWhereInput
  }

  export type imagesUpdateToOneWithWhereWithoutEntities_imagesInput = {
    where?: imagesWhereInput
    data: XOR<imagesUpdateWithoutEntities_imagesInput, imagesUncheckedUpdateWithoutEntities_imagesInput>
  }

  export type imagesUpdateWithoutEntities_imagesInput = {
    image_title?: StringFieldUpdateOperationsInput | string
    image_description?: StringFieldUpdateOperationsInput | string
    image_filename?: StringFieldUpdateOperationsInput | string
    collections_images?: collections_imagesUpdateManyWithoutImagesNestedInput
    individuals?: individualsUpdateOneRequiredWithoutImagesNestedInput
    images_data?: images_dataUpdateOneRequiredWithoutImagesNestedInput
  }

  export type imagesUncheckedUpdateWithoutEntities_imagesInput = {
    image_id?: IntFieldUpdateOperationsInput | number
    image_creator_id?: IntFieldUpdateOperationsInput | number
    image_title?: StringFieldUpdateOperationsInput | string
    image_description?: StringFieldUpdateOperationsInput | string
    image_filename?: StringFieldUpdateOperationsInput | string
    image_data_id?: IntFieldUpdateOperationsInput | number
    collections_images?: collections_imagesUncheckedUpdateManyWithoutImagesNestedInput
  }

  export type groupsCreateWithoutEntities_referencesInput = {
    group_handle: string
    group_name: string
    group_currentIssue?: string | null
    group_stances?: string | null
    group_description?: string | null
    collections?: collectionsCreateNestedManyWithoutGroupsInput
    entities?: entitiesCreateNestedManyWithoutGroupsInput
    groups_members?: groups_membersCreateNestedManyWithoutGroupsInput
  }

  export type groupsUncheckedCreateWithoutEntities_referencesInput = {
    group_id?: number
    group_handle: string
    group_name: string
    group_currentIssue?: string | null
    group_stances?: string | null
    group_description?: string | null
    collections?: collectionsUncheckedCreateNestedManyWithoutGroupsInput
    entities?: entitiesUncheckedCreateNestedManyWithoutGroupsInput
    groups_members?: groups_membersUncheckedCreateNestedManyWithoutGroupsInput
  }

  export type groupsCreateOrConnectWithoutEntities_referencesInput = {
    where: groupsWhereUniqueInput
    create: XOR<groupsCreateWithoutEntities_referencesInput, groupsUncheckedCreateWithoutEntities_referencesInput>
  }

  export type individualsCreateWithoutEntities_referencesInput = {
    individual_userName: string
    individual_name: string
    individual_currentIssue?: string | null
    individual_roles?: string | null
    individual_description?: string | null
    collections?: collectionsCreateNestedManyWithoutIndividualsInput
    entities?: entitiesCreateNestedManyWithoutIndividualsInput
    groups_members?: groups_membersCreateNestedManyWithoutIndividualsInput
    images?: imagesCreateNestedManyWithoutIndividualsInput
    organizations_members?: organizations_membersCreateNestedManyWithoutIndividualsInput
    sheets?: sheetsCreateNestedManyWithoutIndividualsInput
    videos?: videosCreateNestedManyWithoutIndividualsInput
  }

  export type individualsUncheckedCreateWithoutEntities_referencesInput = {
    individual_id?: number
    individual_userName: string
    individual_name: string
    individual_currentIssue?: string | null
    individual_roles?: string | null
    individual_description?: string | null
    collections?: collectionsUncheckedCreateNestedManyWithoutIndividualsInput
    entities?: entitiesUncheckedCreateNestedManyWithoutIndividualsInput
    groups_members?: groups_membersUncheckedCreateNestedManyWithoutIndividualsInput
    images?: imagesUncheckedCreateNestedManyWithoutIndividualsInput
    organizations_members?: organizations_membersUncheckedCreateNestedManyWithoutIndividualsInput
    sheets?: sheetsUncheckedCreateNestedManyWithoutIndividualsInput
    videos?: videosUncheckedCreateNestedManyWithoutIndividualsInput
  }

  export type individualsCreateOrConnectWithoutEntities_referencesInput = {
    where: individualsWhereUniqueInput
    create: XOR<individualsCreateWithoutEntities_referencesInput, individualsUncheckedCreateWithoutEntities_referencesInput>
  }

  export type organizationsCreateWithoutEntities_referencesInput = {
    organization_handle: string
    organization_name: string
    organization_currentIssue?: string | null
    organization_stances?: string | null
    organization_description?: string | null
    collections?: collectionsCreateNestedManyWithoutOrganizationsInput
    entities?: entitiesCreateNestedManyWithoutOrganizationsInput
    organizations_members?: organizations_membersCreateNestedManyWithoutOrganizationsInput
  }

  export type organizationsUncheckedCreateWithoutEntities_referencesInput = {
    organization_id?: number
    organization_handle: string
    organization_name: string
    organization_currentIssue?: string | null
    organization_stances?: string | null
    organization_description?: string | null
    collections?: collectionsUncheckedCreateNestedManyWithoutOrganizationsInput
    entities?: entitiesUncheckedCreateNestedManyWithoutOrganizationsInput
    organizations_members?: organizations_membersUncheckedCreateNestedManyWithoutOrganizationsInput
  }

  export type organizationsCreateOrConnectWithoutEntities_referencesInput = {
    where: organizationsWhereUniqueInput
    create: XOR<organizationsCreateWithoutEntities_referencesInput, organizationsUncheckedCreateWithoutEntities_referencesInput>
  }

  export type groupsUpsertWithoutEntities_referencesInput = {
    update: XOR<groupsUpdateWithoutEntities_referencesInput, groupsUncheckedUpdateWithoutEntities_referencesInput>
    create: XOR<groupsCreateWithoutEntities_referencesInput, groupsUncheckedCreateWithoutEntities_referencesInput>
    where?: groupsWhereInput
  }

  export type groupsUpdateToOneWithWhereWithoutEntities_referencesInput = {
    where?: groupsWhereInput
    data: XOR<groupsUpdateWithoutEntities_referencesInput, groupsUncheckedUpdateWithoutEntities_referencesInput>
  }

  export type groupsUpdateWithoutEntities_referencesInput = {
    group_handle?: StringFieldUpdateOperationsInput | string
    group_name?: StringFieldUpdateOperationsInput | string
    group_currentIssue?: NullableStringFieldUpdateOperationsInput | string | null
    group_stances?: NullableStringFieldUpdateOperationsInput | string | null
    group_description?: NullableStringFieldUpdateOperationsInput | string | null
    collections?: collectionsUpdateManyWithoutGroupsNestedInput
    entities?: entitiesUpdateManyWithoutGroupsNestedInput
    groups_members?: groups_membersUpdateManyWithoutGroupsNestedInput
  }

  export type groupsUncheckedUpdateWithoutEntities_referencesInput = {
    group_id?: IntFieldUpdateOperationsInput | number
    group_handle?: StringFieldUpdateOperationsInput | string
    group_name?: StringFieldUpdateOperationsInput | string
    group_currentIssue?: NullableStringFieldUpdateOperationsInput | string | null
    group_stances?: NullableStringFieldUpdateOperationsInput | string | null
    group_description?: NullableStringFieldUpdateOperationsInput | string | null
    collections?: collectionsUncheckedUpdateManyWithoutGroupsNestedInput
    entities?: entitiesUncheckedUpdateManyWithoutGroupsNestedInput
    groups_members?: groups_membersUncheckedUpdateManyWithoutGroupsNestedInput
  }

  export type individualsUpsertWithoutEntities_referencesInput = {
    update: XOR<individualsUpdateWithoutEntities_referencesInput, individualsUncheckedUpdateWithoutEntities_referencesInput>
    create: XOR<individualsCreateWithoutEntities_referencesInput, individualsUncheckedCreateWithoutEntities_referencesInput>
    where?: individualsWhereInput
  }

  export type individualsUpdateToOneWithWhereWithoutEntities_referencesInput = {
    where?: individualsWhereInput
    data: XOR<individualsUpdateWithoutEntities_referencesInput, individualsUncheckedUpdateWithoutEntities_referencesInput>
  }

  export type individualsUpdateWithoutEntities_referencesInput = {
    individual_userName?: StringFieldUpdateOperationsInput | string
    individual_name?: StringFieldUpdateOperationsInput | string
    individual_currentIssue?: NullableStringFieldUpdateOperationsInput | string | null
    individual_roles?: NullableStringFieldUpdateOperationsInput | string | null
    individual_description?: NullableStringFieldUpdateOperationsInput | string | null
    collections?: collectionsUpdateManyWithoutIndividualsNestedInput
    entities?: entitiesUpdateManyWithoutIndividualsNestedInput
    groups_members?: groups_membersUpdateManyWithoutIndividualsNestedInput
    images?: imagesUpdateManyWithoutIndividualsNestedInput
    organizations_members?: organizations_membersUpdateManyWithoutIndividualsNestedInput
    sheets?: sheetsUpdateManyWithoutIndividualsNestedInput
    videos?: videosUpdateManyWithoutIndividualsNestedInput
  }

  export type individualsUncheckedUpdateWithoutEntities_referencesInput = {
    individual_id?: IntFieldUpdateOperationsInput | number
    individual_userName?: StringFieldUpdateOperationsInput | string
    individual_name?: StringFieldUpdateOperationsInput | string
    individual_currentIssue?: NullableStringFieldUpdateOperationsInput | string | null
    individual_roles?: NullableStringFieldUpdateOperationsInput | string | null
    individual_description?: NullableStringFieldUpdateOperationsInput | string | null
    collections?: collectionsUncheckedUpdateManyWithoutIndividualsNestedInput
    entities?: entitiesUncheckedUpdateManyWithoutIndividualsNestedInput
    groups_members?: groups_membersUncheckedUpdateManyWithoutIndividualsNestedInput
    images?: imagesUncheckedUpdateManyWithoutIndividualsNestedInput
    organizations_members?: organizations_membersUncheckedUpdateManyWithoutIndividualsNestedInput
    sheets?: sheetsUncheckedUpdateManyWithoutIndividualsNestedInput
    videos?: videosUncheckedUpdateManyWithoutIndividualsNestedInput
  }

  export type organizationsUpsertWithoutEntities_referencesInput = {
    update: XOR<organizationsUpdateWithoutEntities_referencesInput, organizationsUncheckedUpdateWithoutEntities_referencesInput>
    create: XOR<organizationsCreateWithoutEntities_referencesInput, organizationsUncheckedCreateWithoutEntities_referencesInput>
    where?: organizationsWhereInput
  }

  export type organizationsUpdateToOneWithWhereWithoutEntities_referencesInput = {
    where?: organizationsWhereInput
    data: XOR<organizationsUpdateWithoutEntities_referencesInput, organizationsUncheckedUpdateWithoutEntities_referencesInput>
  }

  export type organizationsUpdateWithoutEntities_referencesInput = {
    organization_handle?: StringFieldUpdateOperationsInput | string
    organization_name?: StringFieldUpdateOperationsInput | string
    organization_currentIssue?: NullableStringFieldUpdateOperationsInput | string | null
    organization_stances?: NullableStringFieldUpdateOperationsInput | string | null
    organization_description?: NullableStringFieldUpdateOperationsInput | string | null
    collections?: collectionsUpdateManyWithoutOrganizationsNestedInput
    entities?: entitiesUpdateManyWithoutOrganizationsNestedInput
    organizations_members?: organizations_membersUpdateManyWithoutOrganizationsNestedInput
  }

  export type organizationsUncheckedUpdateWithoutEntities_referencesInput = {
    organization_id?: IntFieldUpdateOperationsInput | number
    organization_handle?: StringFieldUpdateOperationsInput | string
    organization_name?: StringFieldUpdateOperationsInput | string
    organization_currentIssue?: NullableStringFieldUpdateOperationsInput | string | null
    organization_stances?: NullableStringFieldUpdateOperationsInput | string | null
    organization_description?: NullableStringFieldUpdateOperationsInput | string | null
    collections?: collectionsUncheckedUpdateManyWithoutOrganizationsNestedInput
    entities?: entitiesUncheckedUpdateManyWithoutOrganizationsNestedInput
    organizations_members?: organizations_membersUncheckedUpdateManyWithoutOrganizationsNestedInput
  }

  export type entitiesCreateWithoutEntities_sheetsInput = {
    groups?: groupsCreateNestedOneWithoutEntitiesInput
    individuals?: individualsCreateNestedOneWithoutEntitiesInput
    organizations?: organizationsCreateNestedOneWithoutEntitiesInput
    entities_images?: entities_imagesCreateNestedManyWithoutEntitiesInput
    entities_videos?: entities_videosCreateNestedManyWithoutEntitiesInput
  }

  export type entitiesUncheckedCreateWithoutEntities_sheetsInput = {
    entity_id?: number
    individual_id?: number | null
    group_id?: number | null
    organization_id?: number | null
    entities_images?: entities_imagesUncheckedCreateNestedManyWithoutEntitiesInput
    entities_videos?: entities_videosUncheckedCreateNestedManyWithoutEntitiesInput
  }

  export type entitiesCreateOrConnectWithoutEntities_sheetsInput = {
    where: entitiesWhereUniqueInput
    create: XOR<entitiesCreateWithoutEntities_sheetsInput, entitiesUncheckedCreateWithoutEntities_sheetsInput>
  }

  export type sheetsCreateWithoutEntities_sheetsInput = {
    sheet_title: string
    sheet_subject: string
    sheet_filename?: string | null
    sheet_data: Buffer
    collections_sheets?: collections_sheetsCreateNestedManyWithoutSheetsInput
    individuals: individualsCreateNestedOneWithoutSheetsInput
  }

  export type sheetsUncheckedCreateWithoutEntities_sheetsInput = {
    sheet_id?: number
    sheet_author_id: number
    sheet_title: string
    sheet_subject: string
    sheet_filename?: string | null
    sheet_data: Buffer
    collections_sheets?: collections_sheetsUncheckedCreateNestedManyWithoutSheetsInput
  }

  export type sheetsCreateOrConnectWithoutEntities_sheetsInput = {
    where: sheetsWhereUniqueInput
    create: XOR<sheetsCreateWithoutEntities_sheetsInput, sheetsUncheckedCreateWithoutEntities_sheetsInput>
  }

  export type entitiesUpsertWithoutEntities_sheetsInput = {
    update: XOR<entitiesUpdateWithoutEntities_sheetsInput, entitiesUncheckedUpdateWithoutEntities_sheetsInput>
    create: XOR<entitiesCreateWithoutEntities_sheetsInput, entitiesUncheckedCreateWithoutEntities_sheetsInput>
    where?: entitiesWhereInput
  }

  export type entitiesUpdateToOneWithWhereWithoutEntities_sheetsInput = {
    where?: entitiesWhereInput
    data: XOR<entitiesUpdateWithoutEntities_sheetsInput, entitiesUncheckedUpdateWithoutEntities_sheetsInput>
  }

  export type entitiesUpdateWithoutEntities_sheetsInput = {
    groups?: groupsUpdateOneWithoutEntitiesNestedInput
    individuals?: individualsUpdateOneWithoutEntitiesNestedInput
    organizations?: organizationsUpdateOneWithoutEntitiesNestedInput
    entities_images?: entities_imagesUpdateManyWithoutEntitiesNestedInput
    entities_videos?: entities_videosUpdateManyWithoutEntitiesNestedInput
  }

  export type entitiesUncheckedUpdateWithoutEntities_sheetsInput = {
    entity_id?: IntFieldUpdateOperationsInput | number
    individual_id?: NullableIntFieldUpdateOperationsInput | number | null
    group_id?: NullableIntFieldUpdateOperationsInput | number | null
    organization_id?: NullableIntFieldUpdateOperationsInput | number | null
    entities_images?: entities_imagesUncheckedUpdateManyWithoutEntitiesNestedInput
    entities_videos?: entities_videosUncheckedUpdateManyWithoutEntitiesNestedInput
  }

  export type sheetsUpsertWithoutEntities_sheetsInput = {
    update: XOR<sheetsUpdateWithoutEntities_sheetsInput, sheetsUncheckedUpdateWithoutEntities_sheetsInput>
    create: XOR<sheetsCreateWithoutEntities_sheetsInput, sheetsUncheckedCreateWithoutEntities_sheetsInput>
    where?: sheetsWhereInput
  }

  export type sheetsUpdateToOneWithWhereWithoutEntities_sheetsInput = {
    where?: sheetsWhereInput
    data: XOR<sheetsUpdateWithoutEntities_sheetsInput, sheetsUncheckedUpdateWithoutEntities_sheetsInput>
  }

  export type sheetsUpdateWithoutEntities_sheetsInput = {
    sheet_title?: StringFieldUpdateOperationsInput | string
    sheet_subject?: StringFieldUpdateOperationsInput | string
    sheet_filename?: NullableStringFieldUpdateOperationsInput | string | null
    sheet_data?: BytesFieldUpdateOperationsInput | Buffer
    collections_sheets?: collections_sheetsUpdateManyWithoutSheetsNestedInput
    individuals?: individualsUpdateOneRequiredWithoutSheetsNestedInput
  }

  export type sheetsUncheckedUpdateWithoutEntities_sheetsInput = {
    sheet_id?: IntFieldUpdateOperationsInput | number
    sheet_author_id?: IntFieldUpdateOperationsInput | number
    sheet_title?: StringFieldUpdateOperationsInput | string
    sheet_subject?: StringFieldUpdateOperationsInput | string
    sheet_filename?: NullableStringFieldUpdateOperationsInput | string | null
    sheet_data?: BytesFieldUpdateOperationsInput | Buffer
    collections_sheets?: collections_sheetsUncheckedUpdateManyWithoutSheetsNestedInput
  }

  export type entitiesCreateWithoutEntities_videosInput = {
    groups?: groupsCreateNestedOneWithoutEntitiesInput
    individuals?: individualsCreateNestedOneWithoutEntitiesInput
    organizations?: organizationsCreateNestedOneWithoutEntitiesInput
    entities_images?: entities_imagesCreateNestedManyWithoutEntitiesInput
    entities_sheets?: entities_sheetsCreateNestedManyWithoutEntitiesInput
  }

  export type entitiesUncheckedCreateWithoutEntities_videosInput = {
    entity_id?: number
    individual_id?: number | null
    group_id?: number | null
    organization_id?: number | null
    entities_images?: entities_imagesUncheckedCreateNestedManyWithoutEntitiesInput
    entities_sheets?: entities_sheetsUncheckedCreateNestedManyWithoutEntitiesInput
  }

  export type entitiesCreateOrConnectWithoutEntities_videosInput = {
    where: entitiesWhereUniqueInput
    create: XOR<entitiesCreateWithoutEntities_videosInput, entitiesUncheckedCreateWithoutEntities_videosInput>
  }

  export type videosCreateWithoutEntities_videosInput = {
    video_title: string
    video_description: string
    video_filename: string
    collections_videos?: collections_videosCreateNestedManyWithoutVideosInput
    individuals: individualsCreateNestedOneWithoutVideosInput
    videos_data: videos_dataCreateNestedOneWithoutVideosInput
  }

  export type videosUncheckedCreateWithoutEntities_videosInput = {
    video_id?: number
    video_creator_id: number
    video_title: string
    video_description: string
    video_filename: string
    video_data_id: number
    collections_videos?: collections_videosUncheckedCreateNestedManyWithoutVideosInput
  }

  export type videosCreateOrConnectWithoutEntities_videosInput = {
    where: videosWhereUniqueInput
    create: XOR<videosCreateWithoutEntities_videosInput, videosUncheckedCreateWithoutEntities_videosInput>
  }

  export type entitiesUpsertWithoutEntities_videosInput = {
    update: XOR<entitiesUpdateWithoutEntities_videosInput, entitiesUncheckedUpdateWithoutEntities_videosInput>
    create: XOR<entitiesCreateWithoutEntities_videosInput, entitiesUncheckedCreateWithoutEntities_videosInput>
    where?: entitiesWhereInput
  }

  export type entitiesUpdateToOneWithWhereWithoutEntities_videosInput = {
    where?: entitiesWhereInput
    data: XOR<entitiesUpdateWithoutEntities_videosInput, entitiesUncheckedUpdateWithoutEntities_videosInput>
  }

  export type entitiesUpdateWithoutEntities_videosInput = {
    groups?: groupsUpdateOneWithoutEntitiesNestedInput
    individuals?: individualsUpdateOneWithoutEntitiesNestedInput
    organizations?: organizationsUpdateOneWithoutEntitiesNestedInput
    entities_images?: entities_imagesUpdateManyWithoutEntitiesNestedInput
    entities_sheets?: entities_sheetsUpdateManyWithoutEntitiesNestedInput
  }

  export type entitiesUncheckedUpdateWithoutEntities_videosInput = {
    entity_id?: IntFieldUpdateOperationsInput | number
    individual_id?: NullableIntFieldUpdateOperationsInput | number | null
    group_id?: NullableIntFieldUpdateOperationsInput | number | null
    organization_id?: NullableIntFieldUpdateOperationsInput | number | null
    entities_images?: entities_imagesUncheckedUpdateManyWithoutEntitiesNestedInput
    entities_sheets?: entities_sheetsUncheckedUpdateManyWithoutEntitiesNestedInput
  }

  export type videosUpsertWithoutEntities_videosInput = {
    update: XOR<videosUpdateWithoutEntities_videosInput, videosUncheckedUpdateWithoutEntities_videosInput>
    create: XOR<videosCreateWithoutEntities_videosInput, videosUncheckedCreateWithoutEntities_videosInput>
    where?: videosWhereInput
  }

  export type videosUpdateToOneWithWhereWithoutEntities_videosInput = {
    where?: videosWhereInput
    data: XOR<videosUpdateWithoutEntities_videosInput, videosUncheckedUpdateWithoutEntities_videosInput>
  }

  export type videosUpdateWithoutEntities_videosInput = {
    video_title?: StringFieldUpdateOperationsInput | string
    video_description?: StringFieldUpdateOperationsInput | string
    video_filename?: StringFieldUpdateOperationsInput | string
    collections_videos?: collections_videosUpdateManyWithoutVideosNestedInput
    individuals?: individualsUpdateOneRequiredWithoutVideosNestedInput
    videos_data?: videos_dataUpdateOneRequiredWithoutVideosNestedInput
  }

  export type videosUncheckedUpdateWithoutEntities_videosInput = {
    video_id?: IntFieldUpdateOperationsInput | number
    video_creator_id?: IntFieldUpdateOperationsInput | number
    video_title?: StringFieldUpdateOperationsInput | string
    video_description?: StringFieldUpdateOperationsInput | string
    video_filename?: StringFieldUpdateOperationsInput | string
    video_data_id?: IntFieldUpdateOperationsInput | number
    collections_videos?: collections_videosUncheckedUpdateManyWithoutVideosNestedInput
  }

  export type collectionsCreateWithoutGroupsInput = {
    collection_name: string
    individuals?: individualsCreateNestedOneWithoutCollectionsInput
    organizations?: organizationsCreateNestedOneWithoutCollectionsInput
    collections_images?: collections_imagesCreateNestedManyWithoutCollectionsInput
    collections_sheets?: collections_sheetsCreateNestedManyWithoutCollectionsInput
    collections_videos?: collections_videosCreateNestedManyWithoutCollectionsInput
  }

  export type collectionsUncheckedCreateWithoutGroupsInput = {
    collection_id?: number
    collection_name: string
    individual_id?: number | null
    organization_id?: number | null
    collections_images?: collections_imagesUncheckedCreateNestedManyWithoutCollectionsInput
    collections_sheets?: collections_sheetsUncheckedCreateNestedManyWithoutCollectionsInput
    collections_videos?: collections_videosUncheckedCreateNestedManyWithoutCollectionsInput
  }

  export type collectionsCreateOrConnectWithoutGroupsInput = {
    where: collectionsWhereUniqueInput
    create: XOR<collectionsCreateWithoutGroupsInput, collectionsUncheckedCreateWithoutGroupsInput>
  }

  export type collectionsCreateManyGroupsInputEnvelope = {
    data: collectionsCreateManyGroupsInput | collectionsCreateManyGroupsInput[]
    skipDuplicates?: boolean
  }

  export type entitiesCreateWithoutGroupsInput = {
    individuals?: individualsCreateNestedOneWithoutEntitiesInput
    organizations?: organizationsCreateNestedOneWithoutEntitiesInput
    entities_images?: entities_imagesCreateNestedManyWithoutEntitiesInput
    entities_sheets?: entities_sheetsCreateNestedManyWithoutEntitiesInput
    entities_videos?: entities_videosCreateNestedManyWithoutEntitiesInput
  }

  export type entitiesUncheckedCreateWithoutGroupsInput = {
    entity_id?: number
    individual_id?: number | null
    organization_id?: number | null
    entities_images?: entities_imagesUncheckedCreateNestedManyWithoutEntitiesInput
    entities_sheets?: entities_sheetsUncheckedCreateNestedManyWithoutEntitiesInput
    entities_videos?: entities_videosUncheckedCreateNestedManyWithoutEntitiesInput
  }

  export type entitiesCreateOrConnectWithoutGroupsInput = {
    where: entitiesWhereUniqueInput
    create: XOR<entitiesCreateWithoutGroupsInput, entitiesUncheckedCreateWithoutGroupsInput>
  }

  export type entitiesCreateManyGroupsInputEnvelope = {
    data: entitiesCreateManyGroupsInput | entitiesCreateManyGroupsInput[]
    skipDuplicates?: boolean
  }

  export type entities_referencesCreateWithoutGroupsInput = {
    title: string
    author: string
    url: string
    individuals?: individualsCreateNestedOneWithoutEntities_referencesInput
    organizations?: organizationsCreateNestedOneWithoutEntities_referencesInput
  }

  export type entities_referencesUncheckedCreateWithoutGroupsInput = {
    reference_id?: number
    individual_id?: number | null
    organization_id?: number | null
    title: string
    author: string
    url: string
  }

  export type entities_referencesCreateOrConnectWithoutGroupsInput = {
    where: entities_referencesWhereUniqueInput
    create: XOR<entities_referencesCreateWithoutGroupsInput, entities_referencesUncheckedCreateWithoutGroupsInput>
  }

  export type entities_referencesCreateManyGroupsInputEnvelope = {
    data: entities_referencesCreateManyGroupsInput | entities_referencesCreateManyGroupsInput[]
    skipDuplicates?: boolean
  }

  export type groups_membersCreateWithoutGroupsInput = {
    individuals: individualsCreateNestedOneWithoutGroups_membersInput
  }

  export type groups_membersUncheckedCreateWithoutGroupsInput = {
    individual_id: number
  }

  export type groups_membersCreateOrConnectWithoutGroupsInput = {
    where: groups_membersWhereUniqueInput
    create: XOR<groups_membersCreateWithoutGroupsInput, groups_membersUncheckedCreateWithoutGroupsInput>
  }

  export type groups_membersCreateManyGroupsInputEnvelope = {
    data: groups_membersCreateManyGroupsInput | groups_membersCreateManyGroupsInput[]
    skipDuplicates?: boolean
  }

  export type collectionsUpsertWithWhereUniqueWithoutGroupsInput = {
    where: collectionsWhereUniqueInput
    update: XOR<collectionsUpdateWithoutGroupsInput, collectionsUncheckedUpdateWithoutGroupsInput>
    create: XOR<collectionsCreateWithoutGroupsInput, collectionsUncheckedCreateWithoutGroupsInput>
  }

  export type collectionsUpdateWithWhereUniqueWithoutGroupsInput = {
    where: collectionsWhereUniqueInput
    data: XOR<collectionsUpdateWithoutGroupsInput, collectionsUncheckedUpdateWithoutGroupsInput>
  }

  export type collectionsUpdateManyWithWhereWithoutGroupsInput = {
    where: collectionsScalarWhereInput
    data: XOR<collectionsUpdateManyMutationInput, collectionsUncheckedUpdateManyWithoutGroupsInput>
  }

  export type collectionsScalarWhereInput = {
    AND?: collectionsScalarWhereInput | collectionsScalarWhereInput[]
    OR?: collectionsScalarWhereInput[]
    NOT?: collectionsScalarWhereInput | collectionsScalarWhereInput[]
    collection_id?: IntFilter<"collections"> | number
    collection_name?: StringFilter<"collections"> | string
    individual_id?: IntNullableFilter<"collections"> | number | null
    group_id?: IntNullableFilter<"collections"> | number | null
    organization_id?: IntNullableFilter<"collections"> | number | null
  }

  export type entitiesUpsertWithWhereUniqueWithoutGroupsInput = {
    where: entitiesWhereUniqueInput
    update: XOR<entitiesUpdateWithoutGroupsInput, entitiesUncheckedUpdateWithoutGroupsInput>
    create: XOR<entitiesCreateWithoutGroupsInput, entitiesUncheckedCreateWithoutGroupsInput>
  }

  export type entitiesUpdateWithWhereUniqueWithoutGroupsInput = {
    where: entitiesWhereUniqueInput
    data: XOR<entitiesUpdateWithoutGroupsInput, entitiesUncheckedUpdateWithoutGroupsInput>
  }

  export type entitiesUpdateManyWithWhereWithoutGroupsInput = {
    where: entitiesScalarWhereInput
    data: XOR<entitiesUpdateManyMutationInput, entitiesUncheckedUpdateManyWithoutGroupsInput>
  }

  export type entitiesScalarWhereInput = {
    AND?: entitiesScalarWhereInput | entitiesScalarWhereInput[]
    OR?: entitiesScalarWhereInput[]
    NOT?: entitiesScalarWhereInput | entitiesScalarWhereInput[]
    entity_id?: IntFilter<"entities"> | number
    individual_id?: IntNullableFilter<"entities"> | number | null
    group_id?: IntNullableFilter<"entities"> | number | null
    organization_id?: IntNullableFilter<"entities"> | number | null
  }

  export type entities_referencesUpsertWithWhereUniqueWithoutGroupsInput = {
    where: entities_referencesWhereUniqueInput
    update: XOR<entities_referencesUpdateWithoutGroupsInput, entities_referencesUncheckedUpdateWithoutGroupsInput>
    create: XOR<entities_referencesCreateWithoutGroupsInput, entities_referencesUncheckedCreateWithoutGroupsInput>
  }

  export type entities_referencesUpdateWithWhereUniqueWithoutGroupsInput = {
    where: entities_referencesWhereUniqueInput
    data: XOR<entities_referencesUpdateWithoutGroupsInput, entities_referencesUncheckedUpdateWithoutGroupsInput>
  }

  export type entities_referencesUpdateManyWithWhereWithoutGroupsInput = {
    where: entities_referencesScalarWhereInput
    data: XOR<entities_referencesUpdateManyMutationInput, entities_referencesUncheckedUpdateManyWithoutGroupsInput>
  }

  export type entities_referencesScalarWhereInput = {
    AND?: entities_referencesScalarWhereInput | entities_referencesScalarWhereInput[]
    OR?: entities_referencesScalarWhereInput[]
    NOT?: entities_referencesScalarWhereInput | entities_referencesScalarWhereInput[]
    reference_id?: IntFilter<"entities_references"> | number
    individual_id?: IntNullableFilter<"entities_references"> | number | null
    group_id?: IntNullableFilter<"entities_references"> | number | null
    organization_id?: IntNullableFilter<"entities_references"> | number | null
    title?: StringFilter<"entities_references"> | string
    author?: StringFilter<"entities_references"> | string
    url?: StringFilter<"entities_references"> | string
  }

  export type groups_membersUpsertWithWhereUniqueWithoutGroupsInput = {
    where: groups_membersWhereUniqueInput
    update: XOR<groups_membersUpdateWithoutGroupsInput, groups_membersUncheckedUpdateWithoutGroupsInput>
    create: XOR<groups_membersCreateWithoutGroupsInput, groups_membersUncheckedCreateWithoutGroupsInput>
  }

  export type groups_membersUpdateWithWhereUniqueWithoutGroupsInput = {
    where: groups_membersWhereUniqueInput
    data: XOR<groups_membersUpdateWithoutGroupsInput, groups_membersUncheckedUpdateWithoutGroupsInput>
  }

  export type groups_membersUpdateManyWithWhereWithoutGroupsInput = {
    where: groups_membersScalarWhereInput
    data: XOR<groups_membersUpdateManyMutationInput, groups_membersUncheckedUpdateManyWithoutGroupsInput>
  }

  export type groups_membersScalarWhereInput = {
    AND?: groups_membersScalarWhereInput | groups_membersScalarWhereInput[]
    OR?: groups_membersScalarWhereInput[]
    NOT?: groups_membersScalarWhereInput | groups_membersScalarWhereInput[]
    group_id?: IntFilter<"groups_members"> | number
    individual_id?: IntFilter<"groups_members"> | number
  }

  export type groupsCreateWithoutGroups_membersInput = {
    group_handle: string
    group_name: string
    group_currentIssue?: string | null
    group_stances?: string | null
    group_description?: string | null
    collections?: collectionsCreateNestedManyWithoutGroupsInput
    entities?: entitiesCreateNestedManyWithoutGroupsInput
    entities_references?: entities_referencesCreateNestedManyWithoutGroupsInput
  }

  export type groupsUncheckedCreateWithoutGroups_membersInput = {
    group_id?: number
    group_handle: string
    group_name: string
    group_currentIssue?: string | null
    group_stances?: string | null
    group_description?: string | null
    collections?: collectionsUncheckedCreateNestedManyWithoutGroupsInput
    entities?: entitiesUncheckedCreateNestedManyWithoutGroupsInput
    entities_references?: entities_referencesUncheckedCreateNestedManyWithoutGroupsInput
  }

  export type groupsCreateOrConnectWithoutGroups_membersInput = {
    where: groupsWhereUniqueInput
    create: XOR<groupsCreateWithoutGroups_membersInput, groupsUncheckedCreateWithoutGroups_membersInput>
  }

  export type individualsCreateWithoutGroups_membersInput = {
    individual_userName: string
    individual_name: string
    individual_currentIssue?: string | null
    individual_roles?: string | null
    individual_description?: string | null
    collections?: collectionsCreateNestedManyWithoutIndividualsInput
    entities?: entitiesCreateNestedManyWithoutIndividualsInput
    entities_references?: entities_referencesCreateNestedManyWithoutIndividualsInput
    images?: imagesCreateNestedManyWithoutIndividualsInput
    organizations_members?: organizations_membersCreateNestedManyWithoutIndividualsInput
    sheets?: sheetsCreateNestedManyWithoutIndividualsInput
    videos?: videosCreateNestedManyWithoutIndividualsInput
  }

  export type individualsUncheckedCreateWithoutGroups_membersInput = {
    individual_id?: number
    individual_userName: string
    individual_name: string
    individual_currentIssue?: string | null
    individual_roles?: string | null
    individual_description?: string | null
    collections?: collectionsUncheckedCreateNestedManyWithoutIndividualsInput
    entities?: entitiesUncheckedCreateNestedManyWithoutIndividualsInput
    entities_references?: entities_referencesUncheckedCreateNestedManyWithoutIndividualsInput
    images?: imagesUncheckedCreateNestedManyWithoutIndividualsInput
    organizations_members?: organizations_membersUncheckedCreateNestedManyWithoutIndividualsInput
    sheets?: sheetsUncheckedCreateNestedManyWithoutIndividualsInput
    videos?: videosUncheckedCreateNestedManyWithoutIndividualsInput
  }

  export type individualsCreateOrConnectWithoutGroups_membersInput = {
    where: individualsWhereUniqueInput
    create: XOR<individualsCreateWithoutGroups_membersInput, individualsUncheckedCreateWithoutGroups_membersInput>
  }

  export type groupsUpsertWithoutGroups_membersInput = {
    update: XOR<groupsUpdateWithoutGroups_membersInput, groupsUncheckedUpdateWithoutGroups_membersInput>
    create: XOR<groupsCreateWithoutGroups_membersInput, groupsUncheckedCreateWithoutGroups_membersInput>
    where?: groupsWhereInput
  }

  export type groupsUpdateToOneWithWhereWithoutGroups_membersInput = {
    where?: groupsWhereInput
    data: XOR<groupsUpdateWithoutGroups_membersInput, groupsUncheckedUpdateWithoutGroups_membersInput>
  }

  export type groupsUpdateWithoutGroups_membersInput = {
    group_handle?: StringFieldUpdateOperationsInput | string
    group_name?: StringFieldUpdateOperationsInput | string
    group_currentIssue?: NullableStringFieldUpdateOperationsInput | string | null
    group_stances?: NullableStringFieldUpdateOperationsInput | string | null
    group_description?: NullableStringFieldUpdateOperationsInput | string | null
    collections?: collectionsUpdateManyWithoutGroupsNestedInput
    entities?: entitiesUpdateManyWithoutGroupsNestedInput
    entities_references?: entities_referencesUpdateManyWithoutGroupsNestedInput
  }

  export type groupsUncheckedUpdateWithoutGroups_membersInput = {
    group_id?: IntFieldUpdateOperationsInput | number
    group_handle?: StringFieldUpdateOperationsInput | string
    group_name?: StringFieldUpdateOperationsInput | string
    group_currentIssue?: NullableStringFieldUpdateOperationsInput | string | null
    group_stances?: NullableStringFieldUpdateOperationsInput | string | null
    group_description?: NullableStringFieldUpdateOperationsInput | string | null
    collections?: collectionsUncheckedUpdateManyWithoutGroupsNestedInput
    entities?: entitiesUncheckedUpdateManyWithoutGroupsNestedInput
    entities_references?: entities_referencesUncheckedUpdateManyWithoutGroupsNestedInput
  }

  export type individualsUpsertWithoutGroups_membersInput = {
    update: XOR<individualsUpdateWithoutGroups_membersInput, individualsUncheckedUpdateWithoutGroups_membersInput>
    create: XOR<individualsCreateWithoutGroups_membersInput, individualsUncheckedCreateWithoutGroups_membersInput>
    where?: individualsWhereInput
  }

  export type individualsUpdateToOneWithWhereWithoutGroups_membersInput = {
    where?: individualsWhereInput
    data: XOR<individualsUpdateWithoutGroups_membersInput, individualsUncheckedUpdateWithoutGroups_membersInput>
  }

  export type individualsUpdateWithoutGroups_membersInput = {
    individual_userName?: StringFieldUpdateOperationsInput | string
    individual_name?: StringFieldUpdateOperationsInput | string
    individual_currentIssue?: NullableStringFieldUpdateOperationsInput | string | null
    individual_roles?: NullableStringFieldUpdateOperationsInput | string | null
    individual_description?: NullableStringFieldUpdateOperationsInput | string | null
    collections?: collectionsUpdateManyWithoutIndividualsNestedInput
    entities?: entitiesUpdateManyWithoutIndividualsNestedInput
    entities_references?: entities_referencesUpdateManyWithoutIndividualsNestedInput
    images?: imagesUpdateManyWithoutIndividualsNestedInput
    organizations_members?: organizations_membersUpdateManyWithoutIndividualsNestedInput
    sheets?: sheetsUpdateManyWithoutIndividualsNestedInput
    videos?: videosUpdateManyWithoutIndividualsNestedInput
  }

  export type individualsUncheckedUpdateWithoutGroups_membersInput = {
    individual_id?: IntFieldUpdateOperationsInput | number
    individual_userName?: StringFieldUpdateOperationsInput | string
    individual_name?: StringFieldUpdateOperationsInput | string
    individual_currentIssue?: NullableStringFieldUpdateOperationsInput | string | null
    individual_roles?: NullableStringFieldUpdateOperationsInput | string | null
    individual_description?: NullableStringFieldUpdateOperationsInput | string | null
    collections?: collectionsUncheckedUpdateManyWithoutIndividualsNestedInput
    entities?: entitiesUncheckedUpdateManyWithoutIndividualsNestedInput
    entities_references?: entities_referencesUncheckedUpdateManyWithoutIndividualsNestedInput
    images?: imagesUncheckedUpdateManyWithoutIndividualsNestedInput
    organizations_members?: organizations_membersUncheckedUpdateManyWithoutIndividualsNestedInput
    sheets?: sheetsUncheckedUpdateManyWithoutIndividualsNestedInput
    videos?: videosUncheckedUpdateManyWithoutIndividualsNestedInput
  }

  export type collections_imagesCreateWithoutImagesInput = {
    date_added: Date | string
    pinned: boolean
    date_pinned?: Date | string | null
    collections: collectionsCreateNestedOneWithoutCollections_imagesInput
  }

  export type collections_imagesUncheckedCreateWithoutImagesInput = {
    collections_images_id?: number
    collection_id: number
    date_added: Date | string
    pinned: boolean
    date_pinned?: Date | string | null
  }

  export type collections_imagesCreateOrConnectWithoutImagesInput = {
    where: collections_imagesWhereUniqueInput
    create: XOR<collections_imagesCreateWithoutImagesInput, collections_imagesUncheckedCreateWithoutImagesInput>
  }

  export type collections_imagesCreateManyImagesInputEnvelope = {
    data: collections_imagesCreateManyImagesInput | collections_imagesCreateManyImagesInput[]
    skipDuplicates?: boolean
  }

  export type entities_imagesCreateWithoutImagesInput = {
    date_added: Date | string
    pinned: boolean
    date_pinned?: Date | string | null
    entities: entitiesCreateNestedOneWithoutEntities_imagesInput
  }

  export type entities_imagesUncheckedCreateWithoutImagesInput = {
    entities_images_id?: number
    entity_id: number
    date_added: Date | string
    pinned: boolean
    date_pinned?: Date | string | null
  }

  export type entities_imagesCreateOrConnectWithoutImagesInput = {
    where: entities_imagesWhereUniqueInput
    create: XOR<entities_imagesCreateWithoutImagesInput, entities_imagesUncheckedCreateWithoutImagesInput>
  }

  export type entities_imagesCreateManyImagesInputEnvelope = {
    data: entities_imagesCreateManyImagesInput | entities_imagesCreateManyImagesInput[]
    skipDuplicates?: boolean
  }

  export type individualsCreateWithoutImagesInput = {
    individual_userName: string
    individual_name: string
    individual_currentIssue?: string | null
    individual_roles?: string | null
    individual_description?: string | null
    collections?: collectionsCreateNestedManyWithoutIndividualsInput
    entities?: entitiesCreateNestedManyWithoutIndividualsInput
    entities_references?: entities_referencesCreateNestedManyWithoutIndividualsInput
    groups_members?: groups_membersCreateNestedManyWithoutIndividualsInput
    organizations_members?: organizations_membersCreateNestedManyWithoutIndividualsInput
    sheets?: sheetsCreateNestedManyWithoutIndividualsInput
    videos?: videosCreateNestedManyWithoutIndividualsInput
  }

  export type individualsUncheckedCreateWithoutImagesInput = {
    individual_id?: number
    individual_userName: string
    individual_name: string
    individual_currentIssue?: string | null
    individual_roles?: string | null
    individual_description?: string | null
    collections?: collectionsUncheckedCreateNestedManyWithoutIndividualsInput
    entities?: entitiesUncheckedCreateNestedManyWithoutIndividualsInput
    entities_references?: entities_referencesUncheckedCreateNestedManyWithoutIndividualsInput
    groups_members?: groups_membersUncheckedCreateNestedManyWithoutIndividualsInput
    organizations_members?: organizations_membersUncheckedCreateNestedManyWithoutIndividualsInput
    sheets?: sheetsUncheckedCreateNestedManyWithoutIndividualsInput
    videos?: videosUncheckedCreateNestedManyWithoutIndividualsInput
  }

  export type individualsCreateOrConnectWithoutImagesInput = {
    where: individualsWhereUniqueInput
    create: XOR<individualsCreateWithoutImagesInput, individualsUncheckedCreateWithoutImagesInput>
  }

  export type images_dataCreateWithoutImagesInput = {
    image_data: Buffer
  }

  export type images_dataUncheckedCreateWithoutImagesInput = {
    image_data_id?: number
    image_data: Buffer
  }

  export type images_dataCreateOrConnectWithoutImagesInput = {
    where: images_dataWhereUniqueInput
    create: XOR<images_dataCreateWithoutImagesInput, images_dataUncheckedCreateWithoutImagesInput>
  }

  export type collections_imagesUpsertWithWhereUniqueWithoutImagesInput = {
    where: collections_imagesWhereUniqueInput
    update: XOR<collections_imagesUpdateWithoutImagesInput, collections_imagesUncheckedUpdateWithoutImagesInput>
    create: XOR<collections_imagesCreateWithoutImagesInput, collections_imagesUncheckedCreateWithoutImagesInput>
  }

  export type collections_imagesUpdateWithWhereUniqueWithoutImagesInput = {
    where: collections_imagesWhereUniqueInput
    data: XOR<collections_imagesUpdateWithoutImagesInput, collections_imagesUncheckedUpdateWithoutImagesInput>
  }

  export type collections_imagesUpdateManyWithWhereWithoutImagesInput = {
    where: collections_imagesScalarWhereInput
    data: XOR<collections_imagesUpdateManyMutationInput, collections_imagesUncheckedUpdateManyWithoutImagesInput>
  }

  export type entities_imagesUpsertWithWhereUniqueWithoutImagesInput = {
    where: entities_imagesWhereUniqueInput
    update: XOR<entities_imagesUpdateWithoutImagesInput, entities_imagesUncheckedUpdateWithoutImagesInput>
    create: XOR<entities_imagesCreateWithoutImagesInput, entities_imagesUncheckedCreateWithoutImagesInput>
  }

  export type entities_imagesUpdateWithWhereUniqueWithoutImagesInput = {
    where: entities_imagesWhereUniqueInput
    data: XOR<entities_imagesUpdateWithoutImagesInput, entities_imagesUncheckedUpdateWithoutImagesInput>
  }

  export type entities_imagesUpdateManyWithWhereWithoutImagesInput = {
    where: entities_imagesScalarWhereInput
    data: XOR<entities_imagesUpdateManyMutationInput, entities_imagesUncheckedUpdateManyWithoutImagesInput>
  }

  export type individualsUpsertWithoutImagesInput = {
    update: XOR<individualsUpdateWithoutImagesInput, individualsUncheckedUpdateWithoutImagesInput>
    create: XOR<individualsCreateWithoutImagesInput, individualsUncheckedCreateWithoutImagesInput>
    where?: individualsWhereInput
  }

  export type individualsUpdateToOneWithWhereWithoutImagesInput = {
    where?: individualsWhereInput
    data: XOR<individualsUpdateWithoutImagesInput, individualsUncheckedUpdateWithoutImagesInput>
  }

  export type individualsUpdateWithoutImagesInput = {
    individual_userName?: StringFieldUpdateOperationsInput | string
    individual_name?: StringFieldUpdateOperationsInput | string
    individual_currentIssue?: NullableStringFieldUpdateOperationsInput | string | null
    individual_roles?: NullableStringFieldUpdateOperationsInput | string | null
    individual_description?: NullableStringFieldUpdateOperationsInput | string | null
    collections?: collectionsUpdateManyWithoutIndividualsNestedInput
    entities?: entitiesUpdateManyWithoutIndividualsNestedInput
    entities_references?: entities_referencesUpdateManyWithoutIndividualsNestedInput
    groups_members?: groups_membersUpdateManyWithoutIndividualsNestedInput
    organizations_members?: organizations_membersUpdateManyWithoutIndividualsNestedInput
    sheets?: sheetsUpdateManyWithoutIndividualsNestedInput
    videos?: videosUpdateManyWithoutIndividualsNestedInput
  }

  export type individualsUncheckedUpdateWithoutImagesInput = {
    individual_id?: IntFieldUpdateOperationsInput | number
    individual_userName?: StringFieldUpdateOperationsInput | string
    individual_name?: StringFieldUpdateOperationsInput | string
    individual_currentIssue?: NullableStringFieldUpdateOperationsInput | string | null
    individual_roles?: NullableStringFieldUpdateOperationsInput | string | null
    individual_description?: NullableStringFieldUpdateOperationsInput | string | null
    collections?: collectionsUncheckedUpdateManyWithoutIndividualsNestedInput
    entities?: entitiesUncheckedUpdateManyWithoutIndividualsNestedInput
    entities_references?: entities_referencesUncheckedUpdateManyWithoutIndividualsNestedInput
    groups_members?: groups_membersUncheckedUpdateManyWithoutIndividualsNestedInput
    organizations_members?: organizations_membersUncheckedUpdateManyWithoutIndividualsNestedInput
    sheets?: sheetsUncheckedUpdateManyWithoutIndividualsNestedInput
    videos?: videosUncheckedUpdateManyWithoutIndividualsNestedInput
  }

  export type images_dataUpsertWithoutImagesInput = {
    update: XOR<images_dataUpdateWithoutImagesInput, images_dataUncheckedUpdateWithoutImagesInput>
    create: XOR<images_dataCreateWithoutImagesInput, images_dataUncheckedCreateWithoutImagesInput>
    where?: images_dataWhereInput
  }

  export type images_dataUpdateToOneWithWhereWithoutImagesInput = {
    where?: images_dataWhereInput
    data: XOR<images_dataUpdateWithoutImagesInput, images_dataUncheckedUpdateWithoutImagesInput>
  }

  export type images_dataUpdateWithoutImagesInput = {
    image_data?: BytesFieldUpdateOperationsInput | Buffer
  }

  export type images_dataUncheckedUpdateWithoutImagesInput = {
    image_data_id?: IntFieldUpdateOperationsInput | number
    image_data?: BytesFieldUpdateOperationsInput | Buffer
  }

  export type imagesCreateWithoutImages_dataInput = {
    image_title: string
    image_description: string
    image_filename: string
    collections_images?: collections_imagesCreateNestedManyWithoutImagesInput
    entities_images?: entities_imagesCreateNestedManyWithoutImagesInput
    individuals: individualsCreateNestedOneWithoutImagesInput
  }

  export type imagesUncheckedCreateWithoutImages_dataInput = {
    image_id?: number
    image_creator_id: number
    image_title: string
    image_description: string
    image_filename: string
    collections_images?: collections_imagesUncheckedCreateNestedManyWithoutImagesInput
    entities_images?: entities_imagesUncheckedCreateNestedManyWithoutImagesInput
  }

  export type imagesCreateOrConnectWithoutImages_dataInput = {
    where: imagesWhereUniqueInput
    create: XOR<imagesCreateWithoutImages_dataInput, imagesUncheckedCreateWithoutImages_dataInput>
  }

  export type imagesCreateManyImages_dataInputEnvelope = {
    data: imagesCreateManyImages_dataInput | imagesCreateManyImages_dataInput[]
    skipDuplicates?: boolean
  }

  export type imagesUpsertWithWhereUniqueWithoutImages_dataInput = {
    where: imagesWhereUniqueInput
    update: XOR<imagesUpdateWithoutImages_dataInput, imagesUncheckedUpdateWithoutImages_dataInput>
    create: XOR<imagesCreateWithoutImages_dataInput, imagesUncheckedCreateWithoutImages_dataInput>
  }

  export type imagesUpdateWithWhereUniqueWithoutImages_dataInput = {
    where: imagesWhereUniqueInput
    data: XOR<imagesUpdateWithoutImages_dataInput, imagesUncheckedUpdateWithoutImages_dataInput>
  }

  export type imagesUpdateManyWithWhereWithoutImages_dataInput = {
    where: imagesScalarWhereInput
    data: XOR<imagesUpdateManyMutationInput, imagesUncheckedUpdateManyWithoutImages_dataInput>
  }

  export type imagesScalarWhereInput = {
    AND?: imagesScalarWhereInput | imagesScalarWhereInput[]
    OR?: imagesScalarWhereInput[]
    NOT?: imagesScalarWhereInput | imagesScalarWhereInput[]
    image_id?: IntFilter<"images"> | number
    image_creator_id?: IntFilter<"images"> | number
    image_title?: StringFilter<"images"> | string
    image_description?: StringFilter<"images"> | string
    image_filename?: StringFilter<"images"> | string
    image_data_id?: IntFilter<"images"> | number
  }

  export type collectionsCreateWithoutIndividualsInput = {
    collection_name: string
    organizations?: organizationsCreateNestedOneWithoutCollectionsInput
    groups?: groupsCreateNestedOneWithoutCollectionsInput
    collections_images?: collections_imagesCreateNestedManyWithoutCollectionsInput
    collections_sheets?: collections_sheetsCreateNestedManyWithoutCollectionsInput
    collections_videos?: collections_videosCreateNestedManyWithoutCollectionsInput
  }

  export type collectionsUncheckedCreateWithoutIndividualsInput = {
    collection_id?: number
    collection_name: string
    group_id?: number | null
    organization_id?: number | null
    collections_images?: collections_imagesUncheckedCreateNestedManyWithoutCollectionsInput
    collections_sheets?: collections_sheetsUncheckedCreateNestedManyWithoutCollectionsInput
    collections_videos?: collections_videosUncheckedCreateNestedManyWithoutCollectionsInput
  }

  export type collectionsCreateOrConnectWithoutIndividualsInput = {
    where: collectionsWhereUniqueInput
    create: XOR<collectionsCreateWithoutIndividualsInput, collectionsUncheckedCreateWithoutIndividualsInput>
  }

  export type collectionsCreateManyIndividualsInputEnvelope = {
    data: collectionsCreateManyIndividualsInput | collectionsCreateManyIndividualsInput[]
    skipDuplicates?: boolean
  }

  export type entitiesCreateWithoutIndividualsInput = {
    groups?: groupsCreateNestedOneWithoutEntitiesInput
    organizations?: organizationsCreateNestedOneWithoutEntitiesInput
    entities_images?: entities_imagesCreateNestedManyWithoutEntitiesInput
    entities_sheets?: entities_sheetsCreateNestedManyWithoutEntitiesInput
    entities_videos?: entities_videosCreateNestedManyWithoutEntitiesInput
  }

  export type entitiesUncheckedCreateWithoutIndividualsInput = {
    entity_id?: number
    group_id?: number | null
    organization_id?: number | null
    entities_images?: entities_imagesUncheckedCreateNestedManyWithoutEntitiesInput
    entities_sheets?: entities_sheetsUncheckedCreateNestedManyWithoutEntitiesInput
    entities_videos?: entities_videosUncheckedCreateNestedManyWithoutEntitiesInput
  }

  export type entitiesCreateOrConnectWithoutIndividualsInput = {
    where: entitiesWhereUniqueInput
    create: XOR<entitiesCreateWithoutIndividualsInput, entitiesUncheckedCreateWithoutIndividualsInput>
  }

  export type entitiesCreateManyIndividualsInputEnvelope = {
    data: entitiesCreateManyIndividualsInput | entitiesCreateManyIndividualsInput[]
    skipDuplicates?: boolean
  }

  export type entities_referencesCreateWithoutIndividualsInput = {
    title: string
    author: string
    url: string
    groups?: groupsCreateNestedOneWithoutEntities_referencesInput
    organizations?: organizationsCreateNestedOneWithoutEntities_referencesInput
  }

  export type entities_referencesUncheckedCreateWithoutIndividualsInput = {
    reference_id?: number
    group_id?: number | null
    organization_id?: number | null
    title: string
    author: string
    url: string
  }

  export type entities_referencesCreateOrConnectWithoutIndividualsInput = {
    where: entities_referencesWhereUniqueInput
    create: XOR<entities_referencesCreateWithoutIndividualsInput, entities_referencesUncheckedCreateWithoutIndividualsInput>
  }

  export type entities_referencesCreateManyIndividualsInputEnvelope = {
    data: entities_referencesCreateManyIndividualsInput | entities_referencesCreateManyIndividualsInput[]
    skipDuplicates?: boolean
  }

  export type groups_membersCreateWithoutIndividualsInput = {
    groups: groupsCreateNestedOneWithoutGroups_membersInput
  }

  export type groups_membersUncheckedCreateWithoutIndividualsInput = {
    group_id: number
  }

  export type groups_membersCreateOrConnectWithoutIndividualsInput = {
    where: groups_membersWhereUniqueInput
    create: XOR<groups_membersCreateWithoutIndividualsInput, groups_membersUncheckedCreateWithoutIndividualsInput>
  }

  export type groups_membersCreateManyIndividualsInputEnvelope = {
    data: groups_membersCreateManyIndividualsInput | groups_membersCreateManyIndividualsInput[]
    skipDuplicates?: boolean
  }

  export type imagesCreateWithoutIndividualsInput = {
    image_title: string
    image_description: string
    image_filename: string
    collections_images?: collections_imagesCreateNestedManyWithoutImagesInput
    entities_images?: entities_imagesCreateNestedManyWithoutImagesInput
    images_data: images_dataCreateNestedOneWithoutImagesInput
  }

  export type imagesUncheckedCreateWithoutIndividualsInput = {
    image_id?: number
    image_title: string
    image_description: string
    image_filename: string
    image_data_id: number
    collections_images?: collections_imagesUncheckedCreateNestedManyWithoutImagesInput
    entities_images?: entities_imagesUncheckedCreateNestedManyWithoutImagesInput
  }

  export type imagesCreateOrConnectWithoutIndividualsInput = {
    where: imagesWhereUniqueInput
    create: XOR<imagesCreateWithoutIndividualsInput, imagesUncheckedCreateWithoutIndividualsInput>
  }

  export type imagesCreateManyIndividualsInputEnvelope = {
    data: imagesCreateManyIndividualsInput | imagesCreateManyIndividualsInput[]
    skipDuplicates?: boolean
  }

  export type organizations_membersCreateWithoutIndividualsInput = {
    organizations: organizationsCreateNestedOneWithoutOrganizations_membersInput
  }

  export type organizations_membersUncheckedCreateWithoutIndividualsInput = {
    organization_id: number
  }

  export type organizations_membersCreateOrConnectWithoutIndividualsInput = {
    where: organizations_membersWhereUniqueInput
    create: XOR<organizations_membersCreateWithoutIndividualsInput, organizations_membersUncheckedCreateWithoutIndividualsInput>
  }

  export type organizations_membersCreateManyIndividualsInputEnvelope = {
    data: organizations_membersCreateManyIndividualsInput | organizations_membersCreateManyIndividualsInput[]
    skipDuplicates?: boolean
  }

  export type sheetsCreateWithoutIndividualsInput = {
    sheet_title: string
    sheet_subject: string
    sheet_filename?: string | null
    sheet_data: Buffer
    collections_sheets?: collections_sheetsCreateNestedManyWithoutSheetsInput
    entities_sheets?: entities_sheetsCreateNestedManyWithoutSheetsInput
  }

  export type sheetsUncheckedCreateWithoutIndividualsInput = {
    sheet_id?: number
    sheet_title: string
    sheet_subject: string
    sheet_filename?: string | null
    sheet_data: Buffer
    collections_sheets?: collections_sheetsUncheckedCreateNestedManyWithoutSheetsInput
    entities_sheets?: entities_sheetsUncheckedCreateNestedManyWithoutSheetsInput
  }

  export type sheetsCreateOrConnectWithoutIndividualsInput = {
    where: sheetsWhereUniqueInput
    create: XOR<sheetsCreateWithoutIndividualsInput, sheetsUncheckedCreateWithoutIndividualsInput>
  }

  export type sheetsCreateManyIndividualsInputEnvelope = {
    data: sheetsCreateManyIndividualsInput | sheetsCreateManyIndividualsInput[]
    skipDuplicates?: boolean
  }

  export type videosCreateWithoutIndividualsInput = {
    video_title: string
    video_description: string
    video_filename: string
    collections_videos?: collections_videosCreateNestedManyWithoutVideosInput
    entities_videos?: entities_videosCreateNestedManyWithoutVideosInput
    videos_data: videos_dataCreateNestedOneWithoutVideosInput
  }

  export type videosUncheckedCreateWithoutIndividualsInput = {
    video_id?: number
    video_title: string
    video_description: string
    video_filename: string
    video_data_id: number
    collections_videos?: collections_videosUncheckedCreateNestedManyWithoutVideosInput
    entities_videos?: entities_videosUncheckedCreateNestedManyWithoutVideosInput
  }

  export type videosCreateOrConnectWithoutIndividualsInput = {
    where: videosWhereUniqueInput
    create: XOR<videosCreateWithoutIndividualsInput, videosUncheckedCreateWithoutIndividualsInput>
  }

  export type videosCreateManyIndividualsInputEnvelope = {
    data: videosCreateManyIndividualsInput | videosCreateManyIndividualsInput[]
    skipDuplicates?: boolean
  }

  export type collectionsUpsertWithWhereUniqueWithoutIndividualsInput = {
    where: collectionsWhereUniqueInput
    update: XOR<collectionsUpdateWithoutIndividualsInput, collectionsUncheckedUpdateWithoutIndividualsInput>
    create: XOR<collectionsCreateWithoutIndividualsInput, collectionsUncheckedCreateWithoutIndividualsInput>
  }

  export type collectionsUpdateWithWhereUniqueWithoutIndividualsInput = {
    where: collectionsWhereUniqueInput
    data: XOR<collectionsUpdateWithoutIndividualsInput, collectionsUncheckedUpdateWithoutIndividualsInput>
  }

  export type collectionsUpdateManyWithWhereWithoutIndividualsInput = {
    where: collectionsScalarWhereInput
    data: XOR<collectionsUpdateManyMutationInput, collectionsUncheckedUpdateManyWithoutIndividualsInput>
  }

  export type entitiesUpsertWithWhereUniqueWithoutIndividualsInput = {
    where: entitiesWhereUniqueInput
    update: XOR<entitiesUpdateWithoutIndividualsInput, entitiesUncheckedUpdateWithoutIndividualsInput>
    create: XOR<entitiesCreateWithoutIndividualsInput, entitiesUncheckedCreateWithoutIndividualsInput>
  }

  export type entitiesUpdateWithWhereUniqueWithoutIndividualsInput = {
    where: entitiesWhereUniqueInput
    data: XOR<entitiesUpdateWithoutIndividualsInput, entitiesUncheckedUpdateWithoutIndividualsInput>
  }

  export type entitiesUpdateManyWithWhereWithoutIndividualsInput = {
    where: entitiesScalarWhereInput
    data: XOR<entitiesUpdateManyMutationInput, entitiesUncheckedUpdateManyWithoutIndividualsInput>
  }

  export type entities_referencesUpsertWithWhereUniqueWithoutIndividualsInput = {
    where: entities_referencesWhereUniqueInput
    update: XOR<entities_referencesUpdateWithoutIndividualsInput, entities_referencesUncheckedUpdateWithoutIndividualsInput>
    create: XOR<entities_referencesCreateWithoutIndividualsInput, entities_referencesUncheckedCreateWithoutIndividualsInput>
  }

  export type entities_referencesUpdateWithWhereUniqueWithoutIndividualsInput = {
    where: entities_referencesWhereUniqueInput
    data: XOR<entities_referencesUpdateWithoutIndividualsInput, entities_referencesUncheckedUpdateWithoutIndividualsInput>
  }

  export type entities_referencesUpdateManyWithWhereWithoutIndividualsInput = {
    where: entities_referencesScalarWhereInput
    data: XOR<entities_referencesUpdateManyMutationInput, entities_referencesUncheckedUpdateManyWithoutIndividualsInput>
  }

  export type groups_membersUpsertWithWhereUniqueWithoutIndividualsInput = {
    where: groups_membersWhereUniqueInput
    update: XOR<groups_membersUpdateWithoutIndividualsInput, groups_membersUncheckedUpdateWithoutIndividualsInput>
    create: XOR<groups_membersCreateWithoutIndividualsInput, groups_membersUncheckedCreateWithoutIndividualsInput>
  }

  export type groups_membersUpdateWithWhereUniqueWithoutIndividualsInput = {
    where: groups_membersWhereUniqueInput
    data: XOR<groups_membersUpdateWithoutIndividualsInput, groups_membersUncheckedUpdateWithoutIndividualsInput>
  }

  export type groups_membersUpdateManyWithWhereWithoutIndividualsInput = {
    where: groups_membersScalarWhereInput
    data: XOR<groups_membersUpdateManyMutationInput, groups_membersUncheckedUpdateManyWithoutIndividualsInput>
  }

  export type imagesUpsertWithWhereUniqueWithoutIndividualsInput = {
    where: imagesWhereUniqueInput
    update: XOR<imagesUpdateWithoutIndividualsInput, imagesUncheckedUpdateWithoutIndividualsInput>
    create: XOR<imagesCreateWithoutIndividualsInput, imagesUncheckedCreateWithoutIndividualsInput>
  }

  export type imagesUpdateWithWhereUniqueWithoutIndividualsInput = {
    where: imagesWhereUniqueInput
    data: XOR<imagesUpdateWithoutIndividualsInput, imagesUncheckedUpdateWithoutIndividualsInput>
  }

  export type imagesUpdateManyWithWhereWithoutIndividualsInput = {
    where: imagesScalarWhereInput
    data: XOR<imagesUpdateManyMutationInput, imagesUncheckedUpdateManyWithoutIndividualsInput>
  }

  export type organizations_membersUpsertWithWhereUniqueWithoutIndividualsInput = {
    where: organizations_membersWhereUniqueInput
    update: XOR<organizations_membersUpdateWithoutIndividualsInput, organizations_membersUncheckedUpdateWithoutIndividualsInput>
    create: XOR<organizations_membersCreateWithoutIndividualsInput, organizations_membersUncheckedCreateWithoutIndividualsInput>
  }

  export type organizations_membersUpdateWithWhereUniqueWithoutIndividualsInput = {
    where: organizations_membersWhereUniqueInput
    data: XOR<organizations_membersUpdateWithoutIndividualsInput, organizations_membersUncheckedUpdateWithoutIndividualsInput>
  }

  export type organizations_membersUpdateManyWithWhereWithoutIndividualsInput = {
    where: organizations_membersScalarWhereInput
    data: XOR<organizations_membersUpdateManyMutationInput, organizations_membersUncheckedUpdateManyWithoutIndividualsInput>
  }

  export type organizations_membersScalarWhereInput = {
    AND?: organizations_membersScalarWhereInput | organizations_membersScalarWhereInput[]
    OR?: organizations_membersScalarWhereInput[]
    NOT?: organizations_membersScalarWhereInput | organizations_membersScalarWhereInput[]
    organization_id?: IntFilter<"organizations_members"> | number
    individual_id?: IntFilter<"organizations_members"> | number
  }

  export type sheetsUpsertWithWhereUniqueWithoutIndividualsInput = {
    where: sheetsWhereUniqueInput
    update: XOR<sheetsUpdateWithoutIndividualsInput, sheetsUncheckedUpdateWithoutIndividualsInput>
    create: XOR<sheetsCreateWithoutIndividualsInput, sheetsUncheckedCreateWithoutIndividualsInput>
  }

  export type sheetsUpdateWithWhereUniqueWithoutIndividualsInput = {
    where: sheetsWhereUniqueInput
    data: XOR<sheetsUpdateWithoutIndividualsInput, sheetsUncheckedUpdateWithoutIndividualsInput>
  }

  export type sheetsUpdateManyWithWhereWithoutIndividualsInput = {
    where: sheetsScalarWhereInput
    data: XOR<sheetsUpdateManyMutationInput, sheetsUncheckedUpdateManyWithoutIndividualsInput>
  }

  export type sheetsScalarWhereInput = {
    AND?: sheetsScalarWhereInput | sheetsScalarWhereInput[]
    OR?: sheetsScalarWhereInput[]
    NOT?: sheetsScalarWhereInput | sheetsScalarWhereInput[]
    sheet_id?: IntFilter<"sheets"> | number
    sheet_author_id?: IntFilter<"sheets"> | number
    sheet_title?: StringFilter<"sheets"> | string
    sheet_subject?: StringFilter<"sheets"> | string
    sheet_filename?: StringNullableFilter<"sheets"> | string | null
    sheet_data?: BytesFilter<"sheets"> | Buffer
  }

  export type videosUpsertWithWhereUniqueWithoutIndividualsInput = {
    where: videosWhereUniqueInput
    update: XOR<videosUpdateWithoutIndividualsInput, videosUncheckedUpdateWithoutIndividualsInput>
    create: XOR<videosCreateWithoutIndividualsInput, videosUncheckedCreateWithoutIndividualsInput>
  }

  export type videosUpdateWithWhereUniqueWithoutIndividualsInput = {
    where: videosWhereUniqueInput
    data: XOR<videosUpdateWithoutIndividualsInput, videosUncheckedUpdateWithoutIndividualsInput>
  }

  export type videosUpdateManyWithWhereWithoutIndividualsInput = {
    where: videosScalarWhereInput
    data: XOR<videosUpdateManyMutationInput, videosUncheckedUpdateManyWithoutIndividualsInput>
  }

  export type videosScalarWhereInput = {
    AND?: videosScalarWhereInput | videosScalarWhereInput[]
    OR?: videosScalarWhereInput[]
    NOT?: videosScalarWhereInput | videosScalarWhereInput[]
    video_id?: IntFilter<"videos"> | number
    video_creator_id?: IntFilter<"videos"> | number
    video_title?: StringFilter<"videos"> | string
    video_description?: StringFilter<"videos"> | string
    video_filename?: StringFilter<"videos"> | string
    video_data_id?: IntFilter<"videos"> | number
  }

  export type collectionsCreateWithoutOrganizationsInput = {
    collection_name: string
    individuals?: individualsCreateNestedOneWithoutCollectionsInput
    groups?: groupsCreateNestedOneWithoutCollectionsInput
    collections_images?: collections_imagesCreateNestedManyWithoutCollectionsInput
    collections_sheets?: collections_sheetsCreateNestedManyWithoutCollectionsInput
    collections_videos?: collections_videosCreateNestedManyWithoutCollectionsInput
  }

  export type collectionsUncheckedCreateWithoutOrganizationsInput = {
    collection_id?: number
    collection_name: string
    individual_id?: number | null
    group_id?: number | null
    collections_images?: collections_imagesUncheckedCreateNestedManyWithoutCollectionsInput
    collections_sheets?: collections_sheetsUncheckedCreateNestedManyWithoutCollectionsInput
    collections_videos?: collections_videosUncheckedCreateNestedManyWithoutCollectionsInput
  }

  export type collectionsCreateOrConnectWithoutOrganizationsInput = {
    where: collectionsWhereUniqueInput
    create: XOR<collectionsCreateWithoutOrganizationsInput, collectionsUncheckedCreateWithoutOrganizationsInput>
  }

  export type collectionsCreateManyOrganizationsInputEnvelope = {
    data: collectionsCreateManyOrganizationsInput | collectionsCreateManyOrganizationsInput[]
    skipDuplicates?: boolean
  }

  export type entitiesCreateWithoutOrganizationsInput = {
    groups?: groupsCreateNestedOneWithoutEntitiesInput
    individuals?: individualsCreateNestedOneWithoutEntitiesInput
    entities_images?: entities_imagesCreateNestedManyWithoutEntitiesInput
    entities_sheets?: entities_sheetsCreateNestedManyWithoutEntitiesInput
    entities_videos?: entities_videosCreateNestedManyWithoutEntitiesInput
  }

  export type entitiesUncheckedCreateWithoutOrganizationsInput = {
    entity_id?: number
    individual_id?: number | null
    group_id?: number | null
    entities_images?: entities_imagesUncheckedCreateNestedManyWithoutEntitiesInput
    entities_sheets?: entities_sheetsUncheckedCreateNestedManyWithoutEntitiesInput
    entities_videos?: entities_videosUncheckedCreateNestedManyWithoutEntitiesInput
  }

  export type entitiesCreateOrConnectWithoutOrganizationsInput = {
    where: entitiesWhereUniqueInput
    create: XOR<entitiesCreateWithoutOrganizationsInput, entitiesUncheckedCreateWithoutOrganizationsInput>
  }

  export type entitiesCreateManyOrganizationsInputEnvelope = {
    data: entitiesCreateManyOrganizationsInput | entitiesCreateManyOrganizationsInput[]
    skipDuplicates?: boolean
  }

  export type entities_referencesCreateWithoutOrganizationsInput = {
    title: string
    author: string
    url: string
    groups?: groupsCreateNestedOneWithoutEntities_referencesInput
    individuals?: individualsCreateNestedOneWithoutEntities_referencesInput
  }

  export type entities_referencesUncheckedCreateWithoutOrganizationsInput = {
    reference_id?: number
    individual_id?: number | null
    group_id?: number | null
    title: string
    author: string
    url: string
  }

  export type entities_referencesCreateOrConnectWithoutOrganizationsInput = {
    where: entities_referencesWhereUniqueInput
    create: XOR<entities_referencesCreateWithoutOrganizationsInput, entities_referencesUncheckedCreateWithoutOrganizationsInput>
  }

  export type entities_referencesCreateManyOrganizationsInputEnvelope = {
    data: entities_referencesCreateManyOrganizationsInput | entities_referencesCreateManyOrganizationsInput[]
    skipDuplicates?: boolean
  }

  export type organizations_membersCreateWithoutOrganizationsInput = {
    individuals: individualsCreateNestedOneWithoutOrganizations_membersInput
  }

  export type organizations_membersUncheckedCreateWithoutOrganizationsInput = {
    individual_id: number
  }

  export type organizations_membersCreateOrConnectWithoutOrganizationsInput = {
    where: organizations_membersWhereUniqueInput
    create: XOR<organizations_membersCreateWithoutOrganizationsInput, organizations_membersUncheckedCreateWithoutOrganizationsInput>
  }

  export type organizations_membersCreateManyOrganizationsInputEnvelope = {
    data: organizations_membersCreateManyOrganizationsInput | organizations_membersCreateManyOrganizationsInput[]
    skipDuplicates?: boolean
  }

  export type collectionsUpsertWithWhereUniqueWithoutOrganizationsInput = {
    where: collectionsWhereUniqueInput
    update: XOR<collectionsUpdateWithoutOrganizationsInput, collectionsUncheckedUpdateWithoutOrganizationsInput>
    create: XOR<collectionsCreateWithoutOrganizationsInput, collectionsUncheckedCreateWithoutOrganizationsInput>
  }

  export type collectionsUpdateWithWhereUniqueWithoutOrganizationsInput = {
    where: collectionsWhereUniqueInput
    data: XOR<collectionsUpdateWithoutOrganizationsInput, collectionsUncheckedUpdateWithoutOrganizationsInput>
  }

  export type collectionsUpdateManyWithWhereWithoutOrganizationsInput = {
    where: collectionsScalarWhereInput
    data: XOR<collectionsUpdateManyMutationInput, collectionsUncheckedUpdateManyWithoutOrganizationsInput>
  }

  export type entitiesUpsertWithWhereUniqueWithoutOrganizationsInput = {
    where: entitiesWhereUniqueInput
    update: XOR<entitiesUpdateWithoutOrganizationsInput, entitiesUncheckedUpdateWithoutOrganizationsInput>
    create: XOR<entitiesCreateWithoutOrganizationsInput, entitiesUncheckedCreateWithoutOrganizationsInput>
  }

  export type entitiesUpdateWithWhereUniqueWithoutOrganizationsInput = {
    where: entitiesWhereUniqueInput
    data: XOR<entitiesUpdateWithoutOrganizationsInput, entitiesUncheckedUpdateWithoutOrganizationsInput>
  }

  export type entitiesUpdateManyWithWhereWithoutOrganizationsInput = {
    where: entitiesScalarWhereInput
    data: XOR<entitiesUpdateManyMutationInput, entitiesUncheckedUpdateManyWithoutOrganizationsInput>
  }

  export type entities_referencesUpsertWithWhereUniqueWithoutOrganizationsInput = {
    where: entities_referencesWhereUniqueInput
    update: XOR<entities_referencesUpdateWithoutOrganizationsInput, entities_referencesUncheckedUpdateWithoutOrganizationsInput>
    create: XOR<entities_referencesCreateWithoutOrganizationsInput, entities_referencesUncheckedCreateWithoutOrganizationsInput>
  }

  export type entities_referencesUpdateWithWhereUniqueWithoutOrganizationsInput = {
    where: entities_referencesWhereUniqueInput
    data: XOR<entities_referencesUpdateWithoutOrganizationsInput, entities_referencesUncheckedUpdateWithoutOrganizationsInput>
  }

  export type entities_referencesUpdateManyWithWhereWithoutOrganizationsInput = {
    where: entities_referencesScalarWhereInput
    data: XOR<entities_referencesUpdateManyMutationInput, entities_referencesUncheckedUpdateManyWithoutOrganizationsInput>
  }

  export type organizations_membersUpsertWithWhereUniqueWithoutOrganizationsInput = {
    where: organizations_membersWhereUniqueInput
    update: XOR<organizations_membersUpdateWithoutOrganizationsInput, organizations_membersUncheckedUpdateWithoutOrganizationsInput>
    create: XOR<organizations_membersCreateWithoutOrganizationsInput, organizations_membersUncheckedCreateWithoutOrganizationsInput>
  }

  export type organizations_membersUpdateWithWhereUniqueWithoutOrganizationsInput = {
    where: organizations_membersWhereUniqueInput
    data: XOR<organizations_membersUpdateWithoutOrganizationsInput, organizations_membersUncheckedUpdateWithoutOrganizationsInput>
  }

  export type organizations_membersUpdateManyWithWhereWithoutOrganizationsInput = {
    where: organizations_membersScalarWhereInput
    data: XOR<organizations_membersUpdateManyMutationInput, organizations_membersUncheckedUpdateManyWithoutOrganizationsInput>
  }

  export type individualsCreateWithoutOrganizations_membersInput = {
    individual_userName: string
    individual_name: string
    individual_currentIssue?: string | null
    individual_roles?: string | null
    individual_description?: string | null
    collections?: collectionsCreateNestedManyWithoutIndividualsInput
    entities?: entitiesCreateNestedManyWithoutIndividualsInput
    entities_references?: entities_referencesCreateNestedManyWithoutIndividualsInput
    groups_members?: groups_membersCreateNestedManyWithoutIndividualsInput
    images?: imagesCreateNestedManyWithoutIndividualsInput
    sheets?: sheetsCreateNestedManyWithoutIndividualsInput
    videos?: videosCreateNestedManyWithoutIndividualsInput
  }

  export type individualsUncheckedCreateWithoutOrganizations_membersInput = {
    individual_id?: number
    individual_userName: string
    individual_name: string
    individual_currentIssue?: string | null
    individual_roles?: string | null
    individual_description?: string | null
    collections?: collectionsUncheckedCreateNestedManyWithoutIndividualsInput
    entities?: entitiesUncheckedCreateNestedManyWithoutIndividualsInput
    entities_references?: entities_referencesUncheckedCreateNestedManyWithoutIndividualsInput
    groups_members?: groups_membersUncheckedCreateNestedManyWithoutIndividualsInput
    images?: imagesUncheckedCreateNestedManyWithoutIndividualsInput
    sheets?: sheetsUncheckedCreateNestedManyWithoutIndividualsInput
    videos?: videosUncheckedCreateNestedManyWithoutIndividualsInput
  }

  export type individualsCreateOrConnectWithoutOrganizations_membersInput = {
    where: individualsWhereUniqueInput
    create: XOR<individualsCreateWithoutOrganizations_membersInput, individualsUncheckedCreateWithoutOrganizations_membersInput>
  }

  export type organizationsCreateWithoutOrganizations_membersInput = {
    organization_handle: string
    organization_name: string
    organization_currentIssue?: string | null
    organization_stances?: string | null
    organization_description?: string | null
    collections?: collectionsCreateNestedManyWithoutOrganizationsInput
    entities?: entitiesCreateNestedManyWithoutOrganizationsInput
    entities_references?: entities_referencesCreateNestedManyWithoutOrganizationsInput
  }

  export type organizationsUncheckedCreateWithoutOrganizations_membersInput = {
    organization_id?: number
    organization_handle: string
    organization_name: string
    organization_currentIssue?: string | null
    organization_stances?: string | null
    organization_description?: string | null
    collections?: collectionsUncheckedCreateNestedManyWithoutOrganizationsInput
    entities?: entitiesUncheckedCreateNestedManyWithoutOrganizationsInput
    entities_references?: entities_referencesUncheckedCreateNestedManyWithoutOrganizationsInput
  }

  export type organizationsCreateOrConnectWithoutOrganizations_membersInput = {
    where: organizationsWhereUniqueInput
    create: XOR<organizationsCreateWithoutOrganizations_membersInput, organizationsUncheckedCreateWithoutOrganizations_membersInput>
  }

  export type individualsUpsertWithoutOrganizations_membersInput = {
    update: XOR<individualsUpdateWithoutOrganizations_membersInput, individualsUncheckedUpdateWithoutOrganizations_membersInput>
    create: XOR<individualsCreateWithoutOrganizations_membersInput, individualsUncheckedCreateWithoutOrganizations_membersInput>
    where?: individualsWhereInput
  }

  export type individualsUpdateToOneWithWhereWithoutOrganizations_membersInput = {
    where?: individualsWhereInput
    data: XOR<individualsUpdateWithoutOrganizations_membersInput, individualsUncheckedUpdateWithoutOrganizations_membersInput>
  }

  export type individualsUpdateWithoutOrganizations_membersInput = {
    individual_userName?: StringFieldUpdateOperationsInput | string
    individual_name?: StringFieldUpdateOperationsInput | string
    individual_currentIssue?: NullableStringFieldUpdateOperationsInput | string | null
    individual_roles?: NullableStringFieldUpdateOperationsInput | string | null
    individual_description?: NullableStringFieldUpdateOperationsInput | string | null
    collections?: collectionsUpdateManyWithoutIndividualsNestedInput
    entities?: entitiesUpdateManyWithoutIndividualsNestedInput
    entities_references?: entities_referencesUpdateManyWithoutIndividualsNestedInput
    groups_members?: groups_membersUpdateManyWithoutIndividualsNestedInput
    images?: imagesUpdateManyWithoutIndividualsNestedInput
    sheets?: sheetsUpdateManyWithoutIndividualsNestedInput
    videos?: videosUpdateManyWithoutIndividualsNestedInput
  }

  export type individualsUncheckedUpdateWithoutOrganizations_membersInput = {
    individual_id?: IntFieldUpdateOperationsInput | number
    individual_userName?: StringFieldUpdateOperationsInput | string
    individual_name?: StringFieldUpdateOperationsInput | string
    individual_currentIssue?: NullableStringFieldUpdateOperationsInput | string | null
    individual_roles?: NullableStringFieldUpdateOperationsInput | string | null
    individual_description?: NullableStringFieldUpdateOperationsInput | string | null
    collections?: collectionsUncheckedUpdateManyWithoutIndividualsNestedInput
    entities?: entitiesUncheckedUpdateManyWithoutIndividualsNestedInput
    entities_references?: entities_referencesUncheckedUpdateManyWithoutIndividualsNestedInput
    groups_members?: groups_membersUncheckedUpdateManyWithoutIndividualsNestedInput
    images?: imagesUncheckedUpdateManyWithoutIndividualsNestedInput
    sheets?: sheetsUncheckedUpdateManyWithoutIndividualsNestedInput
    videos?: videosUncheckedUpdateManyWithoutIndividualsNestedInput
  }

  export type organizationsUpsertWithoutOrganizations_membersInput = {
    update: XOR<organizationsUpdateWithoutOrganizations_membersInput, organizationsUncheckedUpdateWithoutOrganizations_membersInput>
    create: XOR<organizationsCreateWithoutOrganizations_membersInput, organizationsUncheckedCreateWithoutOrganizations_membersInput>
    where?: organizationsWhereInput
  }

  export type organizationsUpdateToOneWithWhereWithoutOrganizations_membersInput = {
    where?: organizationsWhereInput
    data: XOR<organizationsUpdateWithoutOrganizations_membersInput, organizationsUncheckedUpdateWithoutOrganizations_membersInput>
  }

  export type organizationsUpdateWithoutOrganizations_membersInput = {
    organization_handle?: StringFieldUpdateOperationsInput | string
    organization_name?: StringFieldUpdateOperationsInput | string
    organization_currentIssue?: NullableStringFieldUpdateOperationsInput | string | null
    organization_stances?: NullableStringFieldUpdateOperationsInput | string | null
    organization_description?: NullableStringFieldUpdateOperationsInput | string | null
    collections?: collectionsUpdateManyWithoutOrganizationsNestedInput
    entities?: entitiesUpdateManyWithoutOrganizationsNestedInput
    entities_references?: entities_referencesUpdateManyWithoutOrganizationsNestedInput
  }

  export type organizationsUncheckedUpdateWithoutOrganizations_membersInput = {
    organization_id?: IntFieldUpdateOperationsInput | number
    organization_handle?: StringFieldUpdateOperationsInput | string
    organization_name?: StringFieldUpdateOperationsInput | string
    organization_currentIssue?: NullableStringFieldUpdateOperationsInput | string | null
    organization_stances?: NullableStringFieldUpdateOperationsInput | string | null
    organization_description?: NullableStringFieldUpdateOperationsInput | string | null
    collections?: collectionsUncheckedUpdateManyWithoutOrganizationsNestedInput
    entities?: entitiesUncheckedUpdateManyWithoutOrganizationsNestedInput
    entities_references?: entities_referencesUncheckedUpdateManyWithoutOrganizationsNestedInput
  }

  export type collections_sheetsCreateWithoutSheetsInput = {
    date_added: Date | string
    pinned: boolean
    date_pinned?: Date | string | null
    collections: collectionsCreateNestedOneWithoutCollections_sheetsInput
  }

  export type collections_sheetsUncheckedCreateWithoutSheetsInput = {
    collections_sheets_id?: number
    collection_id: number
    date_added: Date | string
    pinned: boolean
    date_pinned?: Date | string | null
  }

  export type collections_sheetsCreateOrConnectWithoutSheetsInput = {
    where: collections_sheetsWhereUniqueInput
    create: XOR<collections_sheetsCreateWithoutSheetsInput, collections_sheetsUncheckedCreateWithoutSheetsInput>
  }

  export type collections_sheetsCreateManySheetsInputEnvelope = {
    data: collections_sheetsCreateManySheetsInput | collections_sheetsCreateManySheetsInput[]
    skipDuplicates?: boolean
  }

  export type entities_sheetsCreateWithoutSheetsInput = {
    date_added: Date | string
    pinned: boolean
    date_pinned?: Date | string | null
    entities: entitiesCreateNestedOneWithoutEntities_sheetsInput
  }

  export type entities_sheetsUncheckedCreateWithoutSheetsInput = {
    entities_sheets_id?: number
    entity_id: number
    date_added: Date | string
    pinned: boolean
    date_pinned?: Date | string | null
  }

  export type entities_sheetsCreateOrConnectWithoutSheetsInput = {
    where: entities_sheetsWhereUniqueInput
    create: XOR<entities_sheetsCreateWithoutSheetsInput, entities_sheetsUncheckedCreateWithoutSheetsInput>
  }

  export type entities_sheetsCreateManySheetsInputEnvelope = {
    data: entities_sheetsCreateManySheetsInput | entities_sheetsCreateManySheetsInput[]
    skipDuplicates?: boolean
  }

  export type individualsCreateWithoutSheetsInput = {
    individual_userName: string
    individual_name: string
    individual_currentIssue?: string | null
    individual_roles?: string | null
    individual_description?: string | null
    collections?: collectionsCreateNestedManyWithoutIndividualsInput
    entities?: entitiesCreateNestedManyWithoutIndividualsInput
    entities_references?: entities_referencesCreateNestedManyWithoutIndividualsInput
    groups_members?: groups_membersCreateNestedManyWithoutIndividualsInput
    images?: imagesCreateNestedManyWithoutIndividualsInput
    organizations_members?: organizations_membersCreateNestedManyWithoutIndividualsInput
    videos?: videosCreateNestedManyWithoutIndividualsInput
  }

  export type individualsUncheckedCreateWithoutSheetsInput = {
    individual_id?: number
    individual_userName: string
    individual_name: string
    individual_currentIssue?: string | null
    individual_roles?: string | null
    individual_description?: string | null
    collections?: collectionsUncheckedCreateNestedManyWithoutIndividualsInput
    entities?: entitiesUncheckedCreateNestedManyWithoutIndividualsInput
    entities_references?: entities_referencesUncheckedCreateNestedManyWithoutIndividualsInput
    groups_members?: groups_membersUncheckedCreateNestedManyWithoutIndividualsInput
    images?: imagesUncheckedCreateNestedManyWithoutIndividualsInput
    organizations_members?: organizations_membersUncheckedCreateNestedManyWithoutIndividualsInput
    videos?: videosUncheckedCreateNestedManyWithoutIndividualsInput
  }

  export type individualsCreateOrConnectWithoutSheetsInput = {
    where: individualsWhereUniqueInput
    create: XOR<individualsCreateWithoutSheetsInput, individualsUncheckedCreateWithoutSheetsInput>
  }

  export type collections_sheetsUpsertWithWhereUniqueWithoutSheetsInput = {
    where: collections_sheetsWhereUniqueInput
    update: XOR<collections_sheetsUpdateWithoutSheetsInput, collections_sheetsUncheckedUpdateWithoutSheetsInput>
    create: XOR<collections_sheetsCreateWithoutSheetsInput, collections_sheetsUncheckedCreateWithoutSheetsInput>
  }

  export type collections_sheetsUpdateWithWhereUniqueWithoutSheetsInput = {
    where: collections_sheetsWhereUniqueInput
    data: XOR<collections_sheetsUpdateWithoutSheetsInput, collections_sheetsUncheckedUpdateWithoutSheetsInput>
  }

  export type collections_sheetsUpdateManyWithWhereWithoutSheetsInput = {
    where: collections_sheetsScalarWhereInput
    data: XOR<collections_sheetsUpdateManyMutationInput, collections_sheetsUncheckedUpdateManyWithoutSheetsInput>
  }

  export type entities_sheetsUpsertWithWhereUniqueWithoutSheetsInput = {
    where: entities_sheetsWhereUniqueInput
    update: XOR<entities_sheetsUpdateWithoutSheetsInput, entities_sheetsUncheckedUpdateWithoutSheetsInput>
    create: XOR<entities_sheetsCreateWithoutSheetsInput, entities_sheetsUncheckedCreateWithoutSheetsInput>
  }

  export type entities_sheetsUpdateWithWhereUniqueWithoutSheetsInput = {
    where: entities_sheetsWhereUniqueInput
    data: XOR<entities_sheetsUpdateWithoutSheetsInput, entities_sheetsUncheckedUpdateWithoutSheetsInput>
  }

  export type entities_sheetsUpdateManyWithWhereWithoutSheetsInput = {
    where: entities_sheetsScalarWhereInput
    data: XOR<entities_sheetsUpdateManyMutationInput, entities_sheetsUncheckedUpdateManyWithoutSheetsInput>
  }

  export type individualsUpsertWithoutSheetsInput = {
    update: XOR<individualsUpdateWithoutSheetsInput, individualsUncheckedUpdateWithoutSheetsInput>
    create: XOR<individualsCreateWithoutSheetsInput, individualsUncheckedCreateWithoutSheetsInput>
    where?: individualsWhereInput
  }

  export type individualsUpdateToOneWithWhereWithoutSheetsInput = {
    where?: individualsWhereInput
    data: XOR<individualsUpdateWithoutSheetsInput, individualsUncheckedUpdateWithoutSheetsInput>
  }

  export type individualsUpdateWithoutSheetsInput = {
    individual_userName?: StringFieldUpdateOperationsInput | string
    individual_name?: StringFieldUpdateOperationsInput | string
    individual_currentIssue?: NullableStringFieldUpdateOperationsInput | string | null
    individual_roles?: NullableStringFieldUpdateOperationsInput | string | null
    individual_description?: NullableStringFieldUpdateOperationsInput | string | null
    collections?: collectionsUpdateManyWithoutIndividualsNestedInput
    entities?: entitiesUpdateManyWithoutIndividualsNestedInput
    entities_references?: entities_referencesUpdateManyWithoutIndividualsNestedInput
    groups_members?: groups_membersUpdateManyWithoutIndividualsNestedInput
    images?: imagesUpdateManyWithoutIndividualsNestedInput
    organizations_members?: organizations_membersUpdateManyWithoutIndividualsNestedInput
    videos?: videosUpdateManyWithoutIndividualsNestedInput
  }

  export type individualsUncheckedUpdateWithoutSheetsInput = {
    individual_id?: IntFieldUpdateOperationsInput | number
    individual_userName?: StringFieldUpdateOperationsInput | string
    individual_name?: StringFieldUpdateOperationsInput | string
    individual_currentIssue?: NullableStringFieldUpdateOperationsInput | string | null
    individual_roles?: NullableStringFieldUpdateOperationsInput | string | null
    individual_description?: NullableStringFieldUpdateOperationsInput | string | null
    collections?: collectionsUncheckedUpdateManyWithoutIndividualsNestedInput
    entities?: entitiesUncheckedUpdateManyWithoutIndividualsNestedInput
    entities_references?: entities_referencesUncheckedUpdateManyWithoutIndividualsNestedInput
    groups_members?: groups_membersUncheckedUpdateManyWithoutIndividualsNestedInput
    images?: imagesUncheckedUpdateManyWithoutIndividualsNestedInput
    organizations_members?: organizations_membersUncheckedUpdateManyWithoutIndividualsNestedInput
    videos?: videosUncheckedUpdateManyWithoutIndividualsNestedInput
  }

  export type collections_videosCreateWithoutVideosInput = {
    date_added: Date | string
    pinned: boolean
    date_pinned?: Date | string | null
    collections: collectionsCreateNestedOneWithoutCollections_videosInput
  }

  export type collections_videosUncheckedCreateWithoutVideosInput = {
    collections_videos_id?: number
    collection_id: number
    date_added: Date | string
    pinned: boolean
    date_pinned?: Date | string | null
  }

  export type collections_videosCreateOrConnectWithoutVideosInput = {
    where: collections_videosWhereUniqueInput
    create: XOR<collections_videosCreateWithoutVideosInput, collections_videosUncheckedCreateWithoutVideosInput>
  }

  export type collections_videosCreateManyVideosInputEnvelope = {
    data: collections_videosCreateManyVideosInput | collections_videosCreateManyVideosInput[]
    skipDuplicates?: boolean
  }

  export type entities_videosCreateWithoutVideosInput = {
    date_added: Date | string
    pinned: boolean
    date_pinned?: Date | string | null
    entities: entitiesCreateNestedOneWithoutEntities_videosInput
  }

  export type entities_videosUncheckedCreateWithoutVideosInput = {
    entities_videos_id?: number
    entity_id: number
    date_added: Date | string
    pinned: boolean
    date_pinned?: Date | string | null
  }

  export type entities_videosCreateOrConnectWithoutVideosInput = {
    where: entities_videosWhereUniqueInput
    create: XOR<entities_videosCreateWithoutVideosInput, entities_videosUncheckedCreateWithoutVideosInput>
  }

  export type entities_videosCreateManyVideosInputEnvelope = {
    data: entities_videosCreateManyVideosInput | entities_videosCreateManyVideosInput[]
    skipDuplicates?: boolean
  }

  export type individualsCreateWithoutVideosInput = {
    individual_userName: string
    individual_name: string
    individual_currentIssue?: string | null
    individual_roles?: string | null
    individual_description?: string | null
    collections?: collectionsCreateNestedManyWithoutIndividualsInput
    entities?: entitiesCreateNestedManyWithoutIndividualsInput
    entities_references?: entities_referencesCreateNestedManyWithoutIndividualsInput
    groups_members?: groups_membersCreateNestedManyWithoutIndividualsInput
    images?: imagesCreateNestedManyWithoutIndividualsInput
    organizations_members?: organizations_membersCreateNestedManyWithoutIndividualsInput
    sheets?: sheetsCreateNestedManyWithoutIndividualsInput
  }

  export type individualsUncheckedCreateWithoutVideosInput = {
    individual_id?: number
    individual_userName: string
    individual_name: string
    individual_currentIssue?: string | null
    individual_roles?: string | null
    individual_description?: string | null
    collections?: collectionsUncheckedCreateNestedManyWithoutIndividualsInput
    entities?: entitiesUncheckedCreateNestedManyWithoutIndividualsInput
    entities_references?: entities_referencesUncheckedCreateNestedManyWithoutIndividualsInput
    groups_members?: groups_membersUncheckedCreateNestedManyWithoutIndividualsInput
    images?: imagesUncheckedCreateNestedManyWithoutIndividualsInput
    organizations_members?: organizations_membersUncheckedCreateNestedManyWithoutIndividualsInput
    sheets?: sheetsUncheckedCreateNestedManyWithoutIndividualsInput
  }

  export type individualsCreateOrConnectWithoutVideosInput = {
    where: individualsWhereUniqueInput
    create: XOR<individualsCreateWithoutVideosInput, individualsUncheckedCreateWithoutVideosInput>
  }

  export type videos_dataCreateWithoutVideosInput = {
    video_data: Buffer
  }

  export type videos_dataUncheckedCreateWithoutVideosInput = {
    video_data_id?: number
    video_data: Buffer
  }

  export type videos_dataCreateOrConnectWithoutVideosInput = {
    where: videos_dataWhereUniqueInput
    create: XOR<videos_dataCreateWithoutVideosInput, videos_dataUncheckedCreateWithoutVideosInput>
  }

  export type collections_videosUpsertWithWhereUniqueWithoutVideosInput = {
    where: collections_videosWhereUniqueInput
    update: XOR<collections_videosUpdateWithoutVideosInput, collections_videosUncheckedUpdateWithoutVideosInput>
    create: XOR<collections_videosCreateWithoutVideosInput, collections_videosUncheckedCreateWithoutVideosInput>
  }

  export type collections_videosUpdateWithWhereUniqueWithoutVideosInput = {
    where: collections_videosWhereUniqueInput
    data: XOR<collections_videosUpdateWithoutVideosInput, collections_videosUncheckedUpdateWithoutVideosInput>
  }

  export type collections_videosUpdateManyWithWhereWithoutVideosInput = {
    where: collections_videosScalarWhereInput
    data: XOR<collections_videosUpdateManyMutationInput, collections_videosUncheckedUpdateManyWithoutVideosInput>
  }

  export type entities_videosUpsertWithWhereUniqueWithoutVideosInput = {
    where: entities_videosWhereUniqueInput
    update: XOR<entities_videosUpdateWithoutVideosInput, entities_videosUncheckedUpdateWithoutVideosInput>
    create: XOR<entities_videosCreateWithoutVideosInput, entities_videosUncheckedCreateWithoutVideosInput>
  }

  export type entities_videosUpdateWithWhereUniqueWithoutVideosInput = {
    where: entities_videosWhereUniqueInput
    data: XOR<entities_videosUpdateWithoutVideosInput, entities_videosUncheckedUpdateWithoutVideosInput>
  }

  export type entities_videosUpdateManyWithWhereWithoutVideosInput = {
    where: entities_videosScalarWhereInput
    data: XOR<entities_videosUpdateManyMutationInput, entities_videosUncheckedUpdateManyWithoutVideosInput>
  }

  export type individualsUpsertWithoutVideosInput = {
    update: XOR<individualsUpdateWithoutVideosInput, individualsUncheckedUpdateWithoutVideosInput>
    create: XOR<individualsCreateWithoutVideosInput, individualsUncheckedCreateWithoutVideosInput>
    where?: individualsWhereInput
  }

  export type individualsUpdateToOneWithWhereWithoutVideosInput = {
    where?: individualsWhereInput
    data: XOR<individualsUpdateWithoutVideosInput, individualsUncheckedUpdateWithoutVideosInput>
  }

  export type individualsUpdateWithoutVideosInput = {
    individual_userName?: StringFieldUpdateOperationsInput | string
    individual_name?: StringFieldUpdateOperationsInput | string
    individual_currentIssue?: NullableStringFieldUpdateOperationsInput | string | null
    individual_roles?: NullableStringFieldUpdateOperationsInput | string | null
    individual_description?: NullableStringFieldUpdateOperationsInput | string | null
    collections?: collectionsUpdateManyWithoutIndividualsNestedInput
    entities?: entitiesUpdateManyWithoutIndividualsNestedInput
    entities_references?: entities_referencesUpdateManyWithoutIndividualsNestedInput
    groups_members?: groups_membersUpdateManyWithoutIndividualsNestedInput
    images?: imagesUpdateManyWithoutIndividualsNestedInput
    organizations_members?: organizations_membersUpdateManyWithoutIndividualsNestedInput
    sheets?: sheetsUpdateManyWithoutIndividualsNestedInput
  }

  export type individualsUncheckedUpdateWithoutVideosInput = {
    individual_id?: IntFieldUpdateOperationsInput | number
    individual_userName?: StringFieldUpdateOperationsInput | string
    individual_name?: StringFieldUpdateOperationsInput | string
    individual_currentIssue?: NullableStringFieldUpdateOperationsInput | string | null
    individual_roles?: NullableStringFieldUpdateOperationsInput | string | null
    individual_description?: NullableStringFieldUpdateOperationsInput | string | null
    collections?: collectionsUncheckedUpdateManyWithoutIndividualsNestedInput
    entities?: entitiesUncheckedUpdateManyWithoutIndividualsNestedInput
    entities_references?: entities_referencesUncheckedUpdateManyWithoutIndividualsNestedInput
    groups_members?: groups_membersUncheckedUpdateManyWithoutIndividualsNestedInput
    images?: imagesUncheckedUpdateManyWithoutIndividualsNestedInput
    organizations_members?: organizations_membersUncheckedUpdateManyWithoutIndividualsNestedInput
    sheets?: sheetsUncheckedUpdateManyWithoutIndividualsNestedInput
  }

  export type videos_dataUpsertWithoutVideosInput = {
    update: XOR<videos_dataUpdateWithoutVideosInput, videos_dataUncheckedUpdateWithoutVideosInput>
    create: XOR<videos_dataCreateWithoutVideosInput, videos_dataUncheckedCreateWithoutVideosInput>
    where?: videos_dataWhereInput
  }

  export type videos_dataUpdateToOneWithWhereWithoutVideosInput = {
    where?: videos_dataWhereInput
    data: XOR<videos_dataUpdateWithoutVideosInput, videos_dataUncheckedUpdateWithoutVideosInput>
  }

  export type videos_dataUpdateWithoutVideosInput = {
    video_data?: BytesFieldUpdateOperationsInput | Buffer
  }

  export type videos_dataUncheckedUpdateWithoutVideosInput = {
    video_data_id?: IntFieldUpdateOperationsInput | number
    video_data?: BytesFieldUpdateOperationsInput | Buffer
  }

  export type videosCreateWithoutVideos_dataInput = {
    video_title: string
    video_description: string
    video_filename: string
    collections_videos?: collections_videosCreateNestedManyWithoutVideosInput
    entities_videos?: entities_videosCreateNestedManyWithoutVideosInput
    individuals: individualsCreateNestedOneWithoutVideosInput
  }

  export type videosUncheckedCreateWithoutVideos_dataInput = {
    video_id?: number
    video_creator_id: number
    video_title: string
    video_description: string
    video_filename: string
    collections_videos?: collections_videosUncheckedCreateNestedManyWithoutVideosInput
    entities_videos?: entities_videosUncheckedCreateNestedManyWithoutVideosInput
  }

  export type videosCreateOrConnectWithoutVideos_dataInput = {
    where: videosWhereUniqueInput
    create: XOR<videosCreateWithoutVideos_dataInput, videosUncheckedCreateWithoutVideos_dataInput>
  }

  export type videosCreateManyVideos_dataInputEnvelope = {
    data: videosCreateManyVideos_dataInput | videosCreateManyVideos_dataInput[]
    skipDuplicates?: boolean
  }

  export type videosUpsertWithWhereUniqueWithoutVideos_dataInput = {
    where: videosWhereUniqueInput
    update: XOR<videosUpdateWithoutVideos_dataInput, videosUncheckedUpdateWithoutVideos_dataInput>
    create: XOR<videosCreateWithoutVideos_dataInput, videosUncheckedCreateWithoutVideos_dataInput>
  }

  export type videosUpdateWithWhereUniqueWithoutVideos_dataInput = {
    where: videosWhereUniqueInput
    data: XOR<videosUpdateWithoutVideos_dataInput, videosUncheckedUpdateWithoutVideos_dataInput>
  }

  export type videosUpdateManyWithWhereWithoutVideos_dataInput = {
    where: videosScalarWhereInput
    data: XOR<videosUpdateManyMutationInput, videosUncheckedUpdateManyWithoutVideos_dataInput>
  }

  export type collections_imagesCreateManyCollectionsInput = {
    collections_images_id?: number
    image_id: number
    date_added: Date | string
    pinned: boolean
    date_pinned?: Date | string | null
  }

  export type collections_sheetsCreateManyCollectionsInput = {
    collections_sheets_id?: number
    sheet_id: number
    date_added: Date | string
    pinned: boolean
    date_pinned?: Date | string | null
  }

  export type collections_videosCreateManyCollectionsInput = {
    collections_videos_id?: number
    video_id: number
    date_added: Date | string
    pinned: boolean
    date_pinned?: Date | string | null
  }

  export type collections_imagesUpdateWithoutCollectionsInput = {
    date_added?: DateTimeFieldUpdateOperationsInput | Date | string
    pinned?: BoolFieldUpdateOperationsInput | boolean
    date_pinned?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    images?: imagesUpdateOneRequiredWithoutCollections_imagesNestedInput
  }

  export type collections_imagesUncheckedUpdateWithoutCollectionsInput = {
    collections_images_id?: IntFieldUpdateOperationsInput | number
    image_id?: IntFieldUpdateOperationsInput | number
    date_added?: DateTimeFieldUpdateOperationsInput | Date | string
    pinned?: BoolFieldUpdateOperationsInput | boolean
    date_pinned?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type collections_imagesUncheckedUpdateManyWithoutCollectionsInput = {
    collections_images_id?: IntFieldUpdateOperationsInput | number
    image_id?: IntFieldUpdateOperationsInput | number
    date_added?: DateTimeFieldUpdateOperationsInput | Date | string
    pinned?: BoolFieldUpdateOperationsInput | boolean
    date_pinned?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type collections_sheetsUpdateWithoutCollectionsInput = {
    date_added?: DateTimeFieldUpdateOperationsInput | Date | string
    pinned?: BoolFieldUpdateOperationsInput | boolean
    date_pinned?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sheets?: sheetsUpdateOneRequiredWithoutCollections_sheetsNestedInput
  }

  export type collections_sheetsUncheckedUpdateWithoutCollectionsInput = {
    collections_sheets_id?: IntFieldUpdateOperationsInput | number
    sheet_id?: IntFieldUpdateOperationsInput | number
    date_added?: DateTimeFieldUpdateOperationsInput | Date | string
    pinned?: BoolFieldUpdateOperationsInput | boolean
    date_pinned?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type collections_sheetsUncheckedUpdateManyWithoutCollectionsInput = {
    collections_sheets_id?: IntFieldUpdateOperationsInput | number
    sheet_id?: IntFieldUpdateOperationsInput | number
    date_added?: DateTimeFieldUpdateOperationsInput | Date | string
    pinned?: BoolFieldUpdateOperationsInput | boolean
    date_pinned?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type collections_videosUpdateWithoutCollectionsInput = {
    date_added?: DateTimeFieldUpdateOperationsInput | Date | string
    pinned?: BoolFieldUpdateOperationsInput | boolean
    date_pinned?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    videos?: videosUpdateOneRequiredWithoutCollections_videosNestedInput
  }

  export type collections_videosUncheckedUpdateWithoutCollectionsInput = {
    collections_videos_id?: IntFieldUpdateOperationsInput | number
    video_id?: IntFieldUpdateOperationsInput | number
    date_added?: DateTimeFieldUpdateOperationsInput | Date | string
    pinned?: BoolFieldUpdateOperationsInput | boolean
    date_pinned?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type collections_videosUncheckedUpdateManyWithoutCollectionsInput = {
    collections_videos_id?: IntFieldUpdateOperationsInput | number
    video_id?: IntFieldUpdateOperationsInput | number
    date_added?: DateTimeFieldUpdateOperationsInput | Date | string
    pinned?: BoolFieldUpdateOperationsInput | boolean
    date_pinned?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type entities_imagesCreateManyEntitiesInput = {
    entities_images_id?: number
    image_id: number
    date_added: Date | string
    pinned: boolean
    date_pinned?: Date | string | null
  }

  export type entities_sheetsCreateManyEntitiesInput = {
    entities_sheets_id?: number
    sheet_id: number
    date_added: Date | string
    pinned: boolean
    date_pinned?: Date | string | null
  }

  export type entities_videosCreateManyEntitiesInput = {
    entities_videos_id?: number
    video_id: number
    date_added: Date | string
    pinned: boolean
    date_pinned?: Date | string | null
  }

  export type entities_imagesUpdateWithoutEntitiesInput = {
    date_added?: DateTimeFieldUpdateOperationsInput | Date | string
    pinned?: BoolFieldUpdateOperationsInput | boolean
    date_pinned?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    images?: imagesUpdateOneRequiredWithoutEntities_imagesNestedInput
  }

  export type entities_imagesUncheckedUpdateWithoutEntitiesInput = {
    entities_images_id?: IntFieldUpdateOperationsInput | number
    image_id?: IntFieldUpdateOperationsInput | number
    date_added?: DateTimeFieldUpdateOperationsInput | Date | string
    pinned?: BoolFieldUpdateOperationsInput | boolean
    date_pinned?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type entities_imagesUncheckedUpdateManyWithoutEntitiesInput = {
    entities_images_id?: IntFieldUpdateOperationsInput | number
    image_id?: IntFieldUpdateOperationsInput | number
    date_added?: DateTimeFieldUpdateOperationsInput | Date | string
    pinned?: BoolFieldUpdateOperationsInput | boolean
    date_pinned?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type entities_sheetsUpdateWithoutEntitiesInput = {
    date_added?: DateTimeFieldUpdateOperationsInput | Date | string
    pinned?: BoolFieldUpdateOperationsInput | boolean
    date_pinned?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sheets?: sheetsUpdateOneRequiredWithoutEntities_sheetsNestedInput
  }

  export type entities_sheetsUncheckedUpdateWithoutEntitiesInput = {
    entities_sheets_id?: IntFieldUpdateOperationsInput | number
    sheet_id?: IntFieldUpdateOperationsInput | number
    date_added?: DateTimeFieldUpdateOperationsInput | Date | string
    pinned?: BoolFieldUpdateOperationsInput | boolean
    date_pinned?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type entities_sheetsUncheckedUpdateManyWithoutEntitiesInput = {
    entities_sheets_id?: IntFieldUpdateOperationsInput | number
    sheet_id?: IntFieldUpdateOperationsInput | number
    date_added?: DateTimeFieldUpdateOperationsInput | Date | string
    pinned?: BoolFieldUpdateOperationsInput | boolean
    date_pinned?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type entities_videosUpdateWithoutEntitiesInput = {
    date_added?: DateTimeFieldUpdateOperationsInput | Date | string
    pinned?: BoolFieldUpdateOperationsInput | boolean
    date_pinned?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    videos?: videosUpdateOneRequiredWithoutEntities_videosNestedInput
  }

  export type entities_videosUncheckedUpdateWithoutEntitiesInput = {
    entities_videos_id?: IntFieldUpdateOperationsInput | number
    video_id?: IntFieldUpdateOperationsInput | number
    date_added?: DateTimeFieldUpdateOperationsInput | Date | string
    pinned?: BoolFieldUpdateOperationsInput | boolean
    date_pinned?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type entities_videosUncheckedUpdateManyWithoutEntitiesInput = {
    entities_videos_id?: IntFieldUpdateOperationsInput | number
    video_id?: IntFieldUpdateOperationsInput | number
    date_added?: DateTimeFieldUpdateOperationsInput | Date | string
    pinned?: BoolFieldUpdateOperationsInput | boolean
    date_pinned?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type collectionsCreateManyGroupsInput = {
    collection_id?: number
    collection_name: string
    individual_id?: number | null
    organization_id?: number | null
  }

  export type entitiesCreateManyGroupsInput = {
    entity_id?: number
    individual_id?: number | null
    organization_id?: number | null
  }

  export type entities_referencesCreateManyGroupsInput = {
    reference_id?: number
    individual_id?: number | null
    organization_id?: number | null
    title: string
    author: string
    url: string
  }

  export type groups_membersCreateManyGroupsInput = {
    individual_id: number
  }

  export type collectionsUpdateWithoutGroupsInput = {
    collection_name?: StringFieldUpdateOperationsInput | string
    individuals?: individualsUpdateOneWithoutCollectionsNestedInput
    organizations?: organizationsUpdateOneWithoutCollectionsNestedInput
    collections_images?: collections_imagesUpdateManyWithoutCollectionsNestedInput
    collections_sheets?: collections_sheetsUpdateManyWithoutCollectionsNestedInput
    collections_videos?: collections_videosUpdateManyWithoutCollectionsNestedInput
  }

  export type collectionsUncheckedUpdateWithoutGroupsInput = {
    collection_id?: IntFieldUpdateOperationsInput | number
    collection_name?: StringFieldUpdateOperationsInput | string
    individual_id?: NullableIntFieldUpdateOperationsInput | number | null
    organization_id?: NullableIntFieldUpdateOperationsInput | number | null
    collections_images?: collections_imagesUncheckedUpdateManyWithoutCollectionsNestedInput
    collections_sheets?: collections_sheetsUncheckedUpdateManyWithoutCollectionsNestedInput
    collections_videos?: collections_videosUncheckedUpdateManyWithoutCollectionsNestedInput
  }

  export type collectionsUncheckedUpdateManyWithoutGroupsInput = {
    collection_id?: IntFieldUpdateOperationsInput | number
    collection_name?: StringFieldUpdateOperationsInput | string
    individual_id?: NullableIntFieldUpdateOperationsInput | number | null
    organization_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type entitiesUpdateWithoutGroupsInput = {
    individuals?: individualsUpdateOneWithoutEntitiesNestedInput
    organizations?: organizationsUpdateOneWithoutEntitiesNestedInput
    entities_images?: entities_imagesUpdateManyWithoutEntitiesNestedInput
    entities_sheets?: entities_sheetsUpdateManyWithoutEntitiesNestedInput
    entities_videos?: entities_videosUpdateManyWithoutEntitiesNestedInput
  }

  export type entitiesUncheckedUpdateWithoutGroupsInput = {
    entity_id?: IntFieldUpdateOperationsInput | number
    individual_id?: NullableIntFieldUpdateOperationsInput | number | null
    organization_id?: NullableIntFieldUpdateOperationsInput | number | null
    entities_images?: entities_imagesUncheckedUpdateManyWithoutEntitiesNestedInput
    entities_sheets?: entities_sheetsUncheckedUpdateManyWithoutEntitiesNestedInput
    entities_videos?: entities_videosUncheckedUpdateManyWithoutEntitiesNestedInput
  }

  export type entitiesUncheckedUpdateManyWithoutGroupsInput = {
    entity_id?: IntFieldUpdateOperationsInput | number
    individual_id?: NullableIntFieldUpdateOperationsInput | number | null
    organization_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type entities_referencesUpdateWithoutGroupsInput = {
    title?: StringFieldUpdateOperationsInput | string
    author?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    individuals?: individualsUpdateOneWithoutEntities_referencesNestedInput
    organizations?: organizationsUpdateOneWithoutEntities_referencesNestedInput
  }

  export type entities_referencesUncheckedUpdateWithoutGroupsInput = {
    reference_id?: IntFieldUpdateOperationsInput | number
    individual_id?: NullableIntFieldUpdateOperationsInput | number | null
    organization_id?: NullableIntFieldUpdateOperationsInput | number | null
    title?: StringFieldUpdateOperationsInput | string
    author?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
  }

  export type entities_referencesUncheckedUpdateManyWithoutGroupsInput = {
    reference_id?: IntFieldUpdateOperationsInput | number
    individual_id?: NullableIntFieldUpdateOperationsInput | number | null
    organization_id?: NullableIntFieldUpdateOperationsInput | number | null
    title?: StringFieldUpdateOperationsInput | string
    author?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
  }

  export type groups_membersUpdateWithoutGroupsInput = {
    individuals?: individualsUpdateOneRequiredWithoutGroups_membersNestedInput
  }

  export type groups_membersUncheckedUpdateWithoutGroupsInput = {
    individual_id?: IntFieldUpdateOperationsInput | number
  }

  export type groups_membersUncheckedUpdateManyWithoutGroupsInput = {
    individual_id?: IntFieldUpdateOperationsInput | number
  }

  export type collections_imagesCreateManyImagesInput = {
    collections_images_id?: number
    collection_id: number
    date_added: Date | string
    pinned: boolean
    date_pinned?: Date | string | null
  }

  export type entities_imagesCreateManyImagesInput = {
    entities_images_id?: number
    entity_id: number
    date_added: Date | string
    pinned: boolean
    date_pinned?: Date | string | null
  }

  export type collections_imagesUpdateWithoutImagesInput = {
    date_added?: DateTimeFieldUpdateOperationsInput | Date | string
    pinned?: BoolFieldUpdateOperationsInput | boolean
    date_pinned?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    collections?: collectionsUpdateOneRequiredWithoutCollections_imagesNestedInput
  }

  export type collections_imagesUncheckedUpdateWithoutImagesInput = {
    collections_images_id?: IntFieldUpdateOperationsInput | number
    collection_id?: IntFieldUpdateOperationsInput | number
    date_added?: DateTimeFieldUpdateOperationsInput | Date | string
    pinned?: BoolFieldUpdateOperationsInput | boolean
    date_pinned?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type collections_imagesUncheckedUpdateManyWithoutImagesInput = {
    collections_images_id?: IntFieldUpdateOperationsInput | number
    collection_id?: IntFieldUpdateOperationsInput | number
    date_added?: DateTimeFieldUpdateOperationsInput | Date | string
    pinned?: BoolFieldUpdateOperationsInput | boolean
    date_pinned?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type entities_imagesUpdateWithoutImagesInput = {
    date_added?: DateTimeFieldUpdateOperationsInput | Date | string
    pinned?: BoolFieldUpdateOperationsInput | boolean
    date_pinned?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    entities?: entitiesUpdateOneRequiredWithoutEntities_imagesNestedInput
  }

  export type entities_imagesUncheckedUpdateWithoutImagesInput = {
    entities_images_id?: IntFieldUpdateOperationsInput | number
    entity_id?: IntFieldUpdateOperationsInput | number
    date_added?: DateTimeFieldUpdateOperationsInput | Date | string
    pinned?: BoolFieldUpdateOperationsInput | boolean
    date_pinned?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type entities_imagesUncheckedUpdateManyWithoutImagesInput = {
    entities_images_id?: IntFieldUpdateOperationsInput | number
    entity_id?: IntFieldUpdateOperationsInput | number
    date_added?: DateTimeFieldUpdateOperationsInput | Date | string
    pinned?: BoolFieldUpdateOperationsInput | boolean
    date_pinned?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type imagesCreateManyImages_dataInput = {
    image_id?: number
    image_creator_id: number
    image_title: string
    image_description: string
    image_filename: string
  }

  export type imagesUpdateWithoutImages_dataInput = {
    image_title?: StringFieldUpdateOperationsInput | string
    image_description?: StringFieldUpdateOperationsInput | string
    image_filename?: StringFieldUpdateOperationsInput | string
    collections_images?: collections_imagesUpdateManyWithoutImagesNestedInput
    entities_images?: entities_imagesUpdateManyWithoutImagesNestedInput
    individuals?: individualsUpdateOneRequiredWithoutImagesNestedInput
  }

  export type imagesUncheckedUpdateWithoutImages_dataInput = {
    image_id?: IntFieldUpdateOperationsInput | number
    image_creator_id?: IntFieldUpdateOperationsInput | number
    image_title?: StringFieldUpdateOperationsInput | string
    image_description?: StringFieldUpdateOperationsInput | string
    image_filename?: StringFieldUpdateOperationsInput | string
    collections_images?: collections_imagesUncheckedUpdateManyWithoutImagesNestedInput
    entities_images?: entities_imagesUncheckedUpdateManyWithoutImagesNestedInput
  }

  export type imagesUncheckedUpdateManyWithoutImages_dataInput = {
    image_id?: IntFieldUpdateOperationsInput | number
    image_creator_id?: IntFieldUpdateOperationsInput | number
    image_title?: StringFieldUpdateOperationsInput | string
    image_description?: StringFieldUpdateOperationsInput | string
    image_filename?: StringFieldUpdateOperationsInput | string
  }

  export type collectionsCreateManyIndividualsInput = {
    collection_id?: number
    collection_name: string
    group_id?: number | null
    organization_id?: number | null
  }

  export type entitiesCreateManyIndividualsInput = {
    entity_id?: number
    group_id?: number | null
    organization_id?: number | null
  }

  export type entities_referencesCreateManyIndividualsInput = {
    reference_id?: number
    group_id?: number | null
    organization_id?: number | null
    title: string
    author: string
    url: string
  }

  export type groups_membersCreateManyIndividualsInput = {
    group_id: number
  }

  export type imagesCreateManyIndividualsInput = {
    image_id?: number
    image_title: string
    image_description: string
    image_filename: string
    image_data_id: number
  }

  export type organizations_membersCreateManyIndividualsInput = {
    organization_id: number
  }

  export type sheetsCreateManyIndividualsInput = {
    sheet_id?: number
    sheet_title: string
    sheet_subject: string
    sheet_filename?: string | null
    sheet_data: Buffer
  }

  export type videosCreateManyIndividualsInput = {
    video_id?: number
    video_title: string
    video_description: string
    video_filename: string
    video_data_id: number
  }

  export type collectionsUpdateWithoutIndividualsInput = {
    collection_name?: StringFieldUpdateOperationsInput | string
    organizations?: organizationsUpdateOneWithoutCollectionsNestedInput
    groups?: groupsUpdateOneWithoutCollectionsNestedInput
    collections_images?: collections_imagesUpdateManyWithoutCollectionsNestedInput
    collections_sheets?: collections_sheetsUpdateManyWithoutCollectionsNestedInput
    collections_videos?: collections_videosUpdateManyWithoutCollectionsNestedInput
  }

  export type collectionsUncheckedUpdateWithoutIndividualsInput = {
    collection_id?: IntFieldUpdateOperationsInput | number
    collection_name?: StringFieldUpdateOperationsInput | string
    group_id?: NullableIntFieldUpdateOperationsInput | number | null
    organization_id?: NullableIntFieldUpdateOperationsInput | number | null
    collections_images?: collections_imagesUncheckedUpdateManyWithoutCollectionsNestedInput
    collections_sheets?: collections_sheetsUncheckedUpdateManyWithoutCollectionsNestedInput
    collections_videos?: collections_videosUncheckedUpdateManyWithoutCollectionsNestedInput
  }

  export type collectionsUncheckedUpdateManyWithoutIndividualsInput = {
    collection_id?: IntFieldUpdateOperationsInput | number
    collection_name?: StringFieldUpdateOperationsInput | string
    group_id?: NullableIntFieldUpdateOperationsInput | number | null
    organization_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type entitiesUpdateWithoutIndividualsInput = {
    groups?: groupsUpdateOneWithoutEntitiesNestedInput
    organizations?: organizationsUpdateOneWithoutEntitiesNestedInput
    entities_images?: entities_imagesUpdateManyWithoutEntitiesNestedInput
    entities_sheets?: entities_sheetsUpdateManyWithoutEntitiesNestedInput
    entities_videos?: entities_videosUpdateManyWithoutEntitiesNestedInput
  }

  export type entitiesUncheckedUpdateWithoutIndividualsInput = {
    entity_id?: IntFieldUpdateOperationsInput | number
    group_id?: NullableIntFieldUpdateOperationsInput | number | null
    organization_id?: NullableIntFieldUpdateOperationsInput | number | null
    entities_images?: entities_imagesUncheckedUpdateManyWithoutEntitiesNestedInput
    entities_sheets?: entities_sheetsUncheckedUpdateManyWithoutEntitiesNestedInput
    entities_videos?: entities_videosUncheckedUpdateManyWithoutEntitiesNestedInput
  }

  export type entitiesUncheckedUpdateManyWithoutIndividualsInput = {
    entity_id?: IntFieldUpdateOperationsInput | number
    group_id?: NullableIntFieldUpdateOperationsInput | number | null
    organization_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type entities_referencesUpdateWithoutIndividualsInput = {
    title?: StringFieldUpdateOperationsInput | string
    author?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    groups?: groupsUpdateOneWithoutEntities_referencesNestedInput
    organizations?: organizationsUpdateOneWithoutEntities_referencesNestedInput
  }

  export type entities_referencesUncheckedUpdateWithoutIndividualsInput = {
    reference_id?: IntFieldUpdateOperationsInput | number
    group_id?: NullableIntFieldUpdateOperationsInput | number | null
    organization_id?: NullableIntFieldUpdateOperationsInput | number | null
    title?: StringFieldUpdateOperationsInput | string
    author?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
  }

  export type entities_referencesUncheckedUpdateManyWithoutIndividualsInput = {
    reference_id?: IntFieldUpdateOperationsInput | number
    group_id?: NullableIntFieldUpdateOperationsInput | number | null
    organization_id?: NullableIntFieldUpdateOperationsInput | number | null
    title?: StringFieldUpdateOperationsInput | string
    author?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
  }

  export type groups_membersUpdateWithoutIndividualsInput = {
    groups?: groupsUpdateOneRequiredWithoutGroups_membersNestedInput
  }

  export type groups_membersUncheckedUpdateWithoutIndividualsInput = {
    group_id?: IntFieldUpdateOperationsInput | number
  }

  export type groups_membersUncheckedUpdateManyWithoutIndividualsInput = {
    group_id?: IntFieldUpdateOperationsInput | number
  }

  export type imagesUpdateWithoutIndividualsInput = {
    image_title?: StringFieldUpdateOperationsInput | string
    image_description?: StringFieldUpdateOperationsInput | string
    image_filename?: StringFieldUpdateOperationsInput | string
    collections_images?: collections_imagesUpdateManyWithoutImagesNestedInput
    entities_images?: entities_imagesUpdateManyWithoutImagesNestedInput
    images_data?: images_dataUpdateOneRequiredWithoutImagesNestedInput
  }

  export type imagesUncheckedUpdateWithoutIndividualsInput = {
    image_id?: IntFieldUpdateOperationsInput | number
    image_title?: StringFieldUpdateOperationsInput | string
    image_description?: StringFieldUpdateOperationsInput | string
    image_filename?: StringFieldUpdateOperationsInput | string
    image_data_id?: IntFieldUpdateOperationsInput | number
    collections_images?: collections_imagesUncheckedUpdateManyWithoutImagesNestedInput
    entities_images?: entities_imagesUncheckedUpdateManyWithoutImagesNestedInput
  }

  export type imagesUncheckedUpdateManyWithoutIndividualsInput = {
    image_id?: IntFieldUpdateOperationsInput | number
    image_title?: StringFieldUpdateOperationsInput | string
    image_description?: StringFieldUpdateOperationsInput | string
    image_filename?: StringFieldUpdateOperationsInput | string
    image_data_id?: IntFieldUpdateOperationsInput | number
  }

  export type organizations_membersUpdateWithoutIndividualsInput = {
    organizations?: organizationsUpdateOneRequiredWithoutOrganizations_membersNestedInput
  }

  export type organizations_membersUncheckedUpdateWithoutIndividualsInput = {
    organization_id?: IntFieldUpdateOperationsInput | number
  }

  export type organizations_membersUncheckedUpdateManyWithoutIndividualsInput = {
    organization_id?: IntFieldUpdateOperationsInput | number
  }

  export type sheetsUpdateWithoutIndividualsInput = {
    sheet_title?: StringFieldUpdateOperationsInput | string
    sheet_subject?: StringFieldUpdateOperationsInput | string
    sheet_filename?: NullableStringFieldUpdateOperationsInput | string | null
    sheet_data?: BytesFieldUpdateOperationsInput | Buffer
    collections_sheets?: collections_sheetsUpdateManyWithoutSheetsNestedInput
    entities_sheets?: entities_sheetsUpdateManyWithoutSheetsNestedInput
  }

  export type sheetsUncheckedUpdateWithoutIndividualsInput = {
    sheet_id?: IntFieldUpdateOperationsInput | number
    sheet_title?: StringFieldUpdateOperationsInput | string
    sheet_subject?: StringFieldUpdateOperationsInput | string
    sheet_filename?: NullableStringFieldUpdateOperationsInput | string | null
    sheet_data?: BytesFieldUpdateOperationsInput | Buffer
    collections_sheets?: collections_sheetsUncheckedUpdateManyWithoutSheetsNestedInput
    entities_sheets?: entities_sheetsUncheckedUpdateManyWithoutSheetsNestedInput
  }

  export type sheetsUncheckedUpdateManyWithoutIndividualsInput = {
    sheet_id?: IntFieldUpdateOperationsInput | number
    sheet_title?: StringFieldUpdateOperationsInput | string
    sheet_subject?: StringFieldUpdateOperationsInput | string
    sheet_filename?: NullableStringFieldUpdateOperationsInput | string | null
    sheet_data?: BytesFieldUpdateOperationsInput | Buffer
  }

  export type videosUpdateWithoutIndividualsInput = {
    video_title?: StringFieldUpdateOperationsInput | string
    video_description?: StringFieldUpdateOperationsInput | string
    video_filename?: StringFieldUpdateOperationsInput | string
    collections_videos?: collections_videosUpdateManyWithoutVideosNestedInput
    entities_videos?: entities_videosUpdateManyWithoutVideosNestedInput
    videos_data?: videos_dataUpdateOneRequiredWithoutVideosNestedInput
  }

  export type videosUncheckedUpdateWithoutIndividualsInput = {
    video_id?: IntFieldUpdateOperationsInput | number
    video_title?: StringFieldUpdateOperationsInput | string
    video_description?: StringFieldUpdateOperationsInput | string
    video_filename?: StringFieldUpdateOperationsInput | string
    video_data_id?: IntFieldUpdateOperationsInput | number
    collections_videos?: collections_videosUncheckedUpdateManyWithoutVideosNestedInput
    entities_videos?: entities_videosUncheckedUpdateManyWithoutVideosNestedInput
  }

  export type videosUncheckedUpdateManyWithoutIndividualsInput = {
    video_id?: IntFieldUpdateOperationsInput | number
    video_title?: StringFieldUpdateOperationsInput | string
    video_description?: StringFieldUpdateOperationsInput | string
    video_filename?: StringFieldUpdateOperationsInput | string
    video_data_id?: IntFieldUpdateOperationsInput | number
  }

  export type collectionsCreateManyOrganizationsInput = {
    collection_id?: number
    collection_name: string
    individual_id?: number | null
    group_id?: number | null
  }

  export type entitiesCreateManyOrganizationsInput = {
    entity_id?: number
    individual_id?: number | null
    group_id?: number | null
  }

  export type entities_referencesCreateManyOrganizationsInput = {
    reference_id?: number
    individual_id?: number | null
    group_id?: number | null
    title: string
    author: string
    url: string
  }

  export type organizations_membersCreateManyOrganizationsInput = {
    individual_id: number
  }

  export type collectionsUpdateWithoutOrganizationsInput = {
    collection_name?: StringFieldUpdateOperationsInput | string
    individuals?: individualsUpdateOneWithoutCollectionsNestedInput
    groups?: groupsUpdateOneWithoutCollectionsNestedInput
    collections_images?: collections_imagesUpdateManyWithoutCollectionsNestedInput
    collections_sheets?: collections_sheetsUpdateManyWithoutCollectionsNestedInput
    collections_videos?: collections_videosUpdateManyWithoutCollectionsNestedInput
  }

  export type collectionsUncheckedUpdateWithoutOrganizationsInput = {
    collection_id?: IntFieldUpdateOperationsInput | number
    collection_name?: StringFieldUpdateOperationsInput | string
    individual_id?: NullableIntFieldUpdateOperationsInput | number | null
    group_id?: NullableIntFieldUpdateOperationsInput | number | null
    collections_images?: collections_imagesUncheckedUpdateManyWithoutCollectionsNestedInput
    collections_sheets?: collections_sheetsUncheckedUpdateManyWithoutCollectionsNestedInput
    collections_videos?: collections_videosUncheckedUpdateManyWithoutCollectionsNestedInput
  }

  export type collectionsUncheckedUpdateManyWithoutOrganizationsInput = {
    collection_id?: IntFieldUpdateOperationsInput | number
    collection_name?: StringFieldUpdateOperationsInput | string
    individual_id?: NullableIntFieldUpdateOperationsInput | number | null
    group_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type entitiesUpdateWithoutOrganizationsInput = {
    groups?: groupsUpdateOneWithoutEntitiesNestedInput
    individuals?: individualsUpdateOneWithoutEntitiesNestedInput
    entities_images?: entities_imagesUpdateManyWithoutEntitiesNestedInput
    entities_sheets?: entities_sheetsUpdateManyWithoutEntitiesNestedInput
    entities_videos?: entities_videosUpdateManyWithoutEntitiesNestedInput
  }

  export type entitiesUncheckedUpdateWithoutOrganizationsInput = {
    entity_id?: IntFieldUpdateOperationsInput | number
    individual_id?: NullableIntFieldUpdateOperationsInput | number | null
    group_id?: NullableIntFieldUpdateOperationsInput | number | null
    entities_images?: entities_imagesUncheckedUpdateManyWithoutEntitiesNestedInput
    entities_sheets?: entities_sheetsUncheckedUpdateManyWithoutEntitiesNestedInput
    entities_videos?: entities_videosUncheckedUpdateManyWithoutEntitiesNestedInput
  }

  export type entitiesUncheckedUpdateManyWithoutOrganizationsInput = {
    entity_id?: IntFieldUpdateOperationsInput | number
    individual_id?: NullableIntFieldUpdateOperationsInput | number | null
    group_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type entities_referencesUpdateWithoutOrganizationsInput = {
    title?: StringFieldUpdateOperationsInput | string
    author?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    groups?: groupsUpdateOneWithoutEntities_referencesNestedInput
    individuals?: individualsUpdateOneWithoutEntities_referencesNestedInput
  }

  export type entities_referencesUncheckedUpdateWithoutOrganizationsInput = {
    reference_id?: IntFieldUpdateOperationsInput | number
    individual_id?: NullableIntFieldUpdateOperationsInput | number | null
    group_id?: NullableIntFieldUpdateOperationsInput | number | null
    title?: StringFieldUpdateOperationsInput | string
    author?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
  }

  export type entities_referencesUncheckedUpdateManyWithoutOrganizationsInput = {
    reference_id?: IntFieldUpdateOperationsInput | number
    individual_id?: NullableIntFieldUpdateOperationsInput | number | null
    group_id?: NullableIntFieldUpdateOperationsInput | number | null
    title?: StringFieldUpdateOperationsInput | string
    author?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
  }

  export type organizations_membersUpdateWithoutOrganizationsInput = {
    individuals?: individualsUpdateOneRequiredWithoutOrganizations_membersNestedInput
  }

  export type organizations_membersUncheckedUpdateWithoutOrganizationsInput = {
    individual_id?: IntFieldUpdateOperationsInput | number
  }

  export type organizations_membersUncheckedUpdateManyWithoutOrganizationsInput = {
    individual_id?: IntFieldUpdateOperationsInput | number
  }

  export type collections_sheetsCreateManySheetsInput = {
    collections_sheets_id?: number
    collection_id: number
    date_added: Date | string
    pinned: boolean
    date_pinned?: Date | string | null
  }

  export type entities_sheetsCreateManySheetsInput = {
    entities_sheets_id?: number
    entity_id: number
    date_added: Date | string
    pinned: boolean
    date_pinned?: Date | string | null
  }

  export type collections_sheetsUpdateWithoutSheetsInput = {
    date_added?: DateTimeFieldUpdateOperationsInput | Date | string
    pinned?: BoolFieldUpdateOperationsInput | boolean
    date_pinned?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    collections?: collectionsUpdateOneRequiredWithoutCollections_sheetsNestedInput
  }

  export type collections_sheetsUncheckedUpdateWithoutSheetsInput = {
    collections_sheets_id?: IntFieldUpdateOperationsInput | number
    collection_id?: IntFieldUpdateOperationsInput | number
    date_added?: DateTimeFieldUpdateOperationsInput | Date | string
    pinned?: BoolFieldUpdateOperationsInput | boolean
    date_pinned?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type collections_sheetsUncheckedUpdateManyWithoutSheetsInput = {
    collections_sheets_id?: IntFieldUpdateOperationsInput | number
    collection_id?: IntFieldUpdateOperationsInput | number
    date_added?: DateTimeFieldUpdateOperationsInput | Date | string
    pinned?: BoolFieldUpdateOperationsInput | boolean
    date_pinned?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type entities_sheetsUpdateWithoutSheetsInput = {
    date_added?: DateTimeFieldUpdateOperationsInput | Date | string
    pinned?: BoolFieldUpdateOperationsInput | boolean
    date_pinned?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    entities?: entitiesUpdateOneRequiredWithoutEntities_sheetsNestedInput
  }

  export type entities_sheetsUncheckedUpdateWithoutSheetsInput = {
    entities_sheets_id?: IntFieldUpdateOperationsInput | number
    entity_id?: IntFieldUpdateOperationsInput | number
    date_added?: DateTimeFieldUpdateOperationsInput | Date | string
    pinned?: BoolFieldUpdateOperationsInput | boolean
    date_pinned?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type entities_sheetsUncheckedUpdateManyWithoutSheetsInput = {
    entities_sheets_id?: IntFieldUpdateOperationsInput | number
    entity_id?: IntFieldUpdateOperationsInput | number
    date_added?: DateTimeFieldUpdateOperationsInput | Date | string
    pinned?: BoolFieldUpdateOperationsInput | boolean
    date_pinned?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type collections_videosCreateManyVideosInput = {
    collections_videos_id?: number
    collection_id: number
    date_added: Date | string
    pinned: boolean
    date_pinned?: Date | string | null
  }

  export type entities_videosCreateManyVideosInput = {
    entities_videos_id?: number
    entity_id: number
    date_added: Date | string
    pinned: boolean
    date_pinned?: Date | string | null
  }

  export type collections_videosUpdateWithoutVideosInput = {
    date_added?: DateTimeFieldUpdateOperationsInput | Date | string
    pinned?: BoolFieldUpdateOperationsInput | boolean
    date_pinned?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    collections?: collectionsUpdateOneRequiredWithoutCollections_videosNestedInput
  }

  export type collections_videosUncheckedUpdateWithoutVideosInput = {
    collections_videos_id?: IntFieldUpdateOperationsInput | number
    collection_id?: IntFieldUpdateOperationsInput | number
    date_added?: DateTimeFieldUpdateOperationsInput | Date | string
    pinned?: BoolFieldUpdateOperationsInput | boolean
    date_pinned?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type collections_videosUncheckedUpdateManyWithoutVideosInput = {
    collections_videos_id?: IntFieldUpdateOperationsInput | number
    collection_id?: IntFieldUpdateOperationsInput | number
    date_added?: DateTimeFieldUpdateOperationsInput | Date | string
    pinned?: BoolFieldUpdateOperationsInput | boolean
    date_pinned?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type entities_videosUpdateWithoutVideosInput = {
    date_added?: DateTimeFieldUpdateOperationsInput | Date | string
    pinned?: BoolFieldUpdateOperationsInput | boolean
    date_pinned?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    entities?: entitiesUpdateOneRequiredWithoutEntities_videosNestedInput
  }

  export type entities_videosUncheckedUpdateWithoutVideosInput = {
    entities_videos_id?: IntFieldUpdateOperationsInput | number
    entity_id?: IntFieldUpdateOperationsInput | number
    date_added?: DateTimeFieldUpdateOperationsInput | Date | string
    pinned?: BoolFieldUpdateOperationsInput | boolean
    date_pinned?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type entities_videosUncheckedUpdateManyWithoutVideosInput = {
    entities_videos_id?: IntFieldUpdateOperationsInput | number
    entity_id?: IntFieldUpdateOperationsInput | number
    date_added?: DateTimeFieldUpdateOperationsInput | Date | string
    pinned?: BoolFieldUpdateOperationsInput | boolean
    date_pinned?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type videosCreateManyVideos_dataInput = {
    video_id?: number
    video_creator_id: number
    video_title: string
    video_description: string
    video_filename: string
  }

  export type videosUpdateWithoutVideos_dataInput = {
    video_title?: StringFieldUpdateOperationsInput | string
    video_description?: StringFieldUpdateOperationsInput | string
    video_filename?: StringFieldUpdateOperationsInput | string
    collections_videos?: collections_videosUpdateManyWithoutVideosNestedInput
    entities_videos?: entities_videosUpdateManyWithoutVideosNestedInput
    individuals?: individualsUpdateOneRequiredWithoutVideosNestedInput
  }

  export type videosUncheckedUpdateWithoutVideos_dataInput = {
    video_id?: IntFieldUpdateOperationsInput | number
    video_creator_id?: IntFieldUpdateOperationsInput | number
    video_title?: StringFieldUpdateOperationsInput | string
    video_description?: StringFieldUpdateOperationsInput | string
    video_filename?: StringFieldUpdateOperationsInput | string
    collections_videos?: collections_videosUncheckedUpdateManyWithoutVideosNestedInput
    entities_videos?: entities_videosUncheckedUpdateManyWithoutVideosNestedInput
  }

  export type videosUncheckedUpdateManyWithoutVideos_dataInput = {
    video_id?: IntFieldUpdateOperationsInput | number
    video_creator_id?: IntFieldUpdateOperationsInput | number
    video_title?: StringFieldUpdateOperationsInput | string
    video_description?: StringFieldUpdateOperationsInput | string
    video_filename?: StringFieldUpdateOperationsInput | string
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use CollectionsCountOutputTypeDefaultArgs instead
     */
    export type CollectionsCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CollectionsCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use EntitiesCountOutputTypeDefaultArgs instead
     */
    export type EntitiesCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = EntitiesCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use GroupsCountOutputTypeDefaultArgs instead
     */
    export type GroupsCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = GroupsCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ImagesCountOutputTypeDefaultArgs instead
     */
    export type ImagesCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ImagesCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Images_dataCountOutputTypeDefaultArgs instead
     */
    export type Images_dataCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Images_dataCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use IndividualsCountOutputTypeDefaultArgs instead
     */
    export type IndividualsCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = IndividualsCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use OrganizationsCountOutputTypeDefaultArgs instead
     */
    export type OrganizationsCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = OrganizationsCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use SheetsCountOutputTypeDefaultArgs instead
     */
    export type SheetsCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = SheetsCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use VideosCountOutputTypeDefaultArgs instead
     */
    export type VideosCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = VideosCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Videos_dataCountOutputTypeDefaultArgs instead
     */
    export type Videos_dataCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Videos_dataCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use collectionsDefaultArgs instead
     */
    export type collectionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = collectionsDefaultArgs<ExtArgs>
    /**
     * @deprecated Use collections_imagesDefaultArgs instead
     */
    export type collections_imagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = collections_imagesDefaultArgs<ExtArgs>
    /**
     * @deprecated Use collections_sheetsDefaultArgs instead
     */
    export type collections_sheetsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = collections_sheetsDefaultArgs<ExtArgs>
    /**
     * @deprecated Use collections_videosDefaultArgs instead
     */
    export type collections_videosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = collections_videosDefaultArgs<ExtArgs>
    /**
     * @deprecated Use entitiesDefaultArgs instead
     */
    export type entitiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = entitiesDefaultArgs<ExtArgs>
    /**
     * @deprecated Use entities_imagesDefaultArgs instead
     */
    export type entities_imagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = entities_imagesDefaultArgs<ExtArgs>
    /**
     * @deprecated Use entities_referencesDefaultArgs instead
     */
    export type entities_referencesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = entities_referencesDefaultArgs<ExtArgs>
    /**
     * @deprecated Use entities_sheetsDefaultArgs instead
     */
    export type entities_sheetsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = entities_sheetsDefaultArgs<ExtArgs>
    /**
     * @deprecated Use entities_videosDefaultArgs instead
     */
    export type entities_videosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = entities_videosDefaultArgs<ExtArgs>
    /**
     * @deprecated Use groupsDefaultArgs instead
     */
    export type groupsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = groupsDefaultArgs<ExtArgs>
    /**
     * @deprecated Use groups_membersDefaultArgs instead
     */
    export type groups_membersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = groups_membersDefaultArgs<ExtArgs>
    /**
     * @deprecated Use imagesDefaultArgs instead
     */
    export type imagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = imagesDefaultArgs<ExtArgs>
    /**
     * @deprecated Use images_dataDefaultArgs instead
     */
    export type images_dataArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = images_dataDefaultArgs<ExtArgs>
    /**
     * @deprecated Use individualsDefaultArgs instead
     */
    export type individualsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = individualsDefaultArgs<ExtArgs>
    /**
     * @deprecated Use organizationsDefaultArgs instead
     */
    export type organizationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = organizationsDefaultArgs<ExtArgs>
    /**
     * @deprecated Use organizations_membersDefaultArgs instead
     */
    export type organizations_membersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = organizations_membersDefaultArgs<ExtArgs>
    /**
     * @deprecated Use sheetsDefaultArgs instead
     */
    export type sheetsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = sheetsDefaultArgs<ExtArgs>
    /**
     * @deprecated Use user_credentialsDefaultArgs instead
     */
    export type user_credentialsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = user_credentialsDefaultArgs<ExtArgs>
    /**
     * @deprecated Use videosDefaultArgs instead
     */
    export type videosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = videosDefaultArgs<ExtArgs>
    /**
     * @deprecated Use videos_dataDefaultArgs instead
     */
    export type videos_dataArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = videos_dataDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}